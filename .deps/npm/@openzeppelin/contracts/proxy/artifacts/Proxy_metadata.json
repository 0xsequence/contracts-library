{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"stateMutability": "payable",
				"type": "fallback"
			}
		],
		"devdoc": {
			"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol": "Proxy"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [
			":@0xsequence/contracts-library/=src/",
			":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
			":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
			":@openzeppelin/=lib/openzeppelin/",
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/",
			":erc721a/=lib/chiru-labs/erc721a/",
			":forge-std/=lib/forge-std/src/",
			":murky/=lib/murky/src/",
			":solady/=lib/solady/src/"
		]
	},
	"sources": {
		".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol": {
			"keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
			"license": "MIT",
			"urls": [
				"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
				"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
			]
		}
	},
	"version": 1
}