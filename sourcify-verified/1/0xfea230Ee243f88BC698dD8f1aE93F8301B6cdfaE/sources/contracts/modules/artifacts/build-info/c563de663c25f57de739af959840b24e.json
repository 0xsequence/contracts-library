{
	"id": "c563de663c25f57de739af959840b24e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../utils/LibOptim.sol\";\n\nimport \"./commons/submodules/auth/SequenceBaseSig.sol\";\n\nimport \"./commons/ModuleAuth.sol\";\nimport \"./commons/ModuleCalls.sol\";\nimport \"./commons/ModuleCreator.sol\";\n\n\n/**\n * GuestModule implements a Sequence wallet without signatures, nonce or replay protection.\n * executing transactions using this wallet is not an authenticated process, and can be done by any address.\n *\n * @notice This contract is completely public with no security, designed to execute pre-signed transactions\n *   and use Sequence tools without using the wallets.\n */\ncontract GuestModule is\n  ModuleAuth,\n  ModuleCalls,\n  ModuleCreator\n{\n  error DelegateCallNotAllowed(uint256 _index);\n  error NotSupported();\n\n  /**\n   * @notice Allow any caller to execute an action\n   * @param _txs Transactions to process\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256,\n    bytes calldata\n  ) public override {\n    // Hash transaction bundle\n    bytes32 txHash = SequenceBaseSig.subdigest(keccak256(abi.encode('guest:', _txs)));\n\n    // Execute the transactions\n    _executeGuest(txHash, _txs);\n  }\n\n  /**\n   * @notice Allow any caller to execute an action\n   * @param _txs Transactions to process\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) public override {\n    // Hash transaction bundle\n    bytes32 txHash = SequenceBaseSig.subdigest(keccak256(abi.encode('self:', _txs)));\n\n    // Execute the transactions\n    _executeGuest(txHash, _txs);\n  }\n\n  /**\n   * @notice Executes a list of transactions\n   * @param _txHash  Hash of the batch of transactions\n   * @param _txs  Transactions to execute\n   */\n  function _executeGuest(\n    bytes32 _txHash,\n    Transaction[] calldata _txs\n  ) private {\n    // Execute transaction\n    uint256 size = _txs.length;\n    for (uint256 i = 0; i < size; i++) {\n      Transaction calldata transaction = _txs[i];\n\n      if (transaction.delegateCall) revert DelegateCallNotAllowed(i);\n\n      uint256 gasLimit = transaction.gasLimit;\n      if (gasleft() < gasLimit) revert NotEnoughGas(i, gasLimit, gasleft());\n\n      bool success = LibOptim.call(\n        transaction.target,\n        transaction.value,\n        gasLimit == 0 ? gasleft() : gasLimit,\n        transaction.data\n      );\n\n      if (success) {\n        emit TxExecuted(_txHash, i);\n      } else {\n        _revertBytes(\n          transaction.revertOnError,\n          _txHash,\n          i,\n          LibOptim.returnData()\n        );\n      }\n    }\n  }\n\n  /**\n   * @notice Validates any signature image, because the wallet is public and has no owner.\n   * @return true, all signatures are valid.\n   */\n  function _isValidImage(bytes32) internal override pure returns (bool) {\n    return true;\n  }\n\n  /**\n   * Not supported.\n   */\n  function _updateImageHash(bytes32) internal override virtual {\n    revert NotSupported();\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  ) public override (\n    ModuleAuth,\n    ModuleCalls,\n    ModuleCreator\n  ) pure returns (bool) {\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleCreator.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\n\ncontract ModuleCreator is IModuleCreator, ModuleERC165, ModuleSelfAuth {\n  event CreatedContract(address _contract);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {\n    assembly { addr := create(callvalue(), add(_code, 32), mload(_code)) }\n    if (addr == address(0)) revert CreateFailed(_code);\n    emit CreatedContract(addr);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCreator).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\nimport \"./ModuleNonce.sol\";\nimport \"./ModuleOnlyDelegatecall.sol\";\n\nimport \"./interfaces/IModuleCalls.sol\";\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./submodules/nonce/SubModuleNonce.sol\";\nimport \"./submodules/auth/SequenceBaseSig.sol\";\n\nimport \"../../utils/LibOptim.sol\";\n\n\nabstract contract ModuleCalls is IModuleCalls, IModuleAuth, ModuleERC165, ModuleOnlyDelegatecall, ModuleSelfAuth, ModuleNonce {\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @dev Relayers must ensure that the gasLimit specified for each transaction\n   *      is acceptable to them. A user could specify large enough that it could\n   *      consume all the gas available.\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external override virtual onlyDelegatecall {\n    // Validate and update nonce\n    _validateNonce(_nonce);\n\n    // Hash and verify transaction bundle\n    (bool isValid, bytes32 txHash) = _signatureValidation(\n      keccak256(\n        abi.encode(\n          _nonce,\n          _txs\n        )\n      ),\n      _signature\n    );\n\n    if (!isValid) {\n      revert InvalidSignature(txHash, _signature);\n    }\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external override virtual onlySelf {\n    // Hash transaction bundle\n    bytes32 txHash = SequenceBaseSig.subdigest(\n      keccak256(\n        abi.encode('self:', _txs)\n      )\n    );\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Executes a list of transactions\n   * @param _txHash  Hash of the batch of transactions\n   * @param _txs  Transactions to execute\n   */\n  function _execute(\n    bytes32 _txHash,\n    Transaction[] calldata _txs\n  ) private {\n    unchecked {\n      // Execute transaction\n      uint256 size = _txs.length;\n      for (uint256 i = 0; i < size; i++) {\n        Transaction calldata transaction = _txs[i];\n        uint256 gasLimit = transaction.gasLimit;\n\n        if (gasleft() < gasLimit) revert NotEnoughGas(i, gasLimit, gasleft());\n\n        bool success;\n        if (transaction.delegateCall) {\n          success = LibOptim.delegatecall(\n            transaction.target,\n            gasLimit == 0 ? gasleft() : gasLimit,\n            transaction.data\n          );\n        } else {\n          success = LibOptim.call(\n            transaction.target,\n            transaction.value,\n            gasLimit == 0 ? gasleft() : gasLimit,\n            transaction.data\n          );\n        }\n\n        if (success) {\n          emit TxExecuted(_txHash, i);\n        } else {\n          // Avoid copy of return data until neccesary\n          _revertBytes(\n            transaction.revertOnError,\n            _txHash,\n            i,\n            LibOptim.returnData()\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @notice Logs a failed transaction, reverts if the transaction is not optional\n   * @param _revertOnError  Signals if it should revert or just log\n   * @param _txHash         Hash of the transaction\n   * @param _index          Index of the transaction in the batch\n   * @param _reason         Encoded revert message\n   */\n  function _revertBytes(\n    bool _revertOnError,\n    bytes32 _txHash,\n    uint256 _index,\n    bytes memory _reason\n  ) internal {\n    if (_revertOnError) {\n      assembly { revert(add(_reason, 0x20), mload(_reason)) }\n    } else {\n      emit TxFailed(_txHash, _index, _reason);\n    }\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCalls).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../../utils/LibBytes.sol\";\nimport \"../../interfaces/IERC1271Wallet.sol\";\n\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./ModuleERC165.sol\";\n\nimport \"./submodules/auth/SequenceBaseSig.sol\";\nimport \"./submodules/auth/SequenceDynamicSig.sol\";\nimport \"./submodules/auth/SequenceNoChainIdSig.sol\";\nimport \"./submodules/auth/SequenceChainedSig.sol\";\n\n\nabstract contract ModuleAuth is\n  IModuleAuth,\n  ModuleERC165,\n  IERC1271Wallet,\n  SequenceChainedSig\n{\n  using LibBytes for bytes;\n\n  bytes1 internal constant LEGACY_TYPE = hex\"00\";\n  bytes1 internal constant DYNAMIC_TYPE = hex\"01\";\n  bytes1 internal constant NO_CHAIN_ID_TYPE = hex\"02\";\n  bytes1 internal constant CHAINED_TYPE = hex\"03\";\n\n  bytes4 internal constant SELECTOR_ERC1271_BYTES_BYTES = 0x20c13b0b;\n  bytes4 internal constant SELECTOR_ERC1271_BYTES32_BYTES = 0x1626ba7e;\n\n  /**\n   * @notice Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\n   * @dev The signature must be prefixed with a type byte, which is used to determine the recovery method.\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return threshold The required number of signatures needed to consider the signature valid.\n   * @return weight The actual number of signatures collected in the signature.\n   * @return imageHash The imageHash of the configuration that signed the message.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   * @return checkpoint A nonce that is incremented every time a new configuration is set.\n   */\n  function signatureRecovery(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) public override virtual view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  ) {\n    bytes1 signatureType = _signature[0];\n\n    if (signatureType == LEGACY_TYPE) {\n      // networkId digest + base recover\n      subdigest = SequenceBaseSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceBaseSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == DYNAMIC_TYPE) {\n      // networkId digest + dynamic recover\n      subdigest = SequenceBaseSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceDynamicSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == NO_CHAIN_ID_TYPE) {\n      // noChainId digest + dynamic recover\n      subdigest = SequenceNoChainIdSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceDynamicSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == CHAINED_TYPE) {\n      // original digest + chained recover\n      // (subdigest will be computed in the chained recover)\n      return chainedRecover(_digest, _signature);\n    }\n\n    revert InvalidSignatureType(signatureType);\n  }\n\n  /**\n   * @dev Validates a signature.\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return isValid Indicates whether the signature is valid or not.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   */\n  function _signatureValidation(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal override virtual view returns (\n    bool isValid,\n    bytes32 subdigest\n  ) {\n    uint256 threshold; uint256 weight; bytes32 imageHash;\n    (threshold, weight, imageHash, subdigest,) = signatureRecovery(_digest, _signature);\n    isValid = weight >= threshold && _isValidImage(imageHash);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(keccak256(_data), _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n   * @param _hash       keccak256 hash that was signed\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(_hash, _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES32_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleAuth).interfaceId ||\n      _interfaceID == type(IERC1271Wallet).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function updateImageHash(bytes32 _imageHash) external override virtual onlySelf {\n    _updateImageHash(_imageHash);\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../../../../utils/SignatureValidator.sol\";\nimport \"../../../../utils/LibBytesPointer.sol\";\nimport \"../../../../utils/LibBytes.sol\";\nimport \"../../../../utils/LibOptim.sol\";\n\n\n/**\n * @title SequenceBaseSig Library\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice A Solidity implementation for handling signatures in the Sequence protocol.\n */\nlibrary SequenceBaseSig {\n  using LibBytesPointer for bytes;\n\n  uint256 private constant FLAG_SIGNATURE = 0;\n  uint256 private constant FLAG_ADDRESS = 1;\n  uint256 private constant FLAG_DYNAMIC_SIGNATURE = 2;\n  uint256 private constant FLAG_NODE = 3;\n  uint256 private constant FLAG_BRANCH = 4;\n  uint256 private constant FLAG_SUBDIGEST = 5;\n  uint256 private constant FLAG_NESTED = 6;\n\n  error InvalidNestedSignature(bytes32 _hash, address _addr, bytes _signature);\n  error InvalidSignatureFlag(uint256 _flag);\n\n  /**\n  * @notice Generates a subdigest for the input digest (unique for this wallet and network).\n  * @param _digest The input digest to generate the subdigest from.\n  * @return bytes32 The subdigest generated from the input digest.\n  */\n  function subdigest(\n    bytes32 _digest\n  ) internal view returns (bytes32) {\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        block.chainid,\n        address(this),\n        _digest\n      )\n    );\n  }\n\n  /**\n  * @notice Generates the leaf for an address and weight.\n  * @dev The leaf is generated by concatenating the address and weight.\n  *\n  * @param _addr The address to generate the leaf for.\n  * @param _weight The weight to generate the leaf for.\n  * @return bytes32 The leaf generated from the address and weight.\n  */\n  function _leafForAddressAndWeight(\n    address _addr,\n    uint96 _weight\n  ) internal pure returns (bytes32) {\n    unchecked {\n      return bytes32(uint256(_weight) << 160 | uint256(uint160(_addr)));\n    }\n  }\n\n  /**\n  * @notice Generates the leaf for a hardcoded subdigest.\n  * @dev The leaf is generated by hashing 'Sequence static digest:\\n' and the subdigest.\n  * @param _subdigest The subdigest to generate the leaf for.\n  * @return bytes32 The leaf generated from the hardcoded subdigest.\n  */\n  function _leafForHardcodedSubdigest(\n    bytes32 _subdigest\n  ) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked('Sequence static digest:\\n', _subdigest));\n  }\n\n  /**\n  * @notice Generates the leaf for a nested tree node.\n  * @dev The leaf is generated by hashing 'Sequence nested config:\\n', the node, the threshold and the weight.\n  *\n  * @param _node The root of the node to generate the leaf for.\n  * @param _threshold The internal threshold of the tree.\n  * @param _weight The external weight of the tree.\n  * @return bytes32 The leaf generated from the nested tree.\n  */\n  function _leafForNested(\n    bytes32 _node,\n    uint256 _threshold,\n    uint256 _weight\n  ) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight));\n  }\n\n  /**\n   * @notice Returns the weight and root of a signature branch.\n   * @dev If the signature contains a hardcoded subdigest, and it matches the input digest, then the weight is set to 2 ** 256 - 1.\n   *\n   * @param _subdigest The digest to verify the signature against.\n   * @param _signature The signature branch to recover.\n   * @return weight The total weight of the recovered signatures.\n   * @return root The root hash of the recovered configuration.\n   */\n  function recoverBranch(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 weight,\n    bytes32 root\n  ) {\n    unchecked {\n      uint256 rindex;\n\n      // Iterate until the image is completed\n      while (rindex < _signature.length) {\n        // Read next item type\n        uint256 flag;\n        (flag, rindex) = _signature.readUint8(rindex);\n\n        if (flag == FLAG_ADDRESS) {\n          // Read plain address\n          uint8 addrWeight; address addr;\n          (addrWeight, addr, rindex) = _signature.readUint8Address(rindex);\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_SIGNATURE) {\n          // Read weight\n          uint8 addrWeight;\n          (addrWeight, rindex) = _signature.readUint8(rindex);\n\n          // Read single signature and recover signer\n          uint256 nrindex = rindex + 66;\n          address addr = SignatureValidator.recoverSigner(_subdigest, _signature[rindex:nrindex]);\n          rindex = nrindex;\n\n          // Acumulate total weight of the signature\n          weight += addrWeight;\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_DYNAMIC_SIGNATURE) {\n          // Read signer and weight\n          uint8 addrWeight; address addr;\n          (addrWeight, addr, rindex) = _signature.readUint8Address(rindex);\n\n          // Read signature size\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n\n          // Read dynamic size signature\n          uint256 nrindex = rindex + size;\n          if (!SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex])) {\n            revert InvalidNestedSignature(_subdigest, addr, _signature[rindex:nrindex]);\n          }\n          rindex = nrindex;\n\n          // Acumulate total weight of the signature\n          weight += addrWeight;\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_NODE) {\n          // Read node hash\n          bytes32 node;\n          (node, rindex) = _signature.readBytes32(rindex);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_BRANCH) {\n          // Enter a branch of the signature merkle tree\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n          uint256 nrindex = rindex + size;\n\n          uint256 nweight; bytes32 node;\n          (nweight, node) = recoverBranch(_subdigest, _signature[rindex:nrindex]);\n\n          weight += nweight;\n          root = LibOptim.fkeccak256(root, node);\n\n          rindex = nrindex;\n          continue;\n        }\n\n        if (flag == FLAG_NESTED) {\n          // Enter a branch of the signature merkle tree\n          // but with an internal threshold and an external fixed weight\n          uint256 externalWeight;\n          (externalWeight, rindex) = _signature.readUint8(rindex);\n\n          uint256 internalThreshold;\n          (internalThreshold, rindex) = _signature.readUint16(rindex);\n\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n          uint256 nrindex = rindex + size;\n\n          uint256 internalWeight; bytes32 internalRoot;\n          (internalWeight, internalRoot) = recoverBranch(_subdigest, _signature[rindex:nrindex]);\n          rindex = nrindex;\n\n          if (internalWeight >= internalThreshold) {\n            weight += externalWeight;\n          }\n\n          bytes32 node = _leafForNested(internalRoot, internalThreshold, externalWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n\n          continue;\n        }\n\n        if (flag == FLAG_SUBDIGEST) {\n          // A hardcoded always accepted digest\n          // it pushes the weight to the maximum\n          bytes32 hardcoded;\n          (hardcoded, rindex) = _signature.readBytes32(rindex);\n          if (hardcoded == _subdigest) {\n            weight = type(uint256).max;\n          }\n\n          bytes32 node = _leafForHardcodedSubdigest(hardcoded);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        revert InvalidSignatureFlag(flag);\n      }\n    }\n  }\n\n  /**\n   * @notice Returns the threshold, weight, root, and checkpoint of a signature.\n   * @dev To verify the signature, the weight must be greater than or equal to the threshold, and the root\n   *      must match the expected `imageHash` of the wallet.\n   *\n   * @param _subdigest The digest to verify the signature against.\n   * @param _signature The signature to recover.\n   * @return threshold The minimum weight required for the signature to be valid.\n   * @return weight The total weight of the recovered signatures.\n   * @return imageHash The root hash of the recovered configuration\n   * @return checkpoint The checkpoint of the signature.\n   */\n  function recover(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    uint256 checkpoint\n  ) {\n    unchecked {\n      (weight, imageHash) = recoverBranch(_subdigest, _signature[6:]);\n\n      // Threshold & checkpoint are the top nodes\n      // (but they are first on the signature)\n      threshold = LibBytes.readFirstUint16(_signature);\n      checkpoint = LibBytes.readUint32(_signature, 2);\n\n      imageHash = LibOptim.fkeccak256(imageHash, bytes32(threshold));\n      imageHash = LibOptim.fkeccak256(imageHash, bytes32(checkpoint));\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @title Library for optimized EVM operations\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for optimizing certain EVM operations.\n */\nlibrary LibOptim {\n\n  /**\n   * @notice Computes the keccak256 hash of two 32-byte inputs.\n   * @dev It uses only scratch memory space.\n   * @param _a The first 32 bytes of the hash.\n   * @param _b The second 32 bytes of the hash.\n   * @return c The keccak256 hash of the two 32-byte inputs.\n   */\n  function fkeccak256(\n    bytes32 _a,\n    bytes32 _b\n  ) internal pure returns (bytes32 c) {\n    assembly {\n      mstore(0, _a)\n      mstore(32, _b)\n      c := keccak256(0, 64)\n    }\n  }\n\n  /**\n   * @notice Returns the return data from the last call.\n   * @return r The return data from the last call.\n   */\n  function returnData() internal pure returns (bytes memory r) {\n    assembly {\n      let size := returndatasize()\n      r := mload(0x40)\n      let start := add(r, 32)\n      mstore(0x40, add(start, size))\n      mstore(r, size)\n      returndatacopy(start, 0, size)\n    }\n  }\n\n  /**\n   * @notice Calls another contract with the given parameters.\n   * @dev This method doesn't increase the memory pointer.\n   * @param _to The address of the contract to call.\n   * @param _val The value to send to the contract.\n   * @param _gas The amount of gas to provide for the call.\n   * @param _data The data to send to the contract.\n   * @return r The success status of the call.\n   */\n  function call(\n    address _to,\n    uint256 _val,\n    uint256 _gas,\n    bytes calldata _data\n  ) internal returns (bool r) {\n    assembly {\n      let tmp := mload(0x40)\n      calldatacopy(tmp, _data.offset, _data.length)\n\n      r := call(\n        _gas,\n        _to,\n        _val,\n        tmp,\n        _data.length,\n        0,\n        0\n      )\n    }\n  }\n\n  /**\n   * @notice Calls another contract with the given parameters, using delegatecall.\n   * @dev This method doesn't increase the memory pointer.\n   * @param _to The address of the contract to call.\n   * @param _gas The amount of gas to provide for the call.\n   * @param _data The data to send to the contract.\n   * @return r The success status of the call.\n   */\n  function delegatecall(\n    address _to,\n    uint256 _gas,\n    bytes calldata _data\n  ) internal returns (bool r) {\n    assembly {\n      let tmp := mload(0x40)\n      calldatacopy(tmp, _data.offset, _data.length)\n\n      r := delegatecall(\n        _gas,\n        _to,\n        tmp,\n        _data.length,\n        0,\n        0\n      )\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n/**\n * @title Library for reading data from bytes arrays\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for reading data from bytes arrays.\n *\n * @dev These functions do not check if the input index is within the bounds of the data array.\n *         Reading out of bounds may return dirty values.\n */\nlibrary LibBytes {\n\n  /**\n   * @notice Returns the bytes32 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The bytes32 value at the given index.\n   */\n  function readBytes32(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    bytes32 a\n  ) {\n    assembly {\n      a := calldataload(add(data.offset, index))\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   */\n  function readUint8(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    uint8 a\n  ) {\n    assembly {\n      let word := calldataload(add(index, data.offset))\n      a := shr(248, word)\n    }\n  }\n\n  /**\n   * @notice Returns the first uint16 value in the input data.\n   * @param data The input data.\n   * @return a The first uint16 value in the input data.\n   */\n  function readFirstUint16(\n    bytes calldata data\n  ) internal pure returns (\n    uint16 a\n  ) {\n    assembly {\n      let word := calldataload(data.offset)\n      a := shr(240, word)\n    }\n  }\n\n  /**\n   * @notice Returns the uint32 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The uint32 value at the given index.\n   */\n  function readUint32(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    uint32 a\n  ) {\n    assembly {\n      let word := calldataload(add(index, data.offset))\n      a := shr(224, word)\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n/**\n * @title Library for reading data from bytes arrays with a pointer\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for reading data from bytes arrays with a pointer.\n *\n * @dev These functions do not check if the input index is within the bounds of the data array.\n *         Reading out of bounds may return dirty values.\n */\nlibrary LibBytesPointer {\n\n  /**\n   * @dev Returns the first uint16 value in the input data and updates the pointer.\n   * @param _data The input data.\n   * @return a The first uint16 value.\n   * @return newPointer The new pointer.\n   */\n  function readFirstUint16(\n    bytes calldata _data\n  ) internal pure returns (\n    uint16 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(_data.offset)\n      a := shr(240, word)\n      newPointer := 2\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint8(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint8 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := shr(248, word)\n      newPointer := add(_index, 1)\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value and the address at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   * @return b The following address value.\n   * @return newPointer The new pointer.\n   */\n  function readUint8Address(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint8 a,\n    address b,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := shr(248, word)\n      b := and(shr(88, word), 0xffffffffffffffffffffffffffffffffffffffff)\n      newPointer := add(_index, 21)\n    }\n  }\n\n  /**\n   * @notice Returns the uint16 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint16 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint16(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint16 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(240, word), 0xffff)\n      newPointer := add(_index, 2)\n    }\n  }\n\n  /**\n   * @notice Returns the uint24 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint24 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint24(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint24 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(232, word), 0xffffff)\n      newPointer := add(_index, 3)\n    }\n  }\n\n  /**\n   * @notice Returns the uint64 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint64 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint64(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint64 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(192, word), 0xffffffffffffffff)\n      newPointer := add(_index, 8)\n    }\n  }\n\n  /**\n   * @notice Returns the bytes32 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _pointer The index of the value to retrieve.\n   * @return a The bytes32 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readBytes32(\n    bytes calldata _data,\n    uint256 _pointer\n  ) internal pure returns (\n    bytes32 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      a := calldataload(add(_pointer, _data.offset))\n      newPointer := add(_pointer, 32)\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../interfaces/IERC1271Wallet.sol\";\n\nimport \"./LibBytes.sol\";\n\n/**\n * @dev Contains logic for signature validation.\n * Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md)\n * Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\n */\nlibrary SignatureValidator {\n  // Errors\n  error InvalidSignatureLength(bytes _signature);\n  error EmptySignature();\n  error InvalidSValue(bytes _signature, bytes32 _s);\n  error InvalidVValue(bytes _signature, uint256 _v);\n  error UnsupportedSignatureType(bytes _signature, uint256 _type, bool _recoverMode);\n  error SignerIsAddress0(bytes _signature);\n\n  using LibBytes for bytes;\n\n  /***********************************|\n  |             Variables             |\n  |__________________________________*/\n\n  // bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE = 0x20c13b0b;\n\n  // bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE_BYTES32 = 0x1626ba7e;\n\n  // Allowed signature types.\n  uint256 private constant SIG_TYPE_EIP712 = 1;\n  uint256 private constant SIG_TYPE_ETH_SIGN = 2;\n  uint256 private constant SIG_TYPE_WALLET_BYTES32 = 3;\n\n  /***********************************|\n  |        Signature Functions        |\n  |__________________________________*/\n\n /**\n   * @notice Recover the signer of hash, assuming it's an EOA account\n   * @dev Only for SignatureType.EIP712 and SignatureType.EthSign signatures\n   * @param _hash      Hash that was signed\n   *   encoded as (bytes32 r, bytes32 s, uint8 v, ... , SignatureType sigType)\n   */\n  function recoverSigner(\n    bytes32 _hash,\n    bytes calldata _signature\n  ) internal pure returns (address signer) {\n    if (_signature.length != 66) revert InvalidSignatureLength(_signature);\n    uint256 signatureType = _signature.readUint8(_signature.length - 1);\n\n    // Variables are not scoped in Solidity.\n    uint8 v = _signature.readUint8(64);\n    bytes32 r = _signature.readBytes32(0);\n    bytes32 s = _signature.readBytes32(32);\n\n    // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n    // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n    // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n    // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n    //\n    // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n    // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n    // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n    // these malleable signatures as well.\n    //\n    // Source OpenZeppelin\n    // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/cryptography/ECDSA.sol\n\n    if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n      revert InvalidSValue(_signature, s);\n    }\n\n    if (v != 27 && v != 28) {\n      revert InvalidVValue(_signature, v);\n    }\n\n    // Signature using EIP712\n    if (signatureType == SIG_TYPE_EIP712) {\n      signer = ecrecover(_hash, v, r, s);\n\n    // Signed using web3.eth_sign() or Ethers wallet.signMessage()\n    } else if (signatureType == SIG_TYPE_ETH_SIGN) {\n      signer = ecrecover(\n        keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash)),\n        v,\n        r,\n        s\n      );\n\n    } else {\n      // We cannot recover the signer for any other signature type.\n      revert UnsupportedSignatureType(_signature, signatureType, true);\n    }\n\n    // Prevent signer from being 0x0\n    if (signer == address(0x0)) revert SignerIsAddress0(_signature);\n\n    return signer;\n  }\n\n /**\n   * @notice Returns true if the provided signature is valid for the given signer.\n   * @dev Supports SignatureType.EIP712, SignatureType.EthSign, and ERC1271 signatures\n   * @param _hash      Hash that was signed\n   * @param _signer    Address of the signer candidate\n   * @param _signature Signature byte array\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    address _signer,\n    bytes calldata _signature\n  ) internal view returns (bool valid) {\n    if (_signature.length == 0) {\n      revert EmptySignature();\n    }\n\n    uint256 signatureType = uint8(_signature[_signature.length - 1]);\n    if (signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN) {\n      // Recover signer and compare with provided\n      valid = recoverSigner(_hash, _signature) == _signer;\n\n    } else if (signatureType == SIG_TYPE_WALLET_BYTES32) {\n      // Remove signature type before calling ERC1271, restore after call\n      valid = ERC1271_MAGICVALUE_BYTES32 == IERC1271Wallet(_signer).isValidSignature(_hash, _signature[0:_signature.length - 1]);\n\n    } else {\n      // We cannot validate any other signature type.\n      // We revert because we can say nothing about its validity.\n      revert UnsupportedSignatureType(_signature, signatureType, false);\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract ModuleERC165 {\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @dev Adding new hooks will not lead to them being reported by this function\n   *      without upgrading the wallet. In addition, developers must ensure that\n   *      all inherited contracts by the main module don't conflict and are accounted\n   *      to be supported by the supportsInterface method.\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) virtual public pure returns (bool) {\n    return _interfaceID == this.supportsInterface.selector;\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ncontract ModuleSelfAuth {\n  error OnlySelfAuth(address _sender, address _self);\n\n  modifier onlySelf() {\n    if (msg.sender != address(this)) {\n      revert OnlySelfAuth(msg.sender, address(this));\n    }\n    _;\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleCreator {\n  error CreateFailed(bytes _code);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes calldata _code) external payable returns (address addr);\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary SubModuleNonce {\n  // Nonce schema\n  //\n  // - space[160]:nonce[96]\n  //\n  uint256 internal constant NONCE_BITS = 96;\n  bytes32 internal constant NONCE_MASK = bytes32(uint256(type(uint96).max));\n\n  /**\n   * @notice Decodes a raw nonce\n   * @dev Schema: space[160]:type[96]\n   * @param _rawNonce Nonce to be decoded\n   * @return _space The nonce space of the raw nonce\n   * @return _nonce The nonce of the raw nonce\n   */\n  function decodeNonce(uint256 _rawNonce) internal pure returns (\n    uint256 _space,\n    uint256 _nonce\n  ) {\n    unchecked {\n      // Decode nonce\n      _space = _rawNonce >> NONCE_BITS;\n      _nonce = uint256(bytes32(_rawNonce) & NONCE_MASK);\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract IModuleAuth {\n  //                        IMAGE_HASH_KEY = keccak256(\"org.arcadeum.module.auth.upgradable.image.hash\");\n  bytes32 internal constant IMAGE_HASH_KEY = bytes32(0xea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8);\n\n  event ImageHashUpdated(bytes32 newImageHash);\n\n  // Errors\n  error ImageHashIsZero();\n  error InvalidSignatureType(bytes1 _type);\n\n  function _signatureValidation(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal virtual view returns (\n    bool isValid,\n    bytes32 subdigest\n  );\n\n  function signatureRecovery(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) public virtual view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  );\n\n  /**\n   * @notice Validates the signature image\n   * @return true if the signature image is valid\n   */\n  function _isValidImage(bytes32) internal virtual view returns (bool) {\n    return false;\n  }\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function updateImageHash(bytes32 _imageHash) external virtual;\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function _updateImageHash(bytes32 _imageHash) internal virtual;\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleCalls {\n  // Events\n  event TxFailed(bytes32 indexed _tx, uint256 _index, bytes _reason);\n  event TxExecuted(bytes32 indexed _tx, uint256 _index);\n\n  // Errors\n  error NotEnoughGas(uint256 _index, uint256 _requested, uint256 _available);\n  error InvalidSignature(bytes32 _hash, bytes _signature);\n\n  // Transaction structure\n  struct Transaction {\n    bool delegateCall;   // Performs delegatecall\n    bool revertOnError;  // Reverts transaction bundle if tx fails\n    uint256 gasLimit;    // Maximum gas to be forwarded\n    address target;      // Address of the contract to call\n    uint256 value;       // Amount of ETH to pass with the call\n    bytes data;          // calldata to pass\n  }\n\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external;\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external;\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ncontract ModuleOnlyDelegatecall {\n  address private immutable self;\n\n  error OnlyDelegatecall();\n\n  constructor() {\n    self = address(this);\n  }\n\n  /**\n   * @notice Modifier that only allows functions to be called via delegatecall.\n   */\n  modifier onlyDelegatecall() {\n    if (address(this) == self) {\n      revert OnlyDelegatecall();\n    }\n    _;\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleStorage.sol\";\n\nimport \"./submodules/nonce/SubModuleNonce.sol\";\n\n\ncontract ModuleNonce {\n  // Events\n  event NonceChange(uint256 _space, uint256 _newNonce);\n\n  // Errors\n  error BadNonce(uint256 _space, uint256 _provided, uint256 _current);\n\n  //                       NONCE_KEY = keccak256(\"org.arcadeum.module.calls.nonce\");\n  bytes32 private constant NONCE_KEY = bytes32(0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e);\n\n  /**\n   * @notice Returns the next nonce of the default nonce space\n   * @dev The default nonce space is 0x00\n   * @return The next nonce\n   */\n  function nonce() external virtual view returns (uint256) {\n    return readNonce(0);\n  }\n\n  /**\n   * @notice Returns the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @return The next nonce\n   */\n  function readNonce(uint256 _space) public virtual view returns (uint256) {\n    return uint256(ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)));\n  }\n\n  /**\n   * @notice Changes the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @param _nonce Nonce to write on the space\n   */\n  function _writeNonce(uint256 _space, uint256 _nonce) internal {\n    ModuleStorage.writeBytes32Map(NONCE_KEY, bytes32(_space), bytes32(_nonce));\n  }\n\n  /**\n   * @notice Verify if a nonce is valid\n   * @param _rawNonce Nonce to validate (may contain an encoded space)\n   */\n  function _validateNonce(uint256 _rawNonce) internal virtual {\n    // Retrieve current nonce for this wallet\n    (uint256 space, uint256 providedNonce) = SubModuleNonce.decodeNonce(_rawNonce);\n\n    uint256 currentNonce = readNonce(space);\n    if (currentNonce != providedNonce) {\n      revert BadNonce(space, providedNonce, currentNonce);\n    }\n\n    unchecked {\n      uint256 newNonce = providedNonce + 1;\n\n      _writeNonce(space, newNonce);\n      emit NonceChange(space, newNonce);\n      return;\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary ModuleStorage {\n  function writeBytes32(bytes32 _key, bytes32 _val) internal {\n    assembly { sstore(_key, _val) }\n  }\n\n  function readBytes32(bytes32 _key) internal view returns (bytes32 val) {\n    assembly { val := sload(_key) }\n  }\n\n  function writeBytes32Map(bytes32 _key, bytes32 _subKey, bytes32 _val) internal {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { sstore(key, _val) }\n  }\n\n  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { val := sload(key) }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./SequenceBaseSig.sol\";\n\nimport \"../../interfaces/IModuleAuth.sol\";\n\nimport \"../../ModuleSelfAuth.sol\";\nimport \"../../ModuleStorage.sol\";\n\nimport \"../../../../utils/LibBytesPointer.sol\";\nimport \"../../../../utils/LibOptim.sol\";\n\n/**\n * @title Sequence chained auth recovery submodule\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice Defines Sequence signatures that work by delegating control to new configurations.\n * @dev The delegations can be chained together, the first signature is the one that is used to validate\n *      the message, the last signature must match the current on-chain configuration of the wallet.\n */\nabstract contract SequenceChainedSig is IModuleAuth, ModuleSelfAuth {\n  using LibBytesPointer for bytes;\n\n  bytes32 public constant SET_IMAGE_HASH_TYPE_HASH = keccak256(\"SetImageHash(bytes32 imageHash)\");\n\n  error LowWeightChainedSignature(bytes _signature, uint256 threshold, uint256 _weight);\n  error WrongChainedCheckpointOrder(uint256 _current, uint256 _prev);\n\n  /**\n   * @notice Defined the special token that must be signed to delegate control to a new configuration.\n   * @param _imageHash The hash of the new configuration.\n   * @return bytes32 The message hash to be signed.\n   */\n  function _hashSetImageHashStruct(bytes32 _imageHash) internal pure returns (bytes32) {\n    return LibOptim.fkeccak256(SET_IMAGE_HASH_TYPE_HASH, _imageHash);\n  }\n\n  /**\n   * @notice Returns the threshold, weight, root, and checkpoint of a (chained) signature.\n   * \n   * @dev This method return the `threshold`, `weight` and `imageHash` of the last signature in the chain.\n   *      Intermediate signatures are validated directly in this method. The `subdigest` is the one of the\n   *      first signature in the chain (since that's the one that is used to validate the message).\n   *\n   * @param _digest The digest to recover the signature from.\n   * @param _signature The signature to recover.\n   * @return threshold The threshold of the (last) signature.\n   * @return weight The weight of the (last) signature.\n   * @return imageHash The image hash of the (last) signature.\n   * @return subdigest The subdigest of the (first) signature in the chain.\n   * @return checkpoint The checkpoint of the (last) signature.\n   */\n  function chainedRecover(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  ) {\n    uint256 rindex = 1;\n    uint256 sigSize;\n\n    //\n    // First signature out of the loop\n    //\n\n    // First uint24 is the size of the signature\n    (sigSize, rindex) = _signature.readUint24(rindex);\n    uint256 nrindex = sigSize + rindex;\n\n    (\n      threshold,\n      weight,\n      imageHash,\n      subdigest,\n      checkpoint\n    ) = signatureRecovery(\n      _digest,\n      _signature[rindex:nrindex]\n    );\n\n    if (weight < threshold) {\n      revert LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight);\n    }\n\n    rindex = nrindex;\n\n    // The following signatures are handled by this loop.\n    // This is done this way because the first signature does not have a\n    // checkpoint to be validated against.\n    while (rindex < _signature.length) {\n      // First uint24 is the size of the signature\n      (sigSize, rindex) = _signature.readUint24(rindex);\n      nrindex = sigSize + rindex;\n\n      uint256 nextCheckpoint;\n\n      (\n        threshold,\n        weight,\n        imageHash,,\n        // Do not change the subdigest;\n        // it should remain that of the first signature.\n        nextCheckpoint\n      ) = signatureRecovery(\n        _hashSetImageHashStruct(imageHash),\n        _signature[rindex:nrindex]\n      );\n\n      // Validate signature\n      if (weight < threshold) {\n        revert LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight);\n      }\n\n      // Checkpoints must be provided in descending order\n      // since the first signature is the one that is used to validate the message\n      // and the last signature is the one that is used to validate the current configuration\n      if (nextCheckpoint >= checkpoint) {\n        revert WrongChainedCheckpointOrder(nextCheckpoint, checkpoint);\n      }\n\n      checkpoint = nextCheckpoint;\n      rindex = nrindex;\n    }\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary SequenceNoChainIdSig {\n\n  /**\n   * @notice Computes a subdigest for a Sequence signature that works on all chains.\n   * @dev The subdigest is computed by removing the chain ID from the digest (using 0 instead).\n   * @param _digest The digest of the chain of signatures.\n   * @return bytes32 The subdigest with no chain ID.\n   */\n  function subdigest(bytes32 _digest) internal view returns (bytes32) {\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        uint256(0),\n        address(this),\n        _digest\n      )\n    );\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./SequenceBaseSig.sol\";\n\n\nlibrary SequenceDynamicSig {\n\n  /**\n   * @notice Recover a \"dynamically encoded\" Sequence signature.\n   * @dev The Signature is stripped of the first byte, which is the encoding flag.\n   *\n   * @param _subdigest The digest of the signature.\n   * @param _signature The Sequence signature.\n   * @return threshold The threshold weight required to validate the signature.\n   * @return weight The weight of the signature.\n   * @return imageHash The hash of the recovered configuration.\n   * @return checkpoint The checkpoint of the configuration.\n   */\n  function recover(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    uint256 checkpoint\n  ) {\n    return SequenceBaseSig.recover(_subdigest, _signature[1:]);\n  }\n}\n"
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC1271Wallet {\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _hash       keccak256 hash that was signed\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@0xsequence/contracts-library/=src/",
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"murky/=lib/murky/src/",
				"@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
				"@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
				"erc721a/=lib/chiru-labs/erc721a/",
				"erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/",
				"@openzeppelin/=lib/openzeppelin/",
				"solady/=lib/solady/src/"
			]
		}
	},
	"output": {
		"contracts": {
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol": {
				"IERC1271Wallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes,bytes)": "20c13b0b",
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":\"IERC1271Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol": {
				"GuestModule": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "DelegateCallNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotSupported",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							},
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"params": {
									"_txs": "Transactions to process"
								}
							},
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to process"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":640:3333  contract GuestModule is... */\n  mstore(0x40, 0xa0)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":200:204  this */\n  address\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":185:205  self = address(this) */\n  0x80\n  mstore\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":640:3333  contract GuestModule is... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ffc9d227228e624d76834105f24ceb5cb9c5a8675150ad2031c88a10259e303\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":640:3333  contract GuestModule is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61c2926c\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8c3f5563\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8c3f5563\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x90042baf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaffed0e0\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x61c2926c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7a9a1628\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x853c5068\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x20c13b0b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x20c13b0b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29561426\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x57c56d6b\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1626ba7e\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3127:3331  function supportsInterface(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3127:3331  function supportsInterface(... */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5489:5805  function isValidSignature(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1646:1712   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1634:1713   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1616:1714   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1604:1606   */\n      0x20\n        /* \"#utility.yul\":1589:1607   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5489:5805  function isValidSignature(... */\n      tag_21\n        /* \"#utility.yul\":1472:1720   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4525:4857  function isValidSignature(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_24\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6456:6575  function updateImageHash(bytes32 _imageHash) external override virtual onlySelf {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":811:906  bytes32 public constant SET_IMAGE_HASH_TYPE_HASH = keccak256(\"SetImageHash(bytes32 imageHash)\") */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":862:906  keccak256(\"SetImageHash(bytes32 imageHash)\") */\n      0x8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":811:906  bytes32 public constant SET_IMAGE_HASH_TYPE_HASH = keccak256(\"SetImageHash(bytes32 imageHash)\") */\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":2778:2803   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2766:2768   */\n      0x20\n        /* \"#utility.yul\":2751:2769   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":811:906  bytes32 public constant SET_IMAGE_HASH_TYPE_HASH = keccak256(\"SetImageHash(bytes32 imageHash)\") */\n      tag_21\n        /* \"#utility.yul\":2632:2809   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1290:1552  function selfExecute(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_37\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":890:1182  function execute(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_37\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1675:3161  function signatureRecovery(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4827:4852   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":4883:4885   */\n      0x20\n        /* \"#utility.yul\":4868:4886   */\n      dup7\n      add\n        /* \"#utility.yul\":4861:4895   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":4911:4929   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":4904:4938   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4969:4971   */\n      0x60\n        /* \"#utility.yul\":4954:4972   */\n      dup4\n      add\n        /* \"#utility.yul\":4947:4981   */\n      mstore\n        /* \"#utility.yul\":5012:5015   */\n      0x80\n        /* \"#utility.yul\":4997:5016   */\n      dup3\n      add\n        /* \"#utility.yul\":4990:5025   */\n      mstore\n        /* \"#utility.yul\":4814:4817   */\n      0xa0\n        /* \"#utility.yul\":4799:4818   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1675:3161  function signatureRecovery(... */\n      tag_21\n        /* \"#utility.yul\":4568:5031   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":938:1094  function readNonce(uint256 _space) public virtual view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_42\n      tag_64\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n    tag_11:\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":6753:6795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6741:6796   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6723:6797   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6711:6713   */\n      0x20\n        /* \"#utility.yul\":6696:6714   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n      tag_21\n        /* \"#utility.yul\":6577:6803   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":670:757  function nonce() external virtual view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_42\n      tag_77\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3127:3331  function supportsInterface(... */\n    tag_20:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3270:3274  bool */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3289:3326  super.supportsInterface(_interfaceID) */\n      tag_80\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3313:3325  _interfaceID */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3289:3312  super.supportsInterface */\n      tag_81\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3289:3326  super.supportsInterface(_interfaceID) */\n      jump\t// in\n    tag_80:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3282:3326  return super.supportsInterface(_interfaceID) */\n      swap3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":3127:3331  function supportsInterface(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5489:5805  function isValidSignature(... */\n    tag_27:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5608:5614  bytes4 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5650:5662  bool isValid */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5667:5707  _signatureValidation(_hash, _signatures) */\n      tag_83\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5688:5693  _hash */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5695:5706  _signatures */\n      dup6\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5667:5687  _signatureValidation */\n      tag_84\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5667:5707  _signatureValidation(_hash, _signatures) */\n      jump\t// in\n    tag_83:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5649:5707  (bool isValid,) = _signatureValidation(_hash, _signatures) */\n      pop\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5717:5724  isValid */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5713:5778  if (isValid) {... */\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5741:5771  SELECTOR_ERC1271_BYTES32_BYTES */\n      0x1626ba7e00000000000000000000000000000000000000000000000000000000\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5734:5771  return SELECTOR_ERC1271_BYTES32_BYTES */\n      jump(tag_82)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5713:5778  if (isValid) {... */\n    tag_85:\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5798:5799  0 */\n      0x00\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":5489:5805  function isValidSignature(... */\n    tag_82:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4525:4857  function isValidSignature(... */\n    tag_34:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4651:4657  bytes4 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4693:4705  bool isValid */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4710:4761  _signatureValidation(keccak256(_data), _signatures) */\n      tag_87\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4741:4746  _data */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4731:4747  keccak256(_data) */\n      mload(0x40)\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4749:4760  _signatures */\n      dup6\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4710:4730  _signatureValidation */\n      tag_84\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4710:4761  _signatureValidation(keccak256(_data), _signatures) */\n      jump\t// in\n    tag_87:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4692:4761  (bool isValid,) = _signatureValidation(keccak256(_data), _signatures) */\n      pop\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4771:4778  isValid */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4767:4830  if (isValid) {... */\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4795:4823  SELECTOR_ERC1271_BYTES_BYTES */\n      0x20c13b0b00000000000000000000000000000000000000000000000000000000\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4788:4823  return SELECTOR_ERC1271_BYTES_BYTES */\n      jump(tag_86)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4767:4830  if (isValid) {... */\n    tag_90:\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4850:4851  0 */\n      0x00\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":4525:4857  function isValidSignature(... */\n    tag_86:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6456:6575  function updateImageHash(bytes32 _imageHash) external override virtual onlySelf {... */\n    tag_40:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":178:188  msg.sender */\n      caller\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":200:204  this */\n      address\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":178:205  msg.sender != address(this) */\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":174:268  if (msg.sender != address(this)) {... */\n      tag_92\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      mload(0x40)\n      0xe125889400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":235:245  msg.sender */\n      caller\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7319:7353   */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":255:259  this */\n      address\n        /* \"#utility.yul\":7369:7387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7362:7405   */\n      mstore\n        /* \"#utility.yul\":7231:7249   */\n      0x44\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":174:268  if (msg.sender != address(this)) {... */\n    tag_92:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6542:6570  _updateImageHash(_imageHash) */\n      tag_96\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6559:6569  _imageHash */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6542:6558  _updateImageHash */\n      tag_97\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6542:6570  _updateImageHash(_imageHash) */\n      jump\t// in\n    tag_96:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6456:6575  function updateImageHash(bytes32 _imageHash) external override virtual onlySelf {... */\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1290:1552  function selfExecute(... */\n    tag_50:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1401:1415  bytes32 txHash */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1418:1481  SequenceBaseSig.subdigest(keccak256(abi.encode('self:', _txs))) */\n      tag_99\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1474:1478  _txs */\n      dup4\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1454:1479  abi.encode('self:', _txs) */\n      add(0x20, mload(0x40))\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1444:1480  keccak256(abi.encode('self:', _txs)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1418:1443  SequenceBaseSig.subdigest */\n      tag_102\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1418:1481  SequenceBaseSig.subdigest(keccak256(abi.encode('self:', _txs))) */\n      jump\t// in\n    tag_99:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1401:1481  bytes32 txHash = SequenceBaseSig.subdigest(keccak256(abi.encode('self:', _txs))) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1520:1547  _executeGuest(txHash, _txs) */\n      tag_103\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1534:1540  txHash */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1542:1546  _txs */\n      dup5\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1520:1533  _executeGuest */\n      tag_104\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1520:1547  _executeGuest(txHash, _txs) */\n      jump\t// in\n    tag_103:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1364:1552  {... */\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1290:1552  function selfExecute(... */\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":890:1182  function execute(... */\n    tag_55:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1030:1044  bytes32 txHash */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1047:1111  SequenceBaseSig.subdigest(keccak256(abi.encode('guest:', _txs))) */\n      tag_106\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1104:1108  _txs */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1083:1109  abi.encode('guest:', _txs) */\n      add(0x20, mload(0x40))\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1047:1111  SequenceBaseSig.subdigest(keccak256(abi.encode('guest:', _txs))) */\n    tag_106:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1030:1111  bytes32 txHash = SequenceBaseSig.subdigest(keccak256(abi.encode('guest:', _txs))) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1150:1177  _executeGuest(txHash, _txs) */\n      tag_109\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1164:1170  txHash */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1172:1176  _txs */\n      dup8\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1150:1163  _executeGuest */\n      tag_104\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1150:1177  _executeGuest(txHash, _txs) */\n      jump\t// in\n    tag_109:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":993:1182  {... */\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":890:1182  function execute(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1675:3161  function signatureRecovery(... */\n    tag_59:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1801:1818  uint256 threshold */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1824:1838  uint256 weight */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1844:1861  bytes32 imageHash */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1867:1884  bytes32 subdigest */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1890:1908  uint256 checkpoint */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1919:1939  bytes1 signatureType */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1942:1952  _signature */\n      dup8\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1953:1954  0 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1942:1955  _signature[0] */\n      dup2\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      add\n      calldataload\n      0xff00000000000000000000000000000000000000000000000000000000000000\n      and\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1962:2265  if (signatureType == LEGACY_TYPE) {... */\n      tag_114\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2057:2091  SequenceBaseSig.subdigest(_digest) */\n      tag_115\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2083:2090  _digest */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2057:2082  SequenceBaseSig.subdigest */\n      tag_102\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2057:2091  SequenceBaseSig.subdigest(_digest) */\n      jump\t// in\n    tag_115:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2045:2091  subdigest = SequenceBaseSig.subdigest(_digest) */\n      swap3\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2144:2190  SequenceBaseSig.recover(subdigest, _signature) */\n      tag_116\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2168:2177  subdigest */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2179:2189  _signature */\n      dup10\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2144:2167  SequenceBaseSig.recover */\n      tag_117\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2144:2190  SequenceBaseSig.recover(subdigest, _signature) */\n      jump\t// in\n    tag_116:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2099:2190  (threshold, weight, imageHash, checkpoint) = SequenceBaseSig.recover(subdigest, _signature) */\n      swap3\n      swap9\n      pop\n      swap1\n      swap7\n      pop\n      swap5\n      pop\n      swap2\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2198:2258  return (threshold, weight, imageHash, subdigest, checkpoint) */\n      tag_110\n      swap1\n      pop\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1962:2265  if (signatureType == LEGACY_TYPE) {... */\n    tag_114:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2275:2304  signatureType == DYNAMIC_TYPE */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      dup2\n      and\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2271:2581  if (signatureType == DYNAMIC_TYPE) {... */\n      tag_118\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2370:2404  SequenceBaseSig.subdigest(_digest) */\n      tag_119\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2396:2403  _digest */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2370:2395  SequenceBaseSig.subdigest */\n      tag_102\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2370:2404  SequenceBaseSig.subdigest(_digest) */\n      jump\t// in\n    tag_119:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2358:2404  subdigest = SequenceBaseSig.subdigest(_digest) */\n      swap3\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2457:2506  SequenceDynamicSig.recover(subdigest, _signature) */\n      tag_116\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2484:2493  subdigest */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2495:2505  _signature */\n      dup10\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2457:2483  SequenceDynamicSig.recover */\n      tag_121\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2457:2506  SequenceDynamicSig.recover(subdigest, _signature) */\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2271:2581  if (signatureType == DYNAMIC_TYPE) {... */\n    tag_118:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2591:2624  signatureType == NO_CHAIN_ID_TYPE */\n      0xfe00000000000000000000000000000000000000000000000000000000000000\n      0xff00000000000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2587:2906  if (signatureType == NO_CHAIN_ID_TYPE) {... */\n      tag_122\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2690:2729  SequenceNoChainIdSig.subdigest(_digest) */\n      tag_119\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2721:2728  _digest */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2690:2720  SequenceNoChainIdSig.subdigest */\n      tag_124\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2690:2729  SequenceNoChainIdSig.subdigest(_digest) */\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2587:2906  if (signatureType == NO_CHAIN_ID_TYPE) {... */\n    tag_122:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2916:2945  signatureType == CHAINED_TYPE */\n      0xfd00000000000000000000000000000000000000000000000000000000000000\n      0xff00000000000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2912:3108  if (signatureType == CHAINED_TYPE) {... */\n      tag_126\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3066:3101  chainedRecover(_digest, _signature) */\n      tag_127\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3081:3088  _digest */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3090:3100  _signature */\n      dup10\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3066:3080  chainedRecover */\n      tag_128\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3066:3101  chainedRecover(_digest, _signature) */\n      jump\t// in\n    tag_127:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3059:3101  return chainedRecover(_digest, _signature) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      jump(tag_110)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":2912:3108  if (signatureType == CHAINED_TYPE) {... */\n    tag_126:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3121:3156  InvalidSignatureType(signatureType) */\n      mload(0x40)\n      0x6085cd8200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11707:11773   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11695:11774   */\n      dup3\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3121:3156  InvalidSignatureType(signatureType) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11677:11775   */\n      mstore\n        /* \"#utility.yul\":11650:11668   */\n      0x24\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3121:3156  InvalidSignatureType(signatureType) */\n      tag_93\n        /* \"#utility.yul\":11533:11781   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":1675:3161  function signatureRecovery(... */\n    tag_110:\n      swap4\n      swap8\n      swap3\n      swap7\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":938:1094  function readNonce(uint256 _space) public virtual view returns (uint256) {... */\n    tag_66:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1002:1009  uint256 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1032:1088  ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)) */\n      tag_80\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":453:519  0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e */\n      0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1080:1086  _space */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1032:1060  ModuleStorage.readBytes32Map */\n      tag_133\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1032:1088  ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)) */\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n    tag_72:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":550:562  address addr */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":178:188  msg.sender */\n      caller\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":200:204  this */\n      address\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":178:205  msg.sender != address(this) */\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":174:268  if (msg.sender != address(this)) {... */\n      tag_135\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      mload(0x40)\n      0xe125889400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":235:245  msg.sender */\n      caller\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7319:7353   */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":255:259  this */\n      address\n        /* \"#utility.yul\":7369:7387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7362:7405   */\n      mstore\n        /* \"#utility.yul\":7231:7249   */\n      0x44\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      tag_93\n        /* \"#utility.yul\":7084:7411   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":174:268  if (msg.sender != address(this)) {... */\n    tag_135:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":631:636  _code */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":625:637  mload(_code) */\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":620:622  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":613:618  _code */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":609:623  add(_code, 32) */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":596:607  callvalue() */\n      callvalue\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":589:638  create(callvalue(), add(_code, 32), mload(_code)) */\n      create\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":581:638  addr := create(callvalue(), add(_code, 32), mload(_code)) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":649:667  addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":645:695  if (addr == address(0)) revert CreateFailed(_code) */\n      tag_138\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":689:694  _code */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":676:695  CreateFailed(_code) */\n      mload(0x40)\n      0x0d25719100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":645:695  if (addr == address(0)) revert CreateFailed(_code) */\n    tag_138:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":706:727  CreatedContract(addr) */\n      mload(0x40)\n        /* \"#utility.yul\":6753:6795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6741:6796   */\n      dup3\n      and\n        /* \"#utility.yul\":6723:6797   */\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":706:727  CreatedContract(addr) */\n      0xa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c\n      swap1\n        /* \"#utility.yul\":6711:6713   */\n      0x20\n        /* \"#utility.yul\":6696:6714   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":706:727  CreatedContract(addr) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":670:757  function nonce() external virtual view returns (uint256) {... */\n    tag_77:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":718:725  uint256 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":740:752  readNonce(0) */\n      tag_143\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":750:751  0 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":740:749  readNonce */\n      tag_66\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":740:752  readNonce(0) */\n      jump\t// in\n    tag_143:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":733:752  return readNonce(0) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":670:757  function nonce() external virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n    tag_81:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1028:1032  bool */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1044:1092  _interfaceID == type(IModuleCreator).interfaceId */\n      0x6ffbd45100000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1040:1120  if (_interfaceID == type(IModuleCreator).interfaceId) {... */\n      tag_145\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1109:1113  true */\n      0x01\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1040:1120  if (_interfaceID == type(IModuleCreator).interfaceId) {... */\n    tag_145:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1133:1170  super.supportsInterface(_interfaceID) */\n      tag_80\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1157:1169  _interfaceID */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1133:1156  super.supportsInterface */\n      tag_147\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1133:1170  super.supportsInterface(_interfaceID) */\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3480:3866  function _signatureValidation(... */\n    tag_84:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3611:3623  bool isValid */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3629:3646  bytes32 subdigest */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3657:3674  uint256 threshold */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3676:3690  uint256 weight */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3692:3709  bytes32 imageHash */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3760:3798  signatureRecovery(_digest, _signature) */\n      tag_149\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3778:3785  _digest */\n      dup9\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3787:3797  _signature */\n      dup9\n      dup9\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3760:3777  signatureRecovery */\n      tag_59\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3760:3798  signatureRecovery(_digest, _signature) */\n      jump\t// in\n    tag_149:\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3715:3798  (threshold, weight, imageHash, subdigest,) = signatureRecovery(_digest, _signature) */\n      swap7\n      pop\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3814:3833  weight >= threshold */\n      dup3\n      dup3\n      lt\n      dup1\n      iszero\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3814:3861  weight >= threshold && _isValidImage(imageHash) */\n      tag_151\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2779:2783  true */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3837:3861  _isValidImage(imageHash) */\n    tag_151:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3804:3861  isValid = weight >= threshold && _isValidImage(imageHash) */\n      swap5\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3651:3866  {... */\n      pop\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":3480:3866  function _signatureValidation(... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2824:2917  function _updateImageHash(bytes32) internal override virtual {... */\n    tag_97:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2898:2912  NotSupported() */\n      mload(0x40)\n      0xa038794000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1173:1397  function subdigest(... */\n    tag_102:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1279:1386  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":12792:12858   */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1279:1386  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":12780:12859   */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1325:1338  block.chainid */\n      chainid\n        /* \"#utility.yul\":12875:12886   */\n      0x22\n      dup3\n      add\n        /* \"#utility.yul\":12868:12895   */\n      mstore\n        /* \"#utility.yul\":12946:13012   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1356:1360  this */\n      address\n        /* \"#utility.yul\":12933:12935   */\n      0x60\n        /* \"#utility.yul\":12929:12944   */\n      shl\n        /* \"#utility.yul\":12925:13013   */\n      and\n        /* \"#utility.yul\":12911:12923   */\n      0x42\n      dup3\n      add\n        /* \"#utility.yul\":12904:13014   */\n      mstore\n        /* \"#utility.yul\":13030:13042   */\n      0x56\n      dup2\n      add\n        /* \"#utility.yul\":13023:13051   */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1240:1247  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":13067:13079   */\n      0x76\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1279:1386  abi.encodePacked(... */\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1262:1392  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1255:1392  return keccak256(... */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1173:1397  function subdigest(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1710:2544  function _executeGuest(... */\n    tag_104:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1847:1851  _txs */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1832:1844  uint256 size */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1864:2540  for (uint256 i = 0; i < size; i++) {... */\n    tag_158:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1888:1892  size */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1884:1885  i */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1884:1892  i < size */\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1864:2540  for (uint256 i = 0; i < size; i++) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1907:1939  Transaction calldata transaction */\n      calldatasize\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1942:1946  _txs */\n      dup5\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1947:1948  i */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1942:1949  _txs[i] */\n      dup2\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_162\n      tag_113\n      jump\t// in\n    tag_162:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1907:1949  Transaction calldata transaction = _txs[i] */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1962:1986  transaction.delegateCall */\n      tag_165\n      0x20\n      dup3\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1907:1949  Transaction calldata transaction = _txs[i] */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1962:1986  transaction.delegateCall */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1958:2020  if (transaction.delegateCall) revert DelegateCallNotAllowed(i) */\n      iszero\n      tag_167\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1995:2020  DelegateCallNotAllowed(i) */\n      mload(0x40)\n      0x230d1ccc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2778:2803   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2751:2769   */\n      0x24\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1995:2020  DelegateCallNotAllowed(i) */\n      tag_93\n        /* \"#utility.yul\":2632:2809   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1958:2020  if (transaction.delegateCall) revert DelegateCallNotAllowed(i) */\n    tag_167:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2048:2068  transaction.gasLimit */\n      0x40\n      dup2\n      add\n      calldataload\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2080:2089  gasleft() */\n      gas\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2080:2100  gasleft() < gasLimit */\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2076:2145  if (gasleft() < gasLimit) revert NotEnoughGas(i, gasLimit, gasleft()) */\n      iszero\n      tag_169\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2122:2123  i */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2125:2133  gasLimit */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2135:2144  gasleft() */\n      gas\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2109:2145  NotEnoughGas(i, gasLimit, gasleft()) */\n      mload(0x40)\n      0x2bb3e3ba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":13869:13894   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":13910:13928   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":13903:13937   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":13953:13971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13946:13980   */\n      mstore\n        /* \"#utility.yul\":13842:13860   */\n      0x64\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2109:2145  NotEnoughGas(i, gasLimit, gasleft()) */\n      tag_93\n        /* \"#utility.yul\":13667:13986   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2076:2145  if (gasleft() < gasLimit) revert NotEnoughGas(i, gasLimit, gasleft()) */\n    tag_169:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2154:2166  bool success */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2169:2317  LibOptim.call(... */\n      tag_172\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2192:2210  transaction.target */\n      tag_173\n      0x80\n      dup6\n      add\n      0x60\n      dup7\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2220:2237  transaction.value */\n      0x80\n      dup6\n      add\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2247:2260  gasLimit == 0 */\n      dup5\n      iszero\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2247:2283  gasLimit == 0 ? gasleft() : gasLimit */\n      tag_175\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2275:2283  gasLimit */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2247:2283  gasLimit == 0 ? gasleft() : gasLimit */\n      jump(tag_176)\n    tag_175:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2263:2272  gasleft() */\n      gas\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2247:2283  gasLimit == 0 ? gasleft() : gasLimit */\n    tag_176:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2293:2309  transaction.data */\n      tag_177\n      0xa0\n      dup9\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2293:2304  transaction */\n      dup9\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2293:2309  transaction.data */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2169:2182  LibOptim.call */\n      tag_179\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2169:2317  LibOptim.call(... */\n      jump\t// in\n    tag_172:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2154:2317  bool success = LibOptim.call(... */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2330:2337  success */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2326:2534  if (success) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2365:2372  _txHash */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2354:2376  TxExecuted(_txHash, i) */\n      0x5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2374:2375  i */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2354:2376  TxExecuted(_txHash, i) */\n      mload(0x40)\n      tag_181\n      swap2\n        /* \"#utility.yul\":2778:2803   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2766:2768   */\n      0x20\n        /* \"#utility.yul\":2751:2769   */\n      add\n      swap1\n        /* \"#utility.yul\":2632:2809   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2354:2376  TxExecuted(_txHash, i) */\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2326:2534  if (success) {... */\n      jump(tag_183)\n    tag_180:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2401:2525  _revertBytes(... */\n      tag_183\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2425:2450  transaction.revertOnError */\n      tag_184\n      0x40\n      dup6\n      add\n      0x20\n      dup7\n      add\n      tag_166\n      jump\t// in\n    tag_184:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2462:2469  _txHash */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2481:2482  i */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2494:2515  LibOptim.returnData() */\n      tag_185\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2494:2513  LibOptim.returnData */\n      tag_186\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2494:2515  LibOptim.returnData() */\n      jump\t// in\n    tag_185:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2401:2413  _revertBytes */\n      tag_187\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":2401:2525  _revertBytes(... */\n      jump\t// in\n    tag_183:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1899:2540  {... */\n      pop\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1894:1897  i++ */\n      dup1\n      dup1\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      swap2\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1864:2540  for (uint256 i = 0; i < size; i++) {... */\n      jump(tag_158)\n    tag_159:\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1799:2544  {... */\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":1710:2544  function _executeGuest(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8892:9534  function recover(... */\n    tag_117:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8996:9013  uint256 threshold */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9131:9172  recoverBranch(_subdigest, _signature[6:]) */\n      tag_191\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9145:9155  _subdigest */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9157:9171  _signature[6:] */\n      tag_192\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9157:9167  _signature */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9168:9169  6 */\n      0x06\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9157:9167  _signature */\n      dup2\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9157:9171  _signature[6:] */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9131:9144  recoverBranch */\n      tag_194\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9131:9172  recoverBranch(_subdigest, _signature[6:]) */\n      jump\t// in\n    tag_191:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      swap1\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1585:1610  calldataload(data.offset) */\n      dup8\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1626:1629  240 */\n      0xf0\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1622:1636  shr(240, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup2\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      dup1\n      dup5\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup5\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9379:9380  2 */\n      0x02\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":2034:2057  add(index, data.offset) */\n      swap1\n      swap11\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":2021:2058  calldataload(add(index, data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":2074:2077  224 */\n      0xe0\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":2070:2084  shr(224, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      swap1\n      dup2\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap9\n      swap1\n      swap2\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1622:1636  shr(240, word) */\n      swap1\n      swap10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":9109:9172  (weight, imageHash) = recoverBranch(_subdigest, _signature[6:]) */\n      swap2\n      swap9\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":2070:2084  shr(224, word) */\n      swap6\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8892:9534  function recover(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":648:910  function recover(... */\n    tag_121:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":752:769  uint256 threshold */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":854:905  SequenceBaseSig.recover(_subdigest, _signature[1:]) */\n      tag_203\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":878:888  _subdigest */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":890:904  _signature[1:] */\n      tag_204\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":890:900  _signature */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":901:902  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":890:900  _signature */\n      dup2\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":890:904  _signature[1:] */\n      tag_193\n      jump\t// in\n    tag_204:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":854:877  SequenceBaseSig.recover */\n      tag_117\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":854:905  SequenceBaseSig.recover(_subdigest, _signature[1:]) */\n      jump\t// in\n    tag_203:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":847:905  return SequenceBaseSig.recover(_subdigest, _signature[1:]) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":648:910  function recover(... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":404:617  function subdigest(bytes32 _digest) internal view returns (bytes32) {... */\n    tag_124:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":502:606  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":12792:12858   */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":502:606  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":12780:12859   */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":463:470  bytes32 */\n      0x00\n        /* \"#utility.yul\":12875:12886   */\n      0x22\n      dup3\n      add\n        /* \"#utility.yul\":12868:12895   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12946:13012   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":576:580  this */\n      address\n        /* \"#utility.yul\":12933:12935   */\n      0x60\n        /* \"#utility.yul\":12929:12944   */\n      shl\n        /* \"#utility.yul\":12925:13013   */\n      and\n        /* \"#utility.yul\":12911:12923   */\n      0x42\n      dup4\n      add\n        /* \"#utility.yul\":12904:13014   */\n      mstore\n        /* \"#utility.yul\":13030:13042   */\n      0x56\n      dup3\n      add\n        /* \"#utility.yul\":13023:13051   */\n      dup4\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":463:470  bytes32 */\n      swap1\n        /* \"#utility.yul\":13067:13079   */\n      0x76\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":502:606  abi.encodePacked(... */\n      tag_155\n        /* \"#utility.yul\":12494:13085   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2320:4379  function chainedRecover(... */\n    tag_128:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2428:2445  uint256 threshold */\n      0x00\n      dup1\n      dup1\n      dup1\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      0x04\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2563:2564  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3290:3315  add(_index, _data.offset) */\n      dup9\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3277:3316  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3336:3339  232 */\n      0xe8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2428:2445  uint256 threshold */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2768:2784  sigSize + rindex */\n      tag_210\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2768:2784  sigSize + rindex */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2750:2784  uint256 nrindex = sigSize + rindex */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2883:2955  signatureRecovery(... */\n      tag_212\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2908:2915  _digest */\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2923:2949  _signature[rindex:nrindex] */\n      tag_58\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2750:2784  uint256 nrindex = sigSize + rindex */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2934:2940  rindex */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2923:2933  _signature */\n      dup14\n      dup16\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2923:2949  _signature[rindex:nrindex] */\n      tag_193\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2883:2955  signatureRecovery(... */\n    tag_212:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2791:2955  (... */\n      swap4\n      swap12\n      pop\n      swap2\n      swap10\n      pop\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2966:2984  weight < threshold */\n      dup8\n      dup8\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2962:3080  if (weight < threshold) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3027:3053  _signature[rindex:nrindex] */\n      tag_215\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3045:3052  nrindex */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3038:3044  rindex */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3027:3037  _signature */\n      dup12\n      dup14\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3027:3053  _signature[rindex:nrindex] */\n      tag_193\n      jump\t// in\n    tag_215:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3055:3064  threshold */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3066:3072  weight */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3001:3073  LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight) */\n      mload(0x40)\n      0xb006aba000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2962:3080  if (weight < threshold) {... */\n    tag_214:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3095:3102  nrindex */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3086:3102  rindex = nrindex */\n      swap3\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3283:4375  while (rindex < _signature.length) {... */\n    tag_218:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3290:3316  rindex < _signature.length */\n      dup9\n      dup4\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3283:4375  while (rindex < _signature.length) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3390:3391  3 */\n      0x03\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup4\n      add\n      swap3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3290:3315  add(_index, _data.offset) */\n      dup11\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3277:3316  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3336:3339  232 */\n      0xe8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      shr\n      swap2\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3444:3460  sigSize + rindex */\n      tag_221\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3444:3460  sigSize + rindex */\n      tag_211\n      jump\t// in\n    tag_221:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3434:3460  nrindex = sigSize + rindex */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3469:3491  uint256 nextCheckpoint */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3687:3792  signatureRecovery(... */\n      tag_222\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3714:3748  _hashSetImageHashStruct(imageHash) */\n      tag_223\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3738:3747  imageHash */\n      dup9\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3714:3737  _hashSetImageHashStruct */\n      tag_224\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3714:3748  _hashSetImageHashStruct(imageHash) */\n      jump\t// in\n    tag_223:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3758:3768  _signature */\n      dup13\n      dup13\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3769:3775  rindex */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3758:3784  _signature[rindex:nrindex] */\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3776:3783  nrindex */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3758:3784  _signature[rindex:nrindex] */\n      swap3\n      tag_58\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3687:3792  signatureRecovery(... */\n    tag_222:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3500:3792  (... */\n      swap4\n      swap13\n      pop\n      swap2\n      swap11\n      pop\n      swap9\n      pop\n      swap1\n      swap2\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3833:3851  weight < threshold */\n      dup9\n      dup9\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3829:3951  if (weight < threshold) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3896:3922  _signature[rindex:nrindex] */\n      tag_227\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3914:3921  nrindex */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3907:3913  rindex */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3896:3906  _signature */\n      dup13\n      dup15\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3896:3922  _signature[rindex:nrindex] */\n      tag_193\n      jump\t// in\n    tag_227:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3924:3933  threshold */\n      dup11\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3935:3941  weight */\n      dup11\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3870:3942  LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight) */\n      mload(0x40)\n      0xb006aba000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3829:3951  if (weight < threshold) {... */\n    tag_226:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4216:4226  checkpoint */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4198:4212  nextCheckpoint */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4198:4226  nextCheckpoint >= checkpoint */\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4194:4309  if (nextCheckpoint >= checkpoint) {... */\n      tag_229\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4245:4300  WrongChainedCheckpointOrder(nextCheckpoint, checkpoint) */\n      mload(0x40)\n      0x37daf62b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":16193:16218   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":16234:16252   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":16227:16261   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16166:16184   */\n      0x44\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4245:4300  WrongChainedCheckpointOrder(nextCheckpoint, checkpoint) */\n      tag_93\n        /* \"#utility.yul\":16019:16267   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4194:4309  if (nextCheckpoint >= checkpoint) {... */\n    tag_229:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4330:4344  nextCheckpoint */\n      swap4\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":4361:4368  nrindex */\n      swap2\n      pop\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":3283:4375  while (rindex < _signature.length) {... */\n      jump(tag_218)\n    tag_219:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2540:4379  {... */\n      pop\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":2320:4379  function chainedRecover(... */\n      swap4\n      swap8\n      swap3\n      swap7\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":490:677  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {... */\n    tag_133:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":568:579  bytes32 val */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":587:598  bytes32 key */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":622:626  _key */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":628:635  _subKey */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":611:636  abi.encode(_key, _subKey) */\n      add(0x20, mload(0x40))\n      tag_233\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":16193:16218   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":16249:16251   */\n      0x20\n        /* \"#utility.yul\":16234:16252   */\n      dup3\n      add\n        /* \"#utility.yul\":16227:16261   */\n      mstore\n        /* \"#utility.yul\":16181:16183   */\n      0x40\n        /* \"#utility.yul\":16166:16184   */\n      add\n      swap1\n        /* \"#utility.yul\":16019:16267   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":611:636  abi.encode(_key, _subKey) */\n    tag_233:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":601:637  keccak256(abi.encode(_key, _subKey)) */\n      dup1\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":611:636  abi.encode(_key, _subKey) */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":601:637  keccak256(abi.encode(_key, _subKey)) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":661:671  sload(key) */\n      sload\n      swap5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":490:677  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4140:4371  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n    tag_147:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4226:4230  bool */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4242:4288  _interfaceID == type(IModuleCalls).interfaceId */\n      0xe4a77bbc00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4238:4316  if (_interfaceID == type(IModuleCalls).interfaceId) {... */\n      tag_236\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4305:4309  true */\n      0x01\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4140:4371  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4238:4316  if (_interfaceID == type(IModuleCalls).interfaceId) {... */\n    tag_236:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4329:4366  super.supportsInterface(_interfaceID) */\n      tag_80\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4353:4365  _interfaceID */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4329:4352  super.supportsInterface */\n      tag_238\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":4329:4366  super.supportsInterface(_interfaceID) */\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1525:1878  function call(... */\n    tag_179:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1640:1646  bool r */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1688:1692  0x40 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1682:1693  mload(0x40) */\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1732:1744  _data.length */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1718:1730  _data.offset */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1713:1716  tmp */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1700:1745  calldatacopy(tmp, _data.offset, _data.length) */\n      calldatacopy\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1859:1860  0 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1848:1849  0 */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1826:1838  _data.length */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1813:1816  tmp */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1799:1803  _val */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1786:1789  _to */\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1772:1776  _gas */\n      dup11\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1758:1868  call(... */\n      call\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1753:1868  r := call(... */\n      swap8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1525:1878  function call(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":852:1123  function returnData() internal pure returns (bytes memory r) {... */\n    tag_186:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":897:911  bytes memory r */\n      0x60\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":948:964  returndatasize() */\n      returndatasize\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":982:986  0x40 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":976:987  mload(0x40) */\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":971:987  r := mload(0x40) */\n      swap2\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1014:1016  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1011:1012  r */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1007:1017  add(r, 32) */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1048:1052  size */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1041:1046  start */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1037:1053  add(start, size) */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1031:1035  0x40 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1024:1054  mstore(0x40, add(start, size)) */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1071:1075  size */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1068:1069  r */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1061:1076  mstore(r, size) */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1108:1112  size */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1105:1106  0 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1098:1103  start */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":1083:1113  returndatacopy(start, 0, size) */\n      returndatacopy\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":852:1123  function returnData() internal pure returns (bytes memory r) {... */\n      swap1\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3644:3930  function _revertBytes(... */\n    tag_187:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3781:3795  _revertOnError */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3777:3926  if (_revertOnError) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3849:3856  _reason */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3843:3857  mload(_reason) */\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3836:3840  0x20 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3827:3834  _reason */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3823:3841  add(_reason, 0x20) */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3816:3858  revert(add(_reason, 0x20), mload(_reason)) */\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3777:3926  if (_revertOnError) {... */\n    tag_243:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3894:3901  _txHash */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3885:3919  TxFailed(_txHash, _index, _reason) */\n      0xab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b419\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3903:3909  _index */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3911:3918  _reason */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3885:3919  TxFailed(_txHash, _index, _reason) */\n      mload(0x40)\n      tag_245\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":3644:3930  function _revertBytes(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3525:8233  function recoverBranch(... */\n    tag_194:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3635:3649  uint256 weight */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3655:3667  bytes32 root */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3696:3710  uint256 rindex */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3765:8223  while (rindex < _signature.length) {... */\n    tag_248:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3772:3798  rindex < _signature.length */\n      dup4\n      dup2\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3765:8223  while (rindex < _signature.length) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1475:1476  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1463:1477  add(_index, 1) */\n      dup2\n      add\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1390:1415  add(_index, _data.offset) */\n      dup6\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1377:1416  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1432:1435  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1428:1442  shr(248, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3923:3943  flag == FLAG_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup2\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3919:4321  if (flag == FLAG_ADDRESS) {... */\n      tag_252\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2205:2207  21 */\n      0x15\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2193:2208  add(_index, 21) */\n      dup3\n      add\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2046:2071  add(_index, _data.offset) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2033:2072  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2088:2091  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2084:2098  shr(248, word) */\n      dup2\n      swap1\n      shr\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2118:2120  88 */\n      0x58\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2114:2127  shr(88, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2129:2171  0xffffffffffffffffffffffffffffffffffffffff */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2110:2172  and(shr(88, word), 0xffffffffffffffffffffffffffffffffffffffff) */\n      dup2\n      and\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1873:1896  uint256(_weight) << 160 */\n      0xff0000000000000000000000000000000000000000\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1873:1922  uint256(_weight) << 160 | uint256(uint160(_addr)) */\n      dup2\n      or\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4231:4235  root */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4231:4290  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      tag_257\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4286:4290  node */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4231:4290  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      jump(tag_259)\n    tag_257:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup7\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4252:4283  LibOptim.fkeccak256(root, node) */\n    tag_259:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4224:4290  root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      swap6\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4302:4310  continue */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_248)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3919:4321  if (flag == FLAG_ADDRESS) {... */\n    tag_252:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4335:4339  flag */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4331:5010  if (flag == FLAG_SIGNATURE) {... */\n      tag_260\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1475:1476  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1463:1477  add(_index, 1) */\n      dup3\n      add\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1390:1415  add(_index, _data.offset) */\n      dup7\n      dup2\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1377:1416  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1432:1435  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1428:1442  shr(248, word) */\n      shr\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4560:4571  rindex + 66 */\n      0x43\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4396:4412  uint8 addrWeight */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4598:4670  SignatureValidator.recoverSigner(_subdigest, _signature[rindex:nrindex]) */\n      tag_262\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4631:4641  _subdigest */\n      dup11\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4643:4669  _signature[rindex:nrindex] */\n      tag_263\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4560:4571  rindex + 66 */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1463:1477  add(_index, 1) */\n      dup9\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4643:4653  _signature */\n      dup13\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1390:1415  add(_index, _data.offset) */\n      dup15\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4643:4669  _signature[rindex:nrindex] */\n      tag_193\n      jump\t// in\n    tag_263:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4598:4630  SignatureValidator.recoverSigner */\n      tag_264\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4598:4670  SignatureValidator.recoverSigner(_subdigest, _signature[rindex:nrindex]) */\n      jump\t// in\n    tag_262:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4764:4784  weight += addrWeight */\n      0xff\n      dup5\n      and\n      swap8\n      swap1\n      swap8\n      add\n      swap7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4691:4698  nrindex */\n      swap2\n      swap5\n      pop\n      dup5\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4764:4784  weight += addrWeight */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1893:1896  160 */\n      0xa0\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1873:1896  uint256(_weight) << 160 */\n      dup4\n      swap1\n      shl\n      0xff0000000000000000000000000000000000000000\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1899:1922  uint256(uint160(_addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1873:1922  uint256(_weight) << 160 | uint256(uint160(_addr)) */\n      or\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4920:4924  root */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4920:4979  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      tag_266\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4975:4979  node */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4920:4979  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      jump(tag_268)\n    tag_266:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup8\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4941:4972  LibOptim.fkeccak256(root, node) */\n    tag_268:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4913:4979  root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      swap7\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4991:4999  continue */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_248)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":4331:5010  if (flag == FLAG_SIGNATURE) {... */\n    tag_260:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":625:626  2 */\n      0x02\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5024:5028  flag */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5024:5054  flag == FLAG_DYNAMIC_SIGNATURE */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5020:5952  if (flag == FLAG_DYNAMIC_SIGNATURE) {... */\n      tag_269\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5104:5120  uint8 addrWeight */\n      0x00\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2046:2071  add(_index, _data.offset) */\n      dup8\n      dup5\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2033:2072  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2088:2091  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2084:2098  shr(248, word) */\n      dup2\n      swap1\n      shr\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2118:2120  88 */\n      0x58\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2114:2127  shr(88, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2129:2171  0xffffffffffffffffffffffffffffffffffffffff */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2110:2172  and(shr(88, word), 0xffffffffffffffffffffffffffffffffffffffff) */\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2205:2207  21 */\n      0x15\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2193:2208  add(_index, 21) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5146:5210  (addrWeight, addr, rindex) = _signature.readUint8Address(rindex) */\n      swap6\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5256:5268  uint256 size */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3290:3315  add(_index, _data.offset) */\n      dup9\n      dup6\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3277:3316  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3336:3339  232 */\n      0xe8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3390:3391  3 */\n      0x03\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5280:5326  (size, rindex) = _signature.readUint24(rindex) */\n      dup2\n      0xffffff\n      and\n      swap2\n      pop\n      dup1\n      swap7\n      pop\n      dup2\n      swap3\n      pop\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5380:5395  uint256 nrindex */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5407:5411  size */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5398:5404  rindex */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5398:5411  rindex + size */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5380:5411  uint256 nrindex = rindex + size */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5428:5509  SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex]) */\n      tag_272\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5464:5474  _subdigest */\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5476:5480  addr */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5482:5492  _signature */\n      dup13\n      dup13\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5493:5499  rindex */\n      dup11\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5482:5508  _signature[rindex:nrindex] */\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5500:5507  nrindex */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5482:5508  _signature[rindex:nrindex] */\n      swap3\n      tag_273\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_273:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5428:5463  SignatureValidator.isValidSignature */\n      tag_274\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5428:5509  SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex]) */\n      jump\t// in\n    tag_272:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5423:5613  if (!SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex])) {... */\n      tag_275\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5555:5565  _subdigest */\n      dup11\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5567:5571  addr */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5573:5599  _signature[rindex:nrindex] */\n      tag_276\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5591:5598  nrindex */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5584:5590  rindex */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5573:5583  _signature */\n      dup14\n      dup16\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5573:5599  _signature[rindex:nrindex] */\n      tag_193\n      jump\t// in\n    tag_276:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5532:5600  InvalidNestedSignature(_subdigest, addr, _signature[rindex:nrindex]) */\n      mload(0x40)\n      0x9a94623200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5423:5613  if (!SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex])) {... */\n    tag_275:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5706:5726  weight += addrWeight */\n      0xff\n      dup5\n      and\n      swap8\n      swap1\n      swap8\n      add\n      swap7\n      swap5\n      pop\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1893:1896  160 */\n      0xa0\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1873:1896  uint256(_weight) << 160 */\n      dup5\n      swap1\n      shl\n      0xff0000000000000000000000000000000000000000\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1899:1922  uint256(uint160(_addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":1873:1922  uint256(_weight) << 160 | uint256(uint160(_addr)) */\n      or\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5862:5866  root */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5862:5921  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      tag_280\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5917:5921  node */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5862:5921  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      jump(tag_282)\n    tag_280:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup9\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5883:5914  LibOptim.fkeccak256(root, node) */\n    tag_282:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5855:5921  root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      swap8\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5933:5941  continue */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_248)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5020:5952  if (flag == FLAG_DYNAMIC_SIGNATURE) {... */\n    tag_269:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":667:668  3 */\n      0x03\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5966:5970  flag */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5966:5983  flag == FLAG_NODE */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5962:6205  if (flag == FLAG_NODE) {... */\n      tag_283\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4550:4552  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4536:4553  add(_pointer, 32) */\n      dup3\n      add\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4487:4514  add(_pointer, _data.offset) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4474:4515  calldataload(add(_pointer, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6115:6119  root */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6115:6174  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      tag_286\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6170:6174  node */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6115:6174  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      jump(tag_288)\n    tag_286:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup5\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6136:6167  LibOptim.fkeccak256(root, node) */\n    tag_288:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6108:6174  root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      swap4\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6186:6194  continue */\n      pop\n      pop\n      jump(tag_248)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":5962:6205  if (flag == FLAG_NODE) {... */\n    tag_283:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":711:712  4 */\n      0x04\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6219:6223  flag */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6219:6238  flag == FLAG_BRANCH */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6215:6687  if (flag == FLAG_BRANCH) {... */\n      tag_289\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3390:3391  3 */\n      0x03\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup1\n      dup4\n      add\n      swap3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3290:3315  add(_index, _data.offset) */\n      dup8\n      dup2\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3277:3316  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3336:3339  232 */\n      0xe8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      shr\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6409:6422  rindex + size */\n      swap1\n      dup3\n      add\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6309:6321  uint256 size */\n      0x00\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6494:6547  recoverBranch(_subdigest, _signature[rindex:nrindex]) */\n      tag_291\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6508:6518  _subdigest */\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6520:6546  _signature[rindex:nrindex] */\n      tag_192\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6409:6422  rindex + size */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6520:6530  _signature */\n      dup14\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3290:3315  add(_index, _data.offset) */\n      dup16\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6520:6546  _signature[rindex:nrindex] */\n      tag_193\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6494:6547  recoverBranch(_subdigest, _signature[rindex:nrindex]) */\n    tag_291:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      swap9\n      dup10\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      swap8\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6560:6577  weight += nweight */\n      swap7\n      swap1\n      swap8\n      add\n      swap7\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6649:6656  nrindex */\n      swap1\n      swap4\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6668:6676  continue */\n      tag_248\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6215:6687  if (flag == FLAG_BRANCH) {... */\n    tag_289:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":802:803  6 */\n      0x06\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6701:6705  flag */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6701:6720  flag == FLAG_NESTED */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6697:7676  if (flag == FLAG_NESTED) {... */\n      tag_294\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6864:6886  uint256 externalWeight */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1390:1415  add(_index, _data.offset) */\n      dup3\n      dup8\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1377:1416  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1432:1435  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1428:1442  shr(248, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1475:1476  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":1463:1477  add(_index, 1) */\n      dup5\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6898:6953  (externalWeight, rindex) = _signature.readUint8(rindex) */\n      swap4\n      pop\n      0xff\n      and\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6966:6991  uint256 internalThreshold */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2699:2724  add(_index, _data.offset) */\n      dup8\n      dup5\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2686:2725  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2745:2748  240 */\n      0xf0\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2741:2755  shr(240, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2797:2798  2 */\n      0x02\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":2785:2799  add(_index, 2) */\n      dup6\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7003:7062  (internalThreshold, rindex) = _signature.readUint16(rindex) */\n      swap5\n      pop\n      0xffff\n      and\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7075:7087  uint256 size */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3290:3315  add(_index, _data.offset) */\n      dup9\n      dup6\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3277:3316  calldataload(add(_index, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3336:3339  232 */\n      0xe8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3332:3346  shr(232, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3390:3391  3 */\n      0x03\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":3378:3392  add(_index, 3) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7099:7145  (size, rindex) = _signature.readUint24(rindex) */\n      dup2\n      0xffffff\n      and\n      swap2\n      pop\n      dup1\n      swap7\n      pop\n      dup2\n      swap3\n      pop\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7157:7172  uint256 nrindex */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7184:7188  size */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7175:7181  rindex */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7175:7188  rindex + size */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7157:7188  uint256 nrindex = rindex + size */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7201:7223  uint256 internalWeight */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7225:7245  bytes32 internalRoot */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7290:7343  recoverBranch(_subdigest, _signature[rindex:nrindex]) */\n      tag_299\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7304:7314  _subdigest */\n      dup14\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7316:7326  _signature */\n      dup14\n      dup14\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7327:7333  rindex */\n      dup12\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7316:7342  _signature[rindex:nrindex] */\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7334:7341  nrindex */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7316:7342  _signature[rindex:nrindex] */\n      swap3\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7290:7343  recoverBranch(_subdigest, _signature[rindex:nrindex]) */\n    tag_299:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7364:7371  nrindex */\n      swap4\n      swap9\n      pop\n      dup9\n      swap4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7257:7343  (internalWeight, internalRoot) = recoverBranch(_subdigest, _signature[rindex:nrindex]) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7388:7423  internalWeight >= internalThreshold */\n      dup5\n      dup3\n      lt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7384:7476  if (internalWeight >= internalThreshold) {... */\n      tag_301\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7439:7463  weight += externalWeight */\n      swap9\n      dup6\n      add\n      swap9\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7384:7476  if (internalWeight >= internalThreshold) {... */\n    tag_301:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2976:3049  abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":20362:20428   */\n      0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2976:3049  abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight) */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":20350:20429   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":20445:20457   */\n      0x38\n      dup3\n      add\n        /* \"#utility.yul\":20438:20466   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":20482:20494   */\n      0x58\n      dup3\n      add\n        /* \"#utility.yul\":20475:20503   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":20519:20531   */\n      0x78\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":20512:20540   */\n      dup11\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2976:3049  abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":20556:20569   */\n      0x98\n      swap1\n      swap3\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2976:3049  abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight) */\n      swap1\n      swap3\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2966:3050  keccak256(abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7585:7589  root */\n      dup10\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7585:7644  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      tag_304\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7640:7644  node */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7585:7644  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      jump(tag_306)\n    tag_304:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup11\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7606:7637  LibOptim.fkeccak256(root, node) */\n    tag_306:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7578:7644  root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      swap10\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7657:7665  continue */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_248)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":6697:7676  if (flag == FLAG_NESTED) {... */\n    tag_294:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":758:759  5 */\n      0x05\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7690:7694  flag */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7690:7712  flag == FLAG_SUBDIGEST */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7686:8171  if (flag == FLAG_SUBDIGEST) {... */\n      tag_307\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4550:4552  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4536:4553  add(_pointer, 32) */\n      dup3\n      add\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4487:4514  add(_pointer, _data.offset) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":4474:4515  calldataload(add(_pointer, _data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7920:7943  hardcoded == _subdigest */\n      dup8\n      dup2\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7916:7998  if (hardcoded == _subdigest) {... */\n      tag_309\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7968:7985  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7959:7985  weight = type(uint256).max */\n      swap5\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7916:7998  if (hardcoded == _subdigest) {... */\n    tag_309:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8010:8022  bytes32 node */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8025:8062  _leafForHardcodedSubdigest(hardcoded) */\n      tag_310\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8052:8061  hardcoded */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8025:8051  _leafForHardcodedSubdigest */\n      tag_311\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8025:8062  _leafForHardcodedSubdigest(hardcoded) */\n      jump\t// in\n    tag_310:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8010:8062  bytes32 node = _leafForHardcodedSubdigest(hardcoded) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8081:8085  root */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8081:8140  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      tag_312\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8136:8140  node */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8081:8140  root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      jump(tag_314)\n    tag_312:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":622:631  bytes32 c */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      dup6\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      swap1\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8102:8133  LibOptim.fkeccak256(root, node) */\n    tag_314:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8074:8140  root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node */\n      swap5\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8152:8160  continue */\n      pop\n      pop\n      pop\n      jump(tag_248)\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":7686:8171  if (flag == FLAG_SUBDIGEST) {... */\n    tag_307:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8188:8214  InvalidSignatureFlag(flag) */\n      mload(0x40)\n      0xb2505f7c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2778:2803   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2751:2769   */\n      0x24\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":8188:8214  InvalidSignatureFlag(flag) */\n      tag_93\n        /* \"#utility.yul\":2632:2809   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3765:8223  while (rindex < _signature.length) {... */\n    tag_249:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3678:8229  unchecked {... */\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":3525:8233  function recoverBranch(... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":1296:1456  function _hashSetImageHashStruct(bytes32 _imageHash) internal pure returns (bytes32) {... */\n    tag_224:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":862:906  keccak256(\"SetImageHash(bytes32 imageHash)\") */\n      0x8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":1372:1379  bytes32 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":656:669  mstore(0, _a) */\n      swap1\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":683:685  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":676:690  mstore(32, _b) */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":715:717  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":702:718  keccak256(0, 64) */\n      dup2\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":1394:1451  LibOptim.fkeccak256(SET_IMAGE_HASH_TYPE_HASH, _imageHash) */\n      tag_80\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":543:728  function fkeccak256(... */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6015:6315  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n    tag_238:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6101:6105  bool */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6124:6169  _interfaceID == type(IModuleAuth).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6140:6169  type(IModuleAuth).interfaceId */\n      0xac6a444e00000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6124:6169  _interfaceID == type(IModuleAuth).interfaceId */\n      eq\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6124:6227  _interfaceID == type(IModuleAuth).interfaceId ||... */\n      tag_323\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6179:6227  _interfaceID == type(IERC1271Wallet).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6195:6227  type(IERC1271Wallet).interfaceId */\n      0x36e7817500000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6179:6227  _interfaceID == type(IERC1271Wallet).interfaceId */\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6124:6227  _interfaceID == type(IModuleAuth).interfaceId ||... */\n    tag_323:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6113:6260  if (... */\n      iszero\n      tag_324\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6249:6253  true */\n      0x01\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6015:6315  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6113:6260  if (... */\n    tag_324:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":725:756  this.supportsInterface.selector */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":709:756  _interfaceID == this.supportsInterface.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":6273:6310  super.supportsInterface(_interfaceID) */\n      tag_80\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":613:761  function supportsInterface(bytes4 _interfaceID) virtual public pure returns (bool) {... */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1767:4083  function recoverSigner(... */\n    tag_264:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1867:1881  address signer */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1914:1916  66 */\n      0x42\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1893:1916  _signature.length != 66 */\n      dup3\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1889:1959  if (_signature.length != 66) revert InvalidSignatureLength(_signature) */\n      tag_331\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1948:1958  _signature */\n      dup3\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1925:1959  InvalidSignatureLength(_signature) */\n      mload(0x40)\n      0x2ee17a3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap3\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1889:1959  if (_signature.length != 66) revert InvalidSignatureLength(_signature) */\n    tag_331:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1965:1986  uint256 signatureType */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1989:2032  _signature.readUint8(_signature.length - 1) */\n      tag_334\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":2010:2031  _signature.length - 1 */\n      tag_335\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":2030:2031  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":2010:2020  _signature */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":2010:2031  _signature.length - 1 */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1226:1249  add(index, data.offset) */\n      dup6\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1213:1250  calldataload(add(index, data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1266:1269  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1262:1276  shr(248, word) */\n      shr\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1071:1286  function readUint8(... */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1989:2032  _signature.readUint8(_signature.length - 1) */\n    tag_334:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1965:2032  uint256 signatureType = _signature.readUint8(_signature.length - 1) */\n      0xff\n      and\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":2115:2117  64 */\n      0x40\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1226:1249  add(index, data.offset) */\n      dup5\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1213:1250  calldataload(add(index, data.offset)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1266:1269  248 */\n      0xf8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":1262:1276  shr(248, word) */\n      shr\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":795:832  calldataload(add(data.offset, index)) */\n      dup5\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":2202:2204  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":808:831  add(data.offset, index) */\n      dup7\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":795:832  calldataload(add(data.offset, index)) */\n      calldataload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3209:3275  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3196:3275  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup2\n      gt\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3192:3327  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3306:3316  _signature */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3318:3319  s */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3292:3320  InvalidSValue(_signature, s) */\n      mload(0x40)\n      0xad4aac7600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3192:3327  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_342:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3337:3338  v */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3337:3344  v != 27 */\n      0xff\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3342:3344  27 */\n      0x1b\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3337:3344  v != 27 */\n      eq\n      iszero\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3337:3355  v != 27 && v != 28 */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3348:3349  v */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3348:3355  v != 28 */\n      0xff\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3353:3355  28 */\n      0x1c\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3348:3355  v != 28 */\n      eq\n      iszero\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3337:3355  v != 27 && v != 28 */\n    tag_345:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3333:3407  if (v != 27 && v != 28) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3386:3396  _signature */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3398:3399  v */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3372:3400  InvalidVValue(_signature, v) */\n      mload(0x40)\n      0xe578897e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3333:3407  if (v != 27 && v != 28) {... */\n    tag_346:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1253:1254  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3447:3460  signatureType */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3447:3479  signatureType == SIG_TYPE_EIP712 */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3443:3952  if (signatureType == SIG_TYPE_EIP712) {... */\n      tag_349\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3498:3523  ecrecover(_hash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":18522:18547   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":18595:18599   */\n      0xff\n        /* \"#utility.yul\":18583:18600   */\n      dup6\n      and\n        /* \"#utility.yul\":18563:18581   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":18556:18601   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":18617:18635   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":18610:18644   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":18660:18678   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":18653:18687   */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3498:3523  ecrecover(_hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":18494:18513   */\n      0xa0\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3498:3523  ecrecover(_hash, v, r, s) */\n    tag_350:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_353:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3489:3523  signer = ecrecover(_hash, v, r, s) */\n      swap5\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3443:3952  if (signatureType == SIG_TYPE_EIP712) {... */\n      jump(tag_361)\n    tag_349:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1303:1304  2 */\n      0x02\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3608:3621  signatureType */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3608:3642  signatureType == SIG_TYPE_ETH_SIGN */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3604:3952  if (signatureType == SIG_TYPE_ETH_SIGN) {... */\n      tag_355\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3690:3749  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash) */\n      mload(0x40)\n        /* \"#utility.yul\":18940:19006   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3690:3749  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":18928:19007   */\n      mstore\n        /* \"#utility.yul\":19023:19035   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":19016:19044   */\n      dup10\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3661:3791  ecrecover(... */\n      0x01\n      swap1\n        /* \"#utility.yul\":19060:19072   */\n      0x5c\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3690:3749  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash) */\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3680:3750  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash)) */\n      dup1\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3690:3749  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash) */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3680:3750  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3661:3791  ecrecover(... */\n      0x00\n      dup5\n      mstore\n      swap1\n      dup4\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":18522:18547   */\n      mstore\n        /* \"#utility.yul\":18595:18599   */\n      0xff\n        /* \"#utility.yul\":18583:18600   */\n      dup7\n      and\n        /* \"#utility.yul\":18563:18581   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18556:18601   */\n      mstore\n        /* \"#utility.yul\":18617:18635   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":18610:18644   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":18660:18678   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":18653:18687   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":18494:18513   */\n      0xa0\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3661:3791  ecrecover(... */\n      tag_350\n        /* \"#utility.yul\":18295:18693   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3604:3952  if (signatureType == SIG_TYPE_ETH_SIGN) {... */\n    tag_355:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3913:3923  _signature */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3925:3938  signatureType */\n      dup6\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3940:3944  true */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3888:3945  UnsupportedSignatureType(_signature, signatureType, true) */\n      mload(0x40)\n      0x9dfba85200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3604:3952  if (signatureType == SIG_TYPE_ETH_SIGN) {... */\n    tag_361:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3999:4021  signer == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3995:4058  if (signer == address(0x0)) revert SignerIsAddress0(_signature) */\n      tag_364\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4047:4057  _signature */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4030:4058  SignerIsAddress0(_signature) */\n      mload(0x40)\n      0x6c1719d200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap3\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":3995:4058  if (signer == address(0x0)) revert SignerIsAddress0(_signature) */\n    tag_364:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4065:4078  return signer */\n      pop\n      pop\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1767:4083  function recoverSigner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4411:5362  function isValidSignature(... */\n    tag_274:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4535:4545  bool valid */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4557:4579  _signature.length == 0 */\n      dup2\n      dup2\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4553:4619  if (_signature.length == 0) {... */\n      tag_367\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4596:4612  EmptySignature() */\n      mload(0x40)\n      0xac241e1100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4553:4619  if (_signature.length == 0) {... */\n    tag_367:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4625:4646  uint256 signatureType */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4655:4665  _signature */\n      dup4\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4666:4687  _signature.length - 1 */\n      tag_368\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4686:4687  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4655:4665  _signature */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4666:4687  _signature.length - 1 */\n      tag_336\n      jump\t// in\n    tag_368:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4655:4688  _signature[_signature.length - 1] */\n      dup2\n      dup2\n      lt\n      tag_370\n      jumpi\n      tag_370\n      tag_113\n      jump\t// in\n    tag_370:\n      swap2\n      swap1\n      swap2\n      add\n      calldataload\n      0xf8\n      shr\n      swap2\n      pop\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1253:1254  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4699:4731  signatureType == SIG_TYPE_EIP712 */\n      dup2\n      eq\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4699:4769  signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN */\n      tag_371\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1303:1304  2 */\n      0x02\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4735:4748  signatureType */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4735:4769  signatureType == SIG_TYPE_ETH_SIGN */\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4699:4769  signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN */\n    tag_371:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4695:5358  if (signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4873:4880  _signer */\n      dup5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4837:4880  recoverSigner(_hash, _signature) == _signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4837:4869  recoverSigner(_hash, _signature) */\n      tag_373\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4851:4856  _hash */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4858:4868  _signature */\n      dup7\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4837:4850  recoverSigner */\n      tag_264\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4837:4869  recoverSigner(_hash, _signature) */\n      jump\t// in\n    tag_373:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4837:4880  recoverSigner(_hash, _signature) == _signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4829:4880  valid = recoverSigner(_hash, _signature) == _signer */\n      swap2\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4695:5358  if (signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN) {... */\n      jump(tag_384)\n    tag_372:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":1359:1360  3 */\n      0x03\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4898:4911  signatureType */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4898:4938  signatureType == SIG_TYPE_WALLET_BYTES32 */\n      sub\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4894:5358  if (signatureType == SIG_TYPE_WALLET_BYTES32) {... */\n      tag_375\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5060:5100  IERC1271Wallet(_signer).isValidSignature */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x1626ba7e\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5101:5106  _hash */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5108:5118  _signature */\n      dup7\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5119:5120  0 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5108:5118  _signature */\n      dup8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5121:5142  _signature.length - 1 */\n      tag_376\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5141:5142  1 */\n      0x01\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5108:5118  _signature */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5121:5142  _signature.length - 1 */\n      tag_336\n      jump\t// in\n    tag_376:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5108:5143  _signature[0:_signature.length - 1] */\n      swap3\n      tag_377\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_377:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5060:5144  IERC1271Wallet(_signer).isValidSignature(_hash, _signature[0:_signature.length - 1]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_378\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_381\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_381:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_382\n      swap2\n      swap1\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5030:5144  ERC1271_MAGICVALUE_BYTES32 == IERC1271Wallet(_signer).isValidSignature(_hash, _signature[0:_signature.length - 1]) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5030:5056  ERC1271_MAGICVALUE_BYTES32 */\n      0x1626ba7e00000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5030:5144  ERC1271_MAGICVALUE_BYTES32 == IERC1271Wallet(_signer).isValidSignature(_hash, _signature[0:_signature.length - 1]) */\n      eq\n      swap2\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4894:5358  if (signatureType == SIG_TYPE_WALLET_BYTES32) {... */\n      jump(tag_384)\n    tag_375:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5318:5328  _signature */\n      dup4\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5330:5343  signatureType */\n      dup3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5345:5350  false */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":5293:5351  UnsupportedSignatureType(_signature, signatureType, false) */\n      mload(0x40)\n      0x9dfba85200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4894:5358  if (signatureType == SIG_TYPE_WALLET_BYTES32) {... */\n    tag_384:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4547:5362  {... */\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":4411:5362  function isValidSignature(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2227:2409  function _leafForHardcodedSubdigest(... */\n    tag_311:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2346:2403  abi.encodePacked('Sequence static digest:\\n', _subdigest) */\n      mload(0x40)\n        /* \"#utility.yul\":20822:20888   */\n      0x53657175656e636520737461746963206469676573743a0a0000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2346:2403  abi.encodePacked('Sequence static digest:\\n', _subdigest) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":20810:20889   */\n      mstore\n        /* \"#utility.yul\":20905:20917   */\n      0x38\n      dup2\n      add\n        /* \"#utility.yul\":20898:20926   */\n      dup3\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2314:2321  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":20942:20954   */\n      0x58\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":2346:2403  abi.encodePacked('Sequence static digest:\\n', _subdigest) */\n      tag_155\n        /* \"#utility.yul\":20580:20960   */\n      jump\n        /* \"#utility.yul\":14:191   */\n    tag_397:\n        /* \"#utility.yul\":99:165   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":196:441   */\n    tag_19:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_411:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_82\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_397\n      jump\t// in\n        /* \"#utility.yul\":638:985   */\n    tag_398:\n        /* \"#utility.yul\":689:697   */\n      0x00\n        /* \"#utility.yul\":699:705   */\n      dup1\n        /* \"#utility.yul\":753:756   */\n      dup4\n        /* \"#utility.yul\":746:750   */\n      0x1f\n        /* \"#utility.yul\":738:744   */\n      dup5\n        /* \"#utility.yul\":734:751   */\n      add\n        /* \"#utility.yul\":730:757   */\n      slt\n        /* \"#utility.yul\":720:775   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":771:772   */\n      0x00\n        /* \"#utility.yul\":768:769   */\n      dup1\n        /* \"#utility.yul\":761:773   */\n      revert\n        /* \"#utility.yul\":720:775   */\n    tag_415:\n      pop\n        /* \"#utility.yul\":794:814   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":837:855   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":826:856   */\n      dup2\n      gt\n        /* \"#utility.yul\":823:873   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":823:873   */\n    tag_416:\n        /* \"#utility.yul\":906:910   */\n      0x20\n        /* \"#utility.yul\":898:904   */\n      dup4\n        /* \"#utility.yul\":894:911   */\n      add\n        /* \"#utility.yul\":882:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":958:961   */\n      dup4\n        /* \"#utility.yul\":951:955   */\n      0x20\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":934:940   */\n      dup6\n        /* \"#utility.yul\":930:949   */\n      add\n        /* \"#utility.yul\":926:956   */\n      add\n        /* \"#utility.yul\":923:962   */\n      gt\n        /* \"#utility.yul\":920:979   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":975:976   */\n      0x00\n        /* \"#utility.yul\":972:973   */\n      dup1\n        /* \"#utility.yul\":965:977   */\n      revert\n        /* \"#utility.yul\":920:979   */\n    tag_417:\n        /* \"#utility.yul\":638:985   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":990:1467   */\n    tag_26:\n        /* \"#utility.yul\":1069:1075   */\n      0x00\n        /* \"#utility.yul\":1077:1083   */\n      dup1\n        /* \"#utility.yul\":1085:1091   */\n      0x00\n        /* \"#utility.yul\":1138:1140   */\n      0x40\n        /* \"#utility.yul\":1126:1135   */\n      dup5\n        /* \"#utility.yul\":1117:1124   */\n      dup7\n        /* \"#utility.yul\":1113:1136   */\n      sub\n        /* \"#utility.yul\":1109:1141   */\n      slt\n        /* \"#utility.yul\":1106:1158   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":1154:1155   */\n      0x00\n        /* \"#utility.yul\":1151:1152   */\n      dup1\n        /* \"#utility.yul\":1144:1156   */\n      revert\n        /* \"#utility.yul\":1106:1158   */\n    tag_419:\n        /* \"#utility.yul\":1190:1199   */\n      dup4\n        /* \"#utility.yul\":1177:1200   */\n      calldataload\n        /* \"#utility.yul\":1167:1200   */\n      swap3\n      pop\n        /* \"#utility.yul\":1251:1253   */\n      0x20\n        /* \"#utility.yul\":1240:1249   */\n      dup5\n        /* \"#utility.yul\":1236:1254   */\n      add\n        /* \"#utility.yul\":1223:1255   */\n      calldataload\n        /* \"#utility.yul\":1278:1296   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1270:1276   */\n      dup2\n        /* \"#utility.yul\":1267:1297   */\n      gt\n        /* \"#utility.yul\":1264:1314   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1310:1311   */\n      0x00\n        /* \"#utility.yul\":1307:1308   */\n      dup1\n        /* \"#utility.yul\":1300:1312   */\n      revert\n        /* \"#utility.yul\":1264:1314   */\n    tag_420:\n        /* \"#utility.yul\":1349:1407   */\n      tag_421\n        /* \"#utility.yul\":1399:1406   */\n      dup7\n        /* \"#utility.yul\":1390:1396   */\n      dup3\n        /* \"#utility.yul\":1379:1388   */\n      dup8\n        /* \"#utility.yul\":1375:1397   */\n      add\n        /* \"#utility.yul\":1349:1407   */\n      tag_398\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":990:1467   */\n      swap5\n      swap8\n        /* \"#utility.yul\":1426:1434   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":1323:1407   */\n      swap4\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":990:1467   */\n      jump\t// out\n        /* \"#utility.yul\":1725:2442   */\n    tag_33:\n        /* \"#utility.yul\":1815:1821   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup1\n        /* \"#utility.yul\":1831:1837   */\n      0x00\n        /* \"#utility.yul\":1839:1845   */\n      dup1\n        /* \"#utility.yul\":1892:1894   */\n      0x40\n        /* \"#utility.yul\":1880:1889   */\n      dup6\n        /* \"#utility.yul\":1871:1878   */\n      dup8\n        /* \"#utility.yul\":1867:1890   */\n      sub\n        /* \"#utility.yul\":1863:1895   */\n      slt\n        /* \"#utility.yul\":1860:1912   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1905:1906   */\n      dup1\n        /* \"#utility.yul\":1898:1910   */\n      revert\n        /* \"#utility.yul\":1860:1912   */\n    tag_424:\n        /* \"#utility.yul\":1948:1957   */\n      dup5\n        /* \"#utility.yul\":1935:1958   */\n      calldataload\n        /* \"#utility.yul\":1977:1995   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2018:2020   */\n      dup1\n        /* \"#utility.yul\":2010:2016   */\n      dup3\n        /* \"#utility.yul\":2007:2021   */\n      gt\n        /* \"#utility.yul\":2004:2038   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2034:2035   */\n      0x00\n        /* \"#utility.yul\":2031:2032   */\n      dup1\n        /* \"#utility.yul\":2024:2036   */\n      revert\n        /* \"#utility.yul\":2004:2038   */\n    tag_425:\n        /* \"#utility.yul\":2073:2131   */\n      tag_426\n        /* \"#utility.yul\":2123:2130   */\n      dup9\n        /* \"#utility.yul\":2114:2120   */\n      dup4\n        /* \"#utility.yul\":2103:2112   */\n      dup10\n        /* \"#utility.yul\":2099:2121   */\n      add\n        /* \"#utility.yul\":2073:2131   */\n      tag_398\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2150:2158   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":2047:2131   */\n      swap5\n      pop\n        /* \"#utility.yul\":2238:2240   */\n      0x20\n        /* \"#utility.yul\":2223:2241   */\n      dup8\n      add\n        /* \"#utility.yul\":2210:2242   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2254:2270   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2251:2287   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":2283:2284   */\n      0x00\n        /* \"#utility.yul\":2280:2281   */\n      dup1\n        /* \"#utility.yul\":2273:2285   */\n      revert\n        /* \"#utility.yul\":2251:2287   */\n    tag_427:\n      pop\n        /* \"#utility.yul\":2322:2382   */\n      tag_428\n        /* \"#utility.yul\":2374:2381   */\n      dup8\n        /* \"#utility.yul\":2363:2371   */\n      dup3\n        /* \"#utility.yul\":2352:2361   */\n      dup9\n        /* \"#utility.yul\":2348:2372   */\n      add\n        /* \"#utility.yul\":2322:2382   */\n      tag_398\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1725:2442   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":2401:2409   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1725:2442   */\n      jump\t// out\n        /* \"#utility.yul\":2447:2627   */\n    tag_39:\n        /* \"#utility.yul\":2506:2512   */\n      0x00\n        /* \"#utility.yul\":2559:2561   */\n      0x20\n        /* \"#utility.yul\":2547:2556   */\n      dup3\n        /* \"#utility.yul\":2538:2545   */\n      dup5\n        /* \"#utility.yul\":2534:2557   */\n      sub\n        /* \"#utility.yul\":2530:2562   */\n      slt\n        /* \"#utility.yul\":2527:2579   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2575:2576   */\n      0x00\n        /* \"#utility.yul\":2572:2573   */\n      dup1\n        /* \"#utility.yul\":2565:2577   */\n      revert\n        /* \"#utility.yul\":2527:2579   */\n    tag_430:\n      pop\n        /* \"#utility.yul\":2598:2621   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2447:2627   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2814:3201   */\n    tag_399:\n        /* \"#utility.yul\":2897:2905   */\n      0x00\n        /* \"#utility.yul\":2907:2913   */\n      dup1\n        /* \"#utility.yul\":2961:2964   */\n      dup4\n        /* \"#utility.yul\":2954:2958   */\n      0x1f\n        /* \"#utility.yul\":2946:2952   */\n      dup5\n        /* \"#utility.yul\":2942:2959   */\n      add\n        /* \"#utility.yul\":2938:2965   */\n      slt\n        /* \"#utility.yul\":2928:2983   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2979:2980   */\n      0x00\n        /* \"#utility.yul\":2976:2977   */\n      dup1\n        /* \"#utility.yul\":2969:2981   */\n      revert\n        /* \"#utility.yul\":2928:2983   */\n    tag_433:\n      pop\n        /* \"#utility.yul\":3002:3022   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":3045:3063   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3034:3064   */\n      dup2\n      gt\n        /* \"#utility.yul\":3031:3081   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3077:3078   */\n      0x00\n        /* \"#utility.yul\":3074:3075   */\n      dup1\n        /* \"#utility.yul\":3067:3079   */\n      revert\n        /* \"#utility.yul\":3031:3081   */\n    tag_434:\n        /* \"#utility.yul\":3114:3118   */\n      0x20\n        /* \"#utility.yul\":3106:3112   */\n      dup4\n        /* \"#utility.yul\":3102:3119   */\n      add\n        /* \"#utility.yul\":3090:3119   */\n      swap2\n      pop\n        /* \"#utility.yul\":3174:3177   */\n      dup4\n        /* \"#utility.yul\":3167:3171   */\n      0x20\n        /* \"#utility.yul\":3157:3163   */\n      dup3\n        /* \"#utility.yul\":3154:3155   */\n      0x05\n        /* \"#utility.yul\":3150:3164   */\n      shl\n        /* \"#utility.yul\":3142:3148   */\n      dup6\n        /* \"#utility.yul\":3138:3165   */\n      add\n        /* \"#utility.yul\":3134:3172   */\n      add\n        /* \"#utility.yul\":3131:3178   */\n      gt\n        /* \"#utility.yul\":3128:3195   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3191:3192   */\n      0x00\n        /* \"#utility.yul\":3188:3189   */\n      dup1\n        /* \"#utility.yul\":3181:3193   */\n      revert\n        /* \"#utility.yul\":3206:3694   */\n    tag_49:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3331:3337   */\n      dup1\n        /* \"#utility.yul\":3384:3386   */\n      0x20\n        /* \"#utility.yul\":3372:3381   */\n      dup4\n        /* \"#utility.yul\":3363:3370   */\n      dup6\n        /* \"#utility.yul\":3359:3382   */\n      sub\n        /* \"#utility.yul\":3355:3387   */\n      slt\n        /* \"#utility.yul\":3352:3404   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3397:3398   */\n      dup1\n        /* \"#utility.yul\":3390:3402   */\n      revert\n        /* \"#utility.yul\":3352:3404   */\n    tag_437:\n        /* \"#utility.yul\":3440:3449   */\n      dup3\n        /* \"#utility.yul\":3427:3450   */\n      calldataload\n        /* \"#utility.yul\":3473:3491   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3462:3492   */\n      gt\n        /* \"#utility.yul\":3459:3509   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3505:3506   */\n      0x00\n        /* \"#utility.yul\":3502:3503   */\n      dup1\n        /* \"#utility.yul\":3495:3507   */\n      revert\n        /* \"#utility.yul\":3459:3509   */\n    tag_438:\n        /* \"#utility.yul\":3544:3634   */\n      tag_439\n        /* \"#utility.yul\":3626:3633   */\n      dup6\n        /* \"#utility.yul\":3617:3623   */\n      dup3\n        /* \"#utility.yul\":3606:3615   */\n      dup7\n        /* \"#utility.yul\":3602:3624   */\n      add\n        /* \"#utility.yul\":3544:3634   */\n      tag_399\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3653:3661   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3518:3634   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":3206:3694   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3699:4563   */\n    tag_54:\n        /* \"#utility.yul\":3845:3851   */\n      0x00\n        /* \"#utility.yul\":3853:3859   */\n      dup1\n        /* \"#utility.yul\":3861:3867   */\n      0x00\n        /* \"#utility.yul\":3869:3875   */\n      dup1\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3930:3932   */\n      0x60\n        /* \"#utility.yul\":3918:3927   */\n      dup7\n        /* \"#utility.yul\":3909:3916   */\n      dup9\n        /* \"#utility.yul\":3905:3928   */\n      sub\n        /* \"#utility.yul\":3901:3933   */\n      slt\n        /* \"#utility.yul\":3898:3950   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":3946:3947   */\n      0x00\n        /* \"#utility.yul\":3943:3944   */\n      dup1\n        /* \"#utility.yul\":3936:3948   */\n      revert\n        /* \"#utility.yul\":3898:3950   */\n    tag_441:\n        /* \"#utility.yul\":3986:3995   */\n      dup6\n        /* \"#utility.yul\":3973:3996   */\n      calldataload\n        /* \"#utility.yul\":4015:4033   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4056:4058   */\n      dup1\n        /* \"#utility.yul\":4048:4054   */\n      dup3\n        /* \"#utility.yul\":4045:4059   */\n      gt\n        /* \"#utility.yul\":4042:4076   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":4072:4073   */\n      0x00\n        /* \"#utility.yul\":4069:4070   */\n      dup1\n        /* \"#utility.yul\":4062:4074   */\n      revert\n        /* \"#utility.yul\":4042:4076   */\n    tag_442:\n        /* \"#utility.yul\":4111:4201   */\n      tag_443\n        /* \"#utility.yul\":4193:4200   */\n      dup10\n        /* \"#utility.yul\":4184:4190   */\n      dup4\n        /* \"#utility.yul\":4173:4182   */\n      dup11\n        /* \"#utility.yul\":4169:4191   */\n      add\n        /* \"#utility.yul\":4111:4201   */\n      tag_399\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4220:4228   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":4085:4201   */\n      swap6\n      pop\n        /* \"#utility.yul\":4302:4304   */\n      0x20\n        /* \"#utility.yul\":4287:4305   */\n      dup9\n      add\n        /* \"#utility.yul\":4274:4306   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4359:4361   */\n      0x40\n        /* \"#utility.yul\":4344:4362   */\n      dup9\n      add\n        /* \"#utility.yul\":4331:4363   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4375:4391   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4372:4408   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4404:4405   */\n      0x00\n        /* \"#utility.yul\":4401:4402   */\n      dup1\n        /* \"#utility.yul\":4394:4406   */\n      revert\n        /* \"#utility.yul\":4372:4408   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":4443:4503   */\n      tag_445\n        /* \"#utility.yul\":4495:4502   */\n      dup9\n        /* \"#utility.yul\":4484:4492   */\n      dup3\n        /* \"#utility.yul\":4473:4482   */\n      dup10\n        /* \"#utility.yul\":4469:4493   */\n      add\n        /* \"#utility.yul\":4443:4503   */\n      tag_398\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3699:4563   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":4522:4530   */\n      swap3\n      swap5\n        /* \"#utility.yul\":4417:4503   */\n      swap4\n        /* \"#utility.yul\":3699:4563   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5403:5587   */\n    tag_400:\n        /* \"#utility.yul\":5455:5532   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5452:5453   */\n      0x00\n        /* \"#utility.yul\":5445:5533   */\n      mstore\n        /* \"#utility.yul\":5552:5556   */\n      0x41\n        /* \"#utility.yul\":5549:5550   */\n      0x04\n        /* \"#utility.yul\":5542:5557   */\n      mstore\n        /* \"#utility.yul\":5576:5580   */\n      0x24\n        /* \"#utility.yul\":5573:5574   */\n      0x00\n        /* \"#utility.yul\":5566:5581   */\n      revert\n        /* \"#utility.yul\":5592:6572   */\n    tag_71:\n        /* \"#utility.yul\":5660:5666   */\n      0x00\n        /* \"#utility.yul\":5713:5715   */\n      0x20\n        /* \"#utility.yul\":5701:5710   */\n      dup3\n        /* \"#utility.yul\":5692:5699   */\n      dup5\n        /* \"#utility.yul\":5688:5711   */\n      sub\n        /* \"#utility.yul\":5684:5716   */\n      slt\n        /* \"#utility.yul\":5681:5733   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":5729:5730   */\n      0x00\n        /* \"#utility.yul\":5726:5727   */\n      dup1\n        /* \"#utility.yul\":5719:5731   */\n      revert\n        /* \"#utility.yul\":5681:5733   */\n    tag_452:\n        /* \"#utility.yul\":5769:5778   */\n      dup2\n        /* \"#utility.yul\":5756:5779   */\n      calldataload\n        /* \"#utility.yul\":5798:5816   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5839:5841   */\n      dup1\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5828:5842   */\n      gt\n        /* \"#utility.yul\":5825:5859   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":5855:5856   */\n      0x00\n        /* \"#utility.yul\":5852:5853   */\n      dup1\n        /* \"#utility.yul\":5845:5857   */\n      revert\n        /* \"#utility.yul\":5825:5859   */\n    tag_453:\n        /* \"#utility.yul\":5893:5899   */\n      dup2\n        /* \"#utility.yul\":5882:5891   */\n      dup5\n        /* \"#utility.yul\":5878:5900   */\n      add\n        /* \"#utility.yul\":5868:5900   */\n      swap2\n      pop\n        /* \"#utility.yul\":5938:5945   */\n      dup5\n        /* \"#utility.yul\":5931:5935   */\n      0x1f\n        /* \"#utility.yul\":5927:5929   */\n      dup4\n        /* \"#utility.yul\":5923:5936   */\n      add\n        /* \"#utility.yul\":5919:5946   */\n      slt\n        /* \"#utility.yul\":5909:5964   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":5960:5961   */\n      0x00\n        /* \"#utility.yul\":5957:5958   */\n      dup1\n        /* \"#utility.yul\":5950:5962   */\n      revert\n        /* \"#utility.yul\":5909:5964   */\n    tag_454:\n        /* \"#utility.yul\":5996:5998   */\n      dup2\n        /* \"#utility.yul\":5983:5999   */\n      calldataload\n        /* \"#utility.yul\":6018:6020   */\n      dup2\n        /* \"#utility.yul\":6014:6016   */\n      dup2\n        /* \"#utility.yul\":6011:6021   */\n      gt\n        /* \"#utility.yul\":6008:6044   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6024:6042   */\n      tag_456\n      tag_400\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6158:6160   */\n      0x40\n        /* \"#utility.yul\":6152:6161   */\n      mload\n        /* \"#utility.yul\":6220:6224   */\n      0x1f\n        /* \"#utility.yul\":6212:6225   */\n      dup3\n      add\n        /* \"#utility.yul\":6063:6129   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":6208:6230   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6232:6234   */\n      0x3f\n        /* \"#utility.yul\":6204:6235   */\n      add\n        /* \"#utility.yul\":6200:6240   */\n      and\n        /* \"#utility.yul\":6188:6241   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6256:6274   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":6276:6298   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":6253:6299   */\n      or\n        /* \"#utility.yul\":6250:6322   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6302:6320   */\n      tag_458\n      tag_400\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6342:6352   */\n      dup2\n        /* \"#utility.yul\":6338:6340   */\n      0x40\n        /* \"#utility.yul\":6331:6353   */\n      mstore\n        /* \"#utility.yul\":6377:6379   */\n      dup3\n        /* \"#utility.yul\":6369:6375   */\n      dup2\n        /* \"#utility.yul\":6362:6380   */\n      mstore\n        /* \"#utility.yul\":6417:6424   */\n      dup8\n        /* \"#utility.yul\":6412:6414   */\n      0x20\n        /* \"#utility.yul\":6407:6409   */\n      dup5\n        /* \"#utility.yul\":6403:6405   */\n      dup8\n        /* \"#utility.yul\":6399:6410   */\n      add\n        /* \"#utility.yul\":6395:6415   */\n      add\n        /* \"#utility.yul\":6392:6425   */\n      gt\n        /* \"#utility.yul\":6389:6442   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6438:6439   */\n      0x00\n        /* \"#utility.yul\":6435:6436   */\n      dup1\n        /* \"#utility.yul\":6428:6440   */\n      revert\n        /* \"#utility.yul\":6389:6442   */\n    tag_459:\n        /* \"#utility.yul\":6494:6496   */\n      dup3\n        /* \"#utility.yul\":6489:6491   */\n      0x20\n        /* \"#utility.yul\":6485:6487   */\n      dup7\n        /* \"#utility.yul\":6481:6492   */\n      add\n        /* \"#utility.yul\":6476:6478   */\n      0x20\n        /* \"#utility.yul\":6468:6474   */\n      dup4\n        /* \"#utility.yul\":6464:6479   */\n      add\n        /* \"#utility.yul\":6451:6497   */\n      calldatacopy\n        /* \"#utility.yul\":6539:6540   */\n      0x00\n        /* \"#utility.yul\":6517:6532   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":6534:6536   */\n      0x20\n        /* \"#utility.yul\":6513:6537   */\n      add\n        /* \"#utility.yul\":6506:6541   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":6521:6527   */\n      swap6\n        /* \"#utility.yul\":5592:6572   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6808:7079   */\n    tag_89:\n        /* \"#utility.yul\":6991:6997   */\n      dup2\n        /* \"#utility.yul\":6983:6989   */\n      dup4\n        /* \"#utility.yul\":6978:6981   */\n      dup3\n        /* \"#utility.yul\":6965:6998   */\n      calldatacopy\n        /* \"#utility.yul\":6947:6950   */\n      0x00\n        /* \"#utility.yul\":7017:7033   */\n      swap2\n      add\n        /* \"#utility.yul\":7042:7055   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7017:7033   */\n      swap2\n        /* \"#utility.yul\":6808:7079   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7416:7576   */\n    tag_401:\n        /* \"#utility.yul\":7481:7501   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":7537:7550   */\n      dup1\n      iszero\n        /* \"#utility.yul\":7530:7551   */\n      iszero\n        /* \"#utility.yul\":7520:7552   */\n      dup2\n      eq\n        /* \"#utility.yul\":7510:7570   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":7566:7567   */\n      0x00\n        /* \"#utility.yul\":7563:7564   */\n      dup1\n        /* \"#utility.yul\":7556:7568   */\n      revert\n        /* \"#utility.yul\":7510:7570   */\n    tag_464:\n        /* \"#utility.yul\":7416:7576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7581:7777   */\n    tag_402:\n        /* \"#utility.yul\":7649:7669   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":7709:7751   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7698:7752   */\n      dup2\n      and\n        /* \"#utility.yul\":7688:7753   */\n      dup2\n      eq\n        /* \"#utility.yul\":7678:7771   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":7767:7768   */\n      0x00\n        /* \"#utility.yul\":7764:7765   */\n      dup1\n        /* \"#utility.yul\":7757:7769   */\n      revert\n        /* \"#utility.yul\":7782:8107   */\n    tag_403:\n        /* \"#utility.yul\":7870:7876   */\n      dup2\n        /* \"#utility.yul\":7865:7868   */\n      dup4\n        /* \"#utility.yul\":7858:7877   */\n      mstore\n        /* \"#utility.yul\":7922:7928   */\n      dup2\n        /* \"#utility.yul\":7915:7920   */\n      dup2\n        /* \"#utility.yul\":7908:7912   */\n      0x20\n        /* \"#utility.yul\":7903:7906   */\n      dup6\n        /* \"#utility.yul\":7899:7913   */\n      add\n        /* \"#utility.yul\":7886:7929   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":7974:7975   */\n      0x00\n        /* \"#utility.yul\":7967:7971   */\n      0x20\n        /* \"#utility.yul\":7958:7964   */\n      dup3\n        /* \"#utility.yul\":7953:7956   */\n      dup5\n        /* \"#utility.yul\":7949:7965   */\n      add\n        /* \"#utility.yul\":7945:7972   */\n      add\n        /* \"#utility.yul\":7938:7976   */\n      mstore\n        /* \"#utility.yul\":7840:7843   */\n      0x00\n        /* \"#utility.yul\":8096:8100   */\n      0x20\n        /* \"#utility.yul\":8026:8092   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":8021:8023   */\n      0x1f\n        /* \"#utility.yul\":8013:8019   */\n      dup5\n        /* \"#utility.yul\":8009:8024   */\n      add\n        /* \"#utility.yul\":8005:8093   */\n      and\n        /* \"#utility.yul\":8000:8003   */\n      dup5\n        /* \"#utility.yul\":7996:8094   */\n      add\n        /* \"#utility.yul\":7992:8101   */\n      add\n        /* \"#utility.yul\":7985:8101   */\n      swap1\n      pop\n        /* \"#utility.yul\":7782:8107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8112:10140   */\n    tag_404:\n        /* \"#utility.yul\":8232:8238   */\n      dup2\n        /* \"#utility.yul\":8227:8230   */\n      dup4\n        /* \"#utility.yul\":8220:8239   */\n      mstore\n        /* \"#utility.yul\":8202:8205   */\n      0x00\n        /* \"#utility.yul\":8258:8262   */\n      0x20\n        /* \"#utility.yul\":8299:8301   */\n      dup1\n        /* \"#utility.yul\":8294:8297   */\n      dup6\n        /* \"#utility.yul\":8290:8302   */\n      add\n        /* \"#utility.yul\":8324:8335   */\n      dup1\n        /* \"#utility.yul\":8351:8362   */\n      dup2\n        /* \"#utility.yul\":8344:8362   */\n      swap7\n      pop\n        /* \"#utility.yul\":8401:8407   */\n      dup6\n        /* \"#utility.yul\":8398:8399   */\n      0x05\n        /* \"#utility.yul\":8394:8408   */\n      shl\n        /* \"#utility.yul\":8387:8392   */\n      dup2\n        /* \"#utility.yul\":8383:8409   */\n      add\n        /* \"#utility.yul\":8371:8409   */\n      swap2\n      pop\n        /* \"#utility.yul\":8432:8437   */\n      dup5\n        /* \"#utility.yul\":8455:8456   */\n      0x00\n        /* \"#utility.yul\":8465:10114   */\n    tag_469:\n        /* \"#utility.yul\":8479:8485   */\n      dup8\n        /* \"#utility.yul\":8476:8477   */\n      dup2\n        /* \"#utility.yul\":8473:8486   */\n      lt\n        /* \"#utility.yul\":8465:10114   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":8550:8555   */\n      dup3\n        /* \"#utility.yul\":8544:8548   */\n      dup5\n        /* \"#utility.yul\":8540:8556   */\n      sub\n        /* \"#utility.yul\":8535:8538   */\n      dup10\n        /* \"#utility.yul\":8528:8557   */\n      mstore\n        /* \"#utility.yul\":8609:8615   */\n      dup2\n        /* \"#utility.yul\":8596:8616   */\n      calldataload\n        /* \"#utility.yul\":8695:8761   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\n        /* \"#utility.yul\":8687:8692   */\n      dup9\n        /* \"#utility.yul\":8671:8685   */\n      calldatasize\n        /* \"#utility.yul\":8667:8693   */\n      sub\n        /* \"#utility.yul\":8663:8762   */\n      add\n        /* \"#utility.yul\":8643:8661   */\n      dup2\n        /* \"#utility.yul\":8639:8763   */\n      slt\n        /* \"#utility.yul\":8629:8781   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":8777:8778   */\n      0x00\n        /* \"#utility.yul\":8774:8775   */\n      dup1\n        /* \"#utility.yul\":8767:8779   */\n      revert\n        /* \"#utility.yul\":8629:8781   */\n    tag_472:\n        /* \"#utility.yul\":8809:8839   */\n      dup8\n      add\n        /* \"#utility.yul\":8862:8866   */\n      0xc0\n        /* \"#utility.yul\":8906:8930   */\n      tag_473\n        /* \"#utility.yul\":8809:8839   */\n      dup3\n        /* \"#utility.yul\":8906:8930   */\n      tag_401\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8899:8931   */\n      iszero\n        /* \"#utility.yul\":8892:8932   */\n      iszero\n        /* \"#utility.yul\":8886:8890   */\n      dup7\n        /* \"#utility.yul\":8879:8933   */\n      mstore\n        /* \"#utility.yul\":8982:9015   */\n      tag_474\n        /* \"#utility.yul\":9011:9013   */\n      dup8\n        /* \"#utility.yul\":9002:9009   */\n      dup4\n        /* \"#utility.yul\":8998:9014   */\n      add\n        /* \"#utility.yul\":8982:9015   */\n      tag_401\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8975:9016   */\n      iszero\n        /* \"#utility.yul\":8968:9017   */\n      iszero\n        /* \"#utility.yul\":8953:8966   */\n      dup7\n      dup9\n      add\n        /* \"#utility.yul\":8946:9018   */\n      mstore\n        /* \"#utility.yul\":9041:9045   */\n      0x40\n        /* \"#utility.yul\":9093:9109   */\n      dup3\n      dup2\n      add\n        /* \"#utility.yul\":9080:9110   */\n      calldataload\n        /* \"#utility.yul\":9065:9078   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":9058:9111   */\n      mstore\n        /* \"#utility.yul\":9134:9138   */\n      0x60\n        /* \"#utility.yul\":9215:9257   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9177:9213   */\n      tag_475\n        /* \"#utility.yul\":9196:9212   */\n      dup3\n      dup6\n      add\n        /* \"#utility.yul\":9177:9213   */\n      tag_402\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9173:9258   */\n      and\n        /* \"#utility.yul\":9158:9171   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":9151:9259   */\n      mstore\n        /* \"#utility.yul\":9282:9286   */\n      0x80\n        /* \"#utility.yul\":9334:9350   */\n      dup3\n      dup2\n      add\n        /* \"#utility.yul\":9321:9351   */\n      calldataload\n        /* \"#utility.yul\":9306:9319   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":9299:9352   */\n      mstore\n        /* \"#utility.yul\":9375:9379   */\n      0xa0\n        /* \"#utility.yul\":9433:9449   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":9420:9450   */\n      calldataload\n        /* \"#utility.yul\":9507:9521   */\n      calldatasize\n        /* \"#utility.yul\":9503:9531   */\n      dup5\n      swap1\n      sub\n        /* \"#utility.yul\":9533:9599   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1\n        /* \"#utility.yul\":9499:9600   */\n      add\n        /* \"#utility.yul\":9473:9601   */\n      dup2\n      slt\n        /* \"#utility.yul\":9463:9619   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":9615:9616   */\n      0x00\n        /* \"#utility.yul\":9612:9613   */\n      dup1\n        /* \"#utility.yul\":9605:9617   */\n      revert\n        /* \"#utility.yul\":9463:9619   */\n    tag_476:\n        /* \"#utility.yul\":9647:9681   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":9759:9775   */\n      dup8\n      dup2\n      add\n      swap3\n      swap1\n        /* \"#utility.yul\":9710:9731   */\n      calldataload\n        /* \"#utility.yul\":9804:9822   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9791:9823   */\n      dup2\n      gt\n        /* \"#utility.yul\":9788:9840   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":9836:9837   */\n      0x00\n        /* \"#utility.yul\":9833:9834   */\n      dup1\n        /* \"#utility.yul\":9826:9838   */\n      revert\n        /* \"#utility.yul\":9788:9840   */\n    tag_477:\n        /* \"#utility.yul\":9889:9897   */\n      dup1\n        /* \"#utility.yul\":9873:9887   */\n      calldatasize\n        /* \"#utility.yul\":9869:9898   */\n      sub\n        /* \"#utility.yul\":9860:9867   */\n      dup5\n        /* \"#utility.yul\":9856:9899   */\n      sgt\n        /* \"#utility.yul\":9853:9916   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":9912:9913   */\n      0x00\n        /* \"#utility.yul\":9909:9910   */\n      dup1\n        /* \"#utility.yul\":9902:9914   */\n      revert\n        /* \"#utility.yul\":9853:9916   */\n    tag_478:\n        /* \"#utility.yul\":9951:9953   */\n      dup3\n        /* \"#utility.yul\":9946:9948   */\n      dup3\n        /* \"#utility.yul\":9940:9944   */\n      dup10\n        /* \"#utility.yul\":9936:9949   */\n      add\n        /* \"#utility.yul\":9929:9954   */\n      mstore\n        /* \"#utility.yul\":9975:10034   */\n      tag_479\n        /* \"#utility.yul\":10030:10032   */\n      dup4\n        /* \"#utility.yul\":10024:10028   */\n      dup10\n        /* \"#utility.yul\":10020:10033   */\n      add\n        /* \"#utility.yul\":10010:10018   */\n      dup3\n        /* \"#utility.yul\":10001:10008   */\n      dup7\n        /* \"#utility.yul\":9975:10034   */\n      tag_403\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10092:10104   */\n      swap13\n      dup10\n      add\n      swap13\n        /* \"#utility.yul\":9967:10034   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10057:10072   */\n      swap3\n      dup7\n      add\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":8501:8502   */\n      0x01\n        /* \"#utility.yul\":8494:8503   */\n      add\n        /* \"#utility.yul\":8465:10114   */\n      jump(tag_469)\n    tag_471:\n      pop\n        /* \"#utility.yul\":10130:10134   */\n      swap2\n      swap8\n        /* \"#utility.yul\":8112:10140   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10145:10739   */\n    tag_101:\n        /* \"#utility.yul\":10495:10497   */\n      0x40\n        /* \"#utility.yul\":10484:10493   */\n      dup2\n        /* \"#utility.yul\":10477:10498   */\n      mstore\n        /* \"#utility.yul\":10534:10535   */\n      0x05\n        /* \"#utility.yul\":10529:10531   */\n      0x40\n        /* \"#utility.yul\":10518:10527   */\n      dup3\n        /* \"#utility.yul\":10514:10532   */\n      add\n        /* \"#utility.yul\":10507:10536   */\n      mstore\n        /* \"#utility.yul\":10572:10579   */\n      0x73656c663a000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10567:10569   */\n      0x60\n        /* \"#utility.yul\":10556:10565   */\n      dup3\n        /* \"#utility.yul\":10552:10570   */\n      add\n        /* \"#utility.yul\":10545:10580   */\n      mstore\n        /* \"#utility.yul\":10618:10621   */\n      0x80\n        /* \"#utility.yul\":10611:10615   */\n      0x20\n        /* \"#utility.yul\":10600:10609   */\n      dup3\n        /* \"#utility.yul\":10596:10616   */\n      add\n        /* \"#utility.yul\":10589:10622   */\n      mstore\n        /* \"#utility.yul\":10458:10462   */\n      0x00\n        /* \"#utility.yul\":10639:10733   */\n      tag_86\n        /* \"#utility.yul\":10728:10731   */\n      0x80\n        /* \"#utility.yul\":10717:10726   */\n      dup4\n        /* \"#utility.yul\":10713:10732   */\n      add\n        /* \"#utility.yul\":10705:10711   */\n      dup5\n        /* \"#utility.yul\":10697:10703   */\n      dup7\n        /* \"#utility.yul\":10639:10733   */\n      tag_404\n      jump\t// in\n        /* \"#utility.yul\":10744:11339   */\n    tag_108:\n        /* \"#utility.yul\":11094:11096   */\n      0x40\n        /* \"#utility.yul\":11083:11092   */\n      dup2\n        /* \"#utility.yul\":11076:11097   */\n      mstore\n        /* \"#utility.yul\":11133:11134   */\n      0x06\n        /* \"#utility.yul\":11128:11130   */\n      0x40\n        /* \"#utility.yul\":11117:11126   */\n      dup3\n        /* \"#utility.yul\":11113:11131   */\n      add\n        /* \"#utility.yul\":11106:11135   */\n      mstore\n        /* \"#utility.yul\":11171:11179   */\n      0x67756573743a0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11166:11168   */\n      0x60\n        /* \"#utility.yul\":11155:11164   */\n      dup3\n        /* \"#utility.yul\":11151:11169   */\n      add\n        /* \"#utility.yul\":11144:11180   */\n      mstore\n        /* \"#utility.yul\":11218:11221   */\n      0x80\n        /* \"#utility.yul\":11211:11215   */\n      0x20\n        /* \"#utility.yul\":11200:11209   */\n      dup3\n        /* \"#utility.yul\":11196:11216   */\n      add\n        /* \"#utility.yul\":11189:11222   */\n      mstore\n        /* \"#utility.yul\":11057:11061   */\n      0x00\n        /* \"#utility.yul\":11239:11333   */\n      tag_86\n        /* \"#utility.yul\":11328:11331   */\n      0x80\n        /* \"#utility.yul\":11317:11326   */\n      dup4\n        /* \"#utility.yul\":11313:11332   */\n      add\n        /* \"#utility.yul\":11305:11311   */\n      dup5\n        /* \"#utility.yul\":11297:11303   */\n      dup7\n        /* \"#utility.yul\":11239:11333   */\n      tag_404\n      jump\t// in\n        /* \"#utility.yul\":11344:11528   */\n    tag_113:\n        /* \"#utility.yul\":11396:11473   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11393:11394   */\n      0x00\n        /* \"#utility.yul\":11386:11474   */\n      mstore\n        /* \"#utility.yul\":11493:11497   */\n      0x32\n        /* \"#utility.yul\":11490:11491   */\n      0x04\n        /* \"#utility.yul\":11483:11498   */\n      mstore\n        /* \"#utility.yul\":11517:11521   */\n      0x24\n        /* \"#utility.yul\":11514:11515   */\n      0x00\n        /* \"#utility.yul\":11507:11522   */\n      revert\n        /* \"#utility.yul\":11786:12267   */\n    tag_405:\n        /* \"#utility.yul\":11827:11830   */\n      0x00\n        /* \"#utility.yul\":11865:11870   */\n      dup2\n        /* \"#utility.yul\":11859:11871   */\n      mload\n        /* \"#utility.yul\":11892:11898   */\n      dup1\n        /* \"#utility.yul\":11887:11890   */\n      dup5\n        /* \"#utility.yul\":11880:11899   */\n      mstore\n        /* \"#utility.yul\":11917:11918   */\n      0x00\n        /* \"#utility.yul\":11927:12089   */\n    tag_487:\n        /* \"#utility.yul\":11941:11947   */\n      dup2\n        /* \"#utility.yul\":11938:11939   */\n      dup2\n        /* \"#utility.yul\":11935:11948   */\n      lt\n        /* \"#utility.yul\":11927:12089   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":12003:12007   */\n      0x20\n        /* \"#utility.yul\":12059:12072   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":12055:12077   */\n      dup2\n      add\n        /* \"#utility.yul\":12049:12078   */\n      mload\n        /* \"#utility.yul\":12031:12042   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":12027:12047   */\n      dup3\n      add\n        /* \"#utility.yul\":12020:12079   */\n      mstore\n        /* \"#utility.yul\":11956:11968   */\n      add\n        /* \"#utility.yul\":11927:12089   */\n      jump(tag_487)\n    tag_489:\n        /* \"#utility.yul\":11931:11934   */\n      pop\n        /* \"#utility.yul\":12134:12135   */\n      0x00\n        /* \"#utility.yul\":12127:12131   */\n      0x20\n        /* \"#utility.yul\":12118:12124   */\n      dup3\n        /* \"#utility.yul\":12113:12116   */\n      dup7\n        /* \"#utility.yul\":12109:12125   */\n      add\n        /* \"#utility.yul\":12105:12132   */\n      add\n        /* \"#utility.yul\":12098:12136   */\n      mstore\n        /* \"#utility.yul\":12256:12260   */\n      0x20\n        /* \"#utility.yul\":12186:12252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":12181:12183   */\n      0x1f\n        /* \"#utility.yul\":12173:12179   */\n      dup4\n        /* \"#utility.yul\":12169:12184   */\n      add\n        /* \"#utility.yul\":12165:12253   */\n      and\n        /* \"#utility.yul\":12160:12163   */\n      dup6\n        /* \"#utility.yul\":12156:12254   */\n      add\n        /* \"#utility.yul\":12152:12261   */\n      add\n        /* \"#utility.yul\":12145:12261   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":11786:12267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12272:12489   */\n    tag_140:\n        /* \"#utility.yul\":12419:12421   */\n      0x20\n        /* \"#utility.yul\":12408:12417   */\n      dup2\n        /* \"#utility.yul\":12401:12422   */\n      mstore\n        /* \"#utility.yul\":12382:12386   */\n      0x00\n        /* \"#utility.yul\":12439:12483   */\n      tag_82\n        /* \"#utility.yul\":12479:12481   */\n      0x20\n        /* \"#utility.yul\":12468:12477   */\n      dup4\n        /* \"#utility.yul\":12464:12482   */\n      add\n        /* \"#utility.yul\":12456:12462   */\n      dup5\n        /* \"#utility.yul\":12439:12483   */\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":13090:13477   */\n    tag_164:\n        /* \"#utility.yul\":13187:13191   */\n      0x00\n        /* \"#utility.yul\":13245:13256   */\n      dup3\n        /* \"#utility.yul\":13232:13257   */\n      calldataload\n        /* \"#utility.yul\":13335:13401   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\n        /* \"#utility.yul\":13324:13332   */\n      dup4\n        /* \"#utility.yul\":13308:13322   */\n      calldatasize\n        /* \"#utility.yul\":13304:13333   */\n      sub\n        /* \"#utility.yul\":13300:13402   */\n      add\n        /* \"#utility.yul\":13280:13298   */\n      dup2\n        /* \"#utility.yul\":13276:13403   */\n      slt\n        /* \"#utility.yul\":13266:13421   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":13417:13418   */\n      0x00\n        /* \"#utility.yul\":13414:13415   */\n      dup1\n        /* \"#utility.yul\":13407:13419   */\n      revert\n        /* \"#utility.yul\":13266:13421   */\n    tag_494:\n        /* \"#utility.yul\":13438:13471   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":13090:13477   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13482:13662   */\n    tag_166:\n        /* \"#utility.yul\":13538:13544   */\n      0x00\n        /* \"#utility.yul\":13591:13593   */\n      0x20\n        /* \"#utility.yul\":13579:13588   */\n      dup3\n        /* \"#utility.yul\":13570:13577   */\n      dup5\n        /* \"#utility.yul\":13566:13589   */\n      sub\n        /* \"#utility.yul\":13562:13594   */\n      slt\n        /* \"#utility.yul\":13559:13611   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":13607:13608   */\n      0x00\n        /* \"#utility.yul\":13604:13605   */\n      dup1\n        /* \"#utility.yul\":13597:13609   */\n      revert\n        /* \"#utility.yul\":13559:13611   */\n    tag_496:\n        /* \"#utility.yul\":13630:13656   */\n      tag_82\n        /* \"#utility.yul\":13646:13655   */\n      dup3\n        /* \"#utility.yul\":13630:13656   */\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":13991:14177   */\n    tag_174:\n        /* \"#utility.yul\":14050:14056   */\n      0x00\n        /* \"#utility.yul\":14103:14105   */\n      0x20\n        /* \"#utility.yul\":14091:14100   */\n      dup3\n        /* \"#utility.yul\":14082:14089   */\n      dup5\n        /* \"#utility.yul\":14078:14101   */\n      sub\n        /* \"#utility.yul\":14074:14106   */\n      slt\n        /* \"#utility.yul\":14071:14123   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":14119:14120   */\n      0x00\n        /* \"#utility.yul\":14116:14117   */\n      dup1\n        /* \"#utility.yul\":14109:14121   */\n      revert\n        /* \"#utility.yul\":14071:14123   */\n    tag_500:\n        /* \"#utility.yul\":14142:14171   */\n      tag_82\n        /* \"#utility.yul\":14161:14170   */\n      dup3\n        /* \"#utility.yul\":14142:14171   */\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":14182:14762   */\n    tag_178:\n        /* \"#utility.yul\":14259:14263   */\n      0x00\n        /* \"#utility.yul\":14265:14271   */\n      dup1\n        /* \"#utility.yul\":14325:14336   */\n      dup4\n        /* \"#utility.yul\":14312:14337   */\n      calldataload\n        /* \"#utility.yul\":14415:14481   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1\n        /* \"#utility.yul\":14404:14412   */\n      dup5\n        /* \"#utility.yul\":14388:14402   */\n      calldatasize\n        /* \"#utility.yul\":14384:14413   */\n      sub\n        /* \"#utility.yul\":14380:14482   */\n      add\n        /* \"#utility.yul\":14360:14378   */\n      dup2\n        /* \"#utility.yul\":14356:14483   */\n      slt\n        /* \"#utility.yul\":14346:14501   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":14497:14498   */\n      0x00\n        /* \"#utility.yul\":14494:14495   */\n      dup1\n        /* \"#utility.yul\":14487:14499   */\n      revert\n        /* \"#utility.yul\":14346:14501   */\n    tag_503:\n        /* \"#utility.yul\":14524:14557   */\n      dup4\n      add\n        /* \"#utility.yul\":14576:14596   */\n      dup1\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":14619:14637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14608:14638   */\n      dup3\n      gt\n        /* \"#utility.yul\":14605:14655   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":14651:14652   */\n      0x00\n        /* \"#utility.yul\":14648:14649   */\n      dup1\n        /* \"#utility.yul\":14641:14653   */\n      revert\n        /* \"#utility.yul\":14605:14655   */\n    tag_504:\n        /* \"#utility.yul\":14684:14688   */\n      0x20\n        /* \"#utility.yul\":14672:14689   */\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":14715:14729   */\n      calldatasize\n        /* \"#utility.yul\":14711:14738   */\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":14701:14739   */\n      dup3\n      sgt\n        /* \"#utility.yul\":14698:14756   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":14752:14753   */\n      0x00\n        /* \"#utility.yul\":14749:14750   */\n      dup1\n        /* \"#utility.yul\":14742:14754   */\n      revert\n        /* \"#utility.yul\":14767:14951   */\n    tag_406:\n        /* \"#utility.yul\":14819:14896   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14816:14817   */\n      0x00\n        /* \"#utility.yul\":14809:14897   */\n      mstore\n        /* \"#utility.yul\":14916:14920   */\n      0x11\n        /* \"#utility.yul\":14913:14914   */\n      0x04\n        /* \"#utility.yul\":14906:14921   */\n      mstore\n        /* \"#utility.yul\":14940:14944   */\n      0x24\n        /* \"#utility.yul\":14937:14938   */\n      0x00\n        /* \"#utility.yul\":14930:14945   */\n      revert\n        /* \"#utility.yul\":14956:15151   */\n    tag_189:\n        /* \"#utility.yul\":14995:14998   */\n      0x00\n        /* \"#utility.yul\":15026:15092   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15019:15024   */\n      dup3\n        /* \"#utility.yul\":15016:15093   */\n      sub\n        /* \"#utility.yul\":15013:15116   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":15096:15114   */\n      tag_509\n      tag_406\n      jump\t// in\n    tag_509:\n      pop\n        /* \"#utility.yul\":15143:15144   */\n      0x01\n        /* \"#utility.yul\":15132:15145   */\n      add\n      swap1\n        /* \"#utility.yul\":14956:15151   */\n      jump\t// out\n        /* \"#utility.yul\":15156:15487   */\n    tag_193:\n        /* \"#utility.yul\":15261:15270   */\n      0x00\n        /* \"#utility.yul\":15272:15281   */\n      dup1\n        /* \"#utility.yul\":15314:15322   */\n      dup6\n        /* \"#utility.yul\":15302:15312   */\n      dup6\n        /* \"#utility.yul\":15299:15323   */\n      gt\n        /* \"#utility.yul\":15296:15340   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":15336:15337   */\n      0x00\n        /* \"#utility.yul\":15333:15334   */\n      dup1\n        /* \"#utility.yul\":15326:15338   */\n      revert\n        /* \"#utility.yul\":15296:15340   */\n    tag_511:\n        /* \"#utility.yul\":15365:15371   */\n      dup4\n        /* \"#utility.yul\":15355:15363   */\n      dup7\n        /* \"#utility.yul\":15352:15372   */\n      gt\n        /* \"#utility.yul\":15349:15389   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15385:15386   */\n      0x00\n        /* \"#utility.yul\":15382:15383   */\n      dup1\n        /* \"#utility.yul\":15375:15387   */\n      revert\n        /* \"#utility.yul\":15349:15389   */\n    tag_512:\n      pop\n      pop\n        /* \"#utility.yul\":15411:15434   */\n      dup3\n      add\n      swap4\n        /* \"#utility.yul\":15456:15481   */\n      swap2\n      swap1\n      swap3\n      sub\n      swap2\n      pop\n        /* \"#utility.yul\":15156:15487   */\n      jump\t// out\n        /* \"#utility.yul\":15492:15617   */\n    tag_211:\n        /* \"#utility.yul\":15557:15566   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":15578:15588   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":15575:15611   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":15591:15609   */\n      tag_80\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":15622:16014   */\n    tag_217:\n        /* \"#utility.yul\":15841:15843   */\n      0x60\n        /* \"#utility.yul\":15830:15839   */\n      dup2\n        /* \"#utility.yul\":15823:15844   */\n      mstore\n        /* \"#utility.yul\":15804:15808   */\n      0x00\n        /* \"#utility.yul\":15861:15922   */\n      tag_517\n        /* \"#utility.yul\":15918:15920   */\n      0x60\n        /* \"#utility.yul\":15907:15916   */\n      dup4\n        /* \"#utility.yul\":15903:15921   */\n      add\n        /* \"#utility.yul\":15895:15901   */\n      dup7\n        /* \"#utility.yul\":15887:15893   */\n      dup9\n        /* \"#utility.yul\":15861:15922   */\n      tag_403\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15953:15955   */\n      0x20\n        /* \"#utility.yul\":15938:15956   */\n      dup4\n      add\n        /* \"#utility.yul\":15931:15965   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":15996:15998   */\n      0x40\n        /* \"#utility.yul\":15981:15999   */\n      add\n        /* \"#utility.yul\":15974:16008   */\n      mstore\n        /* \"#utility.yul\":15853:15922   */\n      swap3\n        /* \"#utility.yul\":15622:16014   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16525:16813   */\n    tag_246:\n        /* \"#utility.yul\":16700:16706   */\n      dup3\n        /* \"#utility.yul\":16689:16698   */\n      dup2\n        /* \"#utility.yul\":16682:16707   */\n      mstore\n        /* \"#utility.yul\":16743:16745   */\n      0x40\n        /* \"#utility.yul\":16738:16740   */\n      0x20\n        /* \"#utility.yul\":16727:16736   */\n      dup3\n        /* \"#utility.yul\":16723:16741   */\n      add\n        /* \"#utility.yul\":16716:16746   */\n      mstore\n        /* \"#utility.yul\":16663:16667   */\n      0x00\n        /* \"#utility.yul\":16763:16807   */\n      tag_86\n        /* \"#utility.yul\":16803:16805   */\n      0x40\n        /* \"#utility.yul\":16792:16801   */\n      dup4\n        /* \"#utility.yul\":16788:16806   */\n      add\n        /* \"#utility.yul\":16780:16786   */\n      dup5\n        /* \"#utility.yul\":16763:16807   */\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":16818:17259   */\n    tag_278:\n        /* \"#utility.yul\":17037:17043   */\n      dup5\n        /* \"#utility.yul\":17026:17035   */\n      dup2\n        /* \"#utility.yul\":17019:17044   */\n      mstore\n        /* \"#utility.yul\":17092:17134   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17084:17090   */\n      dup5\n        /* \"#utility.yul\":17080:17135   */\n      and\n        /* \"#utility.yul\":17075:17077   */\n      0x20\n        /* \"#utility.yul\":17064:17073   */\n      dup3\n        /* \"#utility.yul\":17060:17078   */\n      add\n        /* \"#utility.yul\":17053:17136   */\n      mstore\n        /* \"#utility.yul\":17172:17174   */\n      0x60\n        /* \"#utility.yul\":17167:17169   */\n      0x40\n        /* \"#utility.yul\":17156:17165   */\n      dup3\n        /* \"#utility.yul\":17152:17170   */\n      add\n        /* \"#utility.yul\":17145:17175   */\n      mstore\n        /* \"#utility.yul\":17000:17004   */\n      0x00\n        /* \"#utility.yul\":17192:17253   */\n      tag_523\n        /* \"#utility.yul\":17249:17251   */\n      0x60\n        /* \"#utility.yul\":17238:17247   */\n      dup4\n        /* \"#utility.yul\":17234:17252   */\n      add\n        /* \"#utility.yul\":17226:17232   */\n      dup5\n        /* \"#utility.yul\":17218:17224   */\n      dup7\n        /* \"#utility.yul\":17192:17253   */\n      tag_403\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":17184:17253   */\n      swap7\n        /* \"#utility.yul\":16818:17259   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17264:17508   */\n    tag_333:\n        /* \"#utility.yul\":17421:17423   */\n      0x20\n        /* \"#utility.yul\":17410:17419   */\n      dup2\n        /* \"#utility.yul\":17403:17424   */\n      mstore\n        /* \"#utility.yul\":17384:17388   */\n      0x00\n        /* \"#utility.yul\":17441:17502   */\n      tag_86\n        /* \"#utility.yul\":17498:17500   */\n      0x20\n        /* \"#utility.yul\":17487:17496   */\n      dup4\n        /* \"#utility.yul\":17483:17501   */\n      add\n        /* \"#utility.yul\":17475:17481   */\n      dup5\n        /* \"#utility.yul\":17467:17473   */\n      dup7\n        /* \"#utility.yul\":17441:17502   */\n      tag_403\n      jump\t// in\n        /* \"#utility.yul\":17513:17641   */\n    tag_336:\n        /* \"#utility.yul\":17580:17589   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":17601:17612   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":17598:17635   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":17615:17633   */\n      tag_80\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":17646:17961   */\n    tag_344:\n        /* \"#utility.yul\":17831:17833   */\n      0x40\n        /* \"#utility.yul\":17820:17829   */\n      dup2\n        /* \"#utility.yul\":17813:17834   */\n      mstore\n        /* \"#utility.yul\":17794:17798   */\n      0x00\n        /* \"#utility.yul\":17851:17912   */\n      tag_530\n        /* \"#utility.yul\":17908:17910   */\n      0x40\n        /* \"#utility.yul\":17897:17906   */\n      dup4\n        /* \"#utility.yul\":17893:17911   */\n      add\n        /* \"#utility.yul\":17885:17891   */\n      dup6\n        /* \"#utility.yul\":17877:17883   */\n      dup8\n        /* \"#utility.yul\":17851:17912   */\n      tag_403\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":17843:17912   */\n      swap1\n      pop\n        /* \"#utility.yul\":17948:17954   */\n      dup3\n        /* \"#utility.yul\":17943:17945   */\n      0x20\n        /* \"#utility.yul\":17932:17941   */\n      dup4\n        /* \"#utility.yul\":17928:17946   */\n      add\n        /* \"#utility.yul\":17921:17955   */\n      mstore\n        /* \"#utility.yul\":17646:17961   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17966:18290   */\n    tag_348:\n        /* \"#utility.yul\":18149:18151   */\n      0x40\n        /* \"#utility.yul\":18138:18147   */\n      dup2\n        /* \"#utility.yul\":18131:18152   */\n      mstore\n        /* \"#utility.yul\":18112:18116   */\n      0x00\n        /* \"#utility.yul\":18169:18230   */\n      tag_532\n        /* \"#utility.yul\":18226:18228   */\n      0x40\n        /* \"#utility.yul\":18215:18224   */\n      dup4\n        /* \"#utility.yul\":18211:18229   */\n      add\n        /* \"#utility.yul\":18203:18209   */\n      dup6\n        /* \"#utility.yul\":18195:18201   */\n      dup8\n        /* \"#utility.yul\":18169:18230   */\n      tag_403\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18161:18230   */\n      swap1\n      pop\n        /* \"#utility.yul\":18278:18282   */\n      0xff\n        /* \"#utility.yul\":18270:18276   */\n      dup4\n        /* \"#utility.yul\":18266:18283   */\n      and\n        /* \"#utility.yul\":18261:18263   */\n      0x20\n        /* \"#utility.yul\":18250:18259   */\n      dup4\n        /* \"#utility.yul\":18246:18264   */\n      add\n        /* \"#utility.yul\":18239:18284   */\n      mstore\n        /* \"#utility.yul\":17966:18290   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19083:19479   */\n    tag_363:\n        /* \"#utility.yul\":19290:19292   */\n      0x60\n        /* \"#utility.yul\":19279:19288   */\n      dup2\n        /* \"#utility.yul\":19272:19293   */\n      mstore\n        /* \"#utility.yul\":19253:19257   */\n      0x00\n        /* \"#utility.yul\":19310:19371   */\n      tag_536\n        /* \"#utility.yul\":19367:19369   */\n      0x60\n        /* \"#utility.yul\":19356:19365   */\n      dup4\n        /* \"#utility.yul\":19352:19370   */\n      add\n        /* \"#utility.yul\":19344:19350   */\n      dup7\n        /* \"#utility.yul\":19336:19342   */\n      dup9\n        /* \"#utility.yul\":19310:19371   */\n      tag_403\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19402:19404   */\n      0x20\n        /* \"#utility.yul\":19387:19405   */\n      dup4\n      add\n        /* \"#utility.yul\":19380:19414   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":19457:19471   */\n      swap1\n      iszero\n        /* \"#utility.yul\":19450:19472   */\n      iszero\n        /* \"#utility.yul\":19445:19447   */\n      0x40\n        /* \"#utility.yul\":19430:19448   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":19423:19473   */\n      mstore\n        /* \"#utility.yul\":19302:19371   */\n      swap3\n        /* \"#utility.yul\":19083:19479   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19484:19805   */\n    tag_379:\n        /* \"#utility.yul\":19675:19681   */\n      dup4\n        /* \"#utility.yul\":19664:19673   */\n      dup2\n        /* \"#utility.yul\":19657:19682   */\n      mstore\n        /* \"#utility.yul\":19718:19720   */\n      0x40\n        /* \"#utility.yul\":19713:19715   */\n      0x20\n        /* \"#utility.yul\":19702:19711   */\n      dup3\n        /* \"#utility.yul\":19698:19716   */\n      add\n        /* \"#utility.yul\":19691:19721   */\n      mstore\n        /* \"#utility.yul\":19638:19642   */\n      0x00\n        /* \"#utility.yul\":19738:19799   */\n      tag_538\n        /* \"#utility.yul\":19795:19797   */\n      0x40\n        /* \"#utility.yul\":19784:19793   */\n      dup4\n        /* \"#utility.yul\":19780:19798   */\n      add\n        /* \"#utility.yul\":19772:19778   */\n      dup5\n        /* \"#utility.yul\":19764:19770   */\n      dup7\n        /* \"#utility.yul\":19738:19799   */\n      tag_403\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19730:19799   */\n      swap6\n        /* \"#utility.yul\":19484:19805   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19810:20059   */\n    tag_383:\n        /* \"#utility.yul\":19879:19885   */\n      0x00\n        /* \"#utility.yul\":19932:19934   */\n      0x20\n        /* \"#utility.yul\":19920:19929   */\n      dup3\n        /* \"#utility.yul\":19911:19918   */\n      dup5\n        /* \"#utility.yul\":19907:19930   */\n      sub\n        /* \"#utility.yul\":19903:19935   */\n      slt\n        /* \"#utility.yul\":19900:19952   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":19948:19949   */\n      0x00\n        /* \"#utility.yul\":19945:19946   */\n      dup1\n        /* \"#utility.yul\":19938:19950   */\n      revert\n        /* \"#utility.yul\":19900:19952   */\n    tag_540:\n        /* \"#utility.yul\":19980:19989   */\n      dup2\n        /* \"#utility.yul\":19974:19990   */\n      mload\n        /* \"#utility.yul\":19999:20029   */\n      tag_82\n        /* \"#utility.yul\":20023:20028   */\n      dup2\n        /* \"#utility.yul\":19999:20029   */\n      tag_397\n      jump\t// in\n\n    auxdata: 0xa26469706673582212209bb95d18e97f278aa47e0c04c20d5a6af9bdb6d473c6d4051192cd96fc17866864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1068": {
									"entryPoint": null,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50306080526080516121de61002d600039600050506121de6000f3fe6080604052600436106100bc5760003560e01c806361c2926c116100745780638c3f55631161004e5780638c3f55631461025357806390042baf14610273578063affed0e0146102ab57600080fd5b806361c2926c146101cb5780637a9a1628146101eb578063853c50681461020b57600080fd5b806320c13b0b116100a557806320c13b0b14610147578063295614261461016757806357c56d6b1461018957600080fd5b806301ffc9a7146100c15780631626ba7e146100f6575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611880565b6102c0565b60405190151581526020015b60405180910390f35b34801561010257600080fd5b506101166101113660046118e6565b6102d1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ed565b34801561015357600080fd5b50610116610162366004611932565b61031e565b34801561017357600080fd5b5061018761018236600461199e565b610383565b005b34801561019557600080fd5b506101bd7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b6040519081526020016100ed565b3480156101d757600080fd5b506101876101e63660046119fc565b6103d5565b3480156101f757600080fd5b50610187610206366004611a3e565b61041a565b34801561021757600080fd5b5061022b6102263660046118e6565b610447565b604080519586526020860194909452928401919091526060830152608082015260a0016100ed565b34801561025f57600080fd5b506101bd61026e36600461199e565b61060f565b610286610281366004611ae7565b61063b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b3480156102b757600080fd5b506101bd610725565b60006102cb82610736565b92915050565b6000806102df858585610792565b509050801561031157507f1626ba7e000000000000000000000000000000000000000000000000000000009050610317565b50600090505b9392505050565b6000806103438686604051610334929190611bb6565b60405180910390208585610792565b509050801561037557507f20c13b0b00000000000000000000000000000000000000000000000000000000905061037b565b50600090505b949350505050565b3330146103c9576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b6103d2816107ca565b50565b600061040883836040516020016103ed929190611d97565b604051602081830303815290604052805190602001206107fc565b9050610415818484610881565b505050565b600061043286866040516020016103ed929190611ddf565b905061043f818787610881565b505050505050565b6000806000806000808787600081811061046357610463611e27565b909101357fff000000000000000000000000000000000000000000000000000000000000001691508190506104b95761049b896107fc565b92506104a8838989610a0e565b929850909650945091506106049050565b7fff00000000000000000000000000000000000000000000000000000000000000818116016104f8576104eb896107fc565b92506104a8838989610a5f565b7ffe000000000000000000000000000000000000000000000000000000000000007fff0000000000000000000000000000000000000000000000000000000000000082160161054a576104eb89610a8b565b7ffd000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216016105ae5761059e898989610af8565b9550955095509550955050610604565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff00000000000000000000000000000000000000000000000000000000000000821660048201526024016103c0565b939792965093509350565b60006102cb7f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e83610c75565b600033301461067e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016103c0565b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166106d757816040517f0d2571910000000000000000000000000000000000000000000000000000000081526004016103c09190611eba565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b6000610731600061060f565b905090565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161078957506001919050565b6102cb82610cd3565b60008060008060006107a5888888610447565b509650919450925090508282108015906107bd575060015b9450505050935093915050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b8060005b81811015610a0757368484838181106108a0576108a0611e27565b90506020028101906108b29190611ecd565b90506108c16020820182611f0b565b156108fb576040517f230d1ccc000000000000000000000000000000000000000000000000000000008152600481018390526024016103c0565b6040810135805a101561094e5782815a6040517f2bb3e3ba0000000000000000000000000000000000000000000000000000000081526004810193909352602483019190915260448201526064016103c0565b60006109886109636080850160608601611f26565b608085013584156109745784610976565b5a5b61098360a0880188611f41565b610d2f565b905080156109cf57877f5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7856040516109c291815260200190565b60405180910390a26109f1565b6109f16109e26040850160208601611f0b565b89866109ec610d4c565b610d6b565b50505080806109ff90611fd5565b915050610885565b5050505050565b6000808080610a2987610a24876006818b61200d565b610db9565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b6000808080610a7a87610a75876001818b61200d565b610a0e565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b1660428301526056820183905290607601610864565b6000808080806004600188013560e81c82610b138383612037565b9050610b258b61022683868d8f61200d565b939b5091995097509550935087871015610b7d57610b4581848b8d61200d565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016103c0949392919061204a565b8092505b88831015610c675760038301928a013560e81c9150610ba08383612037565b90506000610bc2610bb08861124f565b8c8c879086926102269392919061200d565b939c50919a5098509091505088881015610c1a57610be282858c8e61200d565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016103c0949392919061204a565b848110610c5d576040517f37daf62b00000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044016103c0565b9350915081610b81565b505050939792965093509350565b6000808383604051602001610c94929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60007fe4a77bbc000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601610d2657506001919050565b6102cb82611283565b6000604051828482376000808483898b8af1979650505050505050565b60603d604051915060208201818101604052818352816000823e505090565b8315610d7957805160208201fd5b827fab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b4198383604051610dab929190612071565b60405180910390a250505050565b60008060005b8381101561124657600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101610e6057601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785610e465780610e55565b60008681526020829052604090205b955050505050610dbf565b80610ef65760018201918681013560f81c906043016000610e8c8a610e8784888c8e61200d565b61136d565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786610edb5780610eea565b60008781526020829052604090205b96505050505050610dbf565b6002810361101e576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff169150809650819250505060008186019050610f6f8b848c8c8a908692610f6a9392919061200d565b611630565b610fb7578a83610f8183898d8f61200d565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016103c0949392919061208a565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617876110025780611011565b60008881526020829052604090205b9750505050505050610dbf565b60038103611051576020820191860135836110395780611048565b60008481526020829052604090205b93505050610dbf565b6004810361109d576003808301928781013560e81c919082010160008061107e8b610a2485898d8f61200d565b60009889526020526040909720969097019650909350610dbf92505050565b600681036111a55760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff16915080965081925050506000818601905060008061110b8d8d8d8b908792610a249392919061200d565b9398508893909250905084821061112157988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a90528351808403909101815260989092019092528051910120896111875780611196565b60008a81526020829052604090205b99505050505050505050610dbf565b600581036112115760208201918601358781036111e0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b60006111eb82611817565b9050846111f85780611207565b60008581526020829052604090205b9450505050610dbf565b6040517fb2505f7c000000000000000000000000000000000000000000000000000000008152600481018290526024016103c0565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206102cb565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fac6a444e00000000000000000000000000000000000000000000000000000000148061131657507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b1561132357506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146102cb565b6000604282146113ad5782826040517f2ee17a3d0000000000000000000000000000000000000000000000000000000081526004016103c09291906120ca565b60006113c66113bd6001856120de565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561143a578686826040517fad4aac760000000000000000000000000000000000000000000000000000000081526004016103c0939291906120f1565b8260ff16601b1415801561145257508260ff16601c14155b1561148f578686846040517fe578897e0000000000000000000000000000000000000000000000000000000081526004016103c093929190612115565b600184036114fc576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa1580156114eb573d6000803e3d6000fd5b5050506020604051035194506115d4565b60028403611599576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a0016114c9565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016103c0949392919061213c565b73ffffffffffffffffffffffffffffffffffffffff85166116255786866040517f6c1719d20000000000000000000000000000000000000000000000000000000081526004016103c09291906120ca565b505050509392505050565b600081810361166b576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838361167a6001826120de565b81811061168957611689611e27565b919091013560f81c91505060018114806116a35750600281145b156116e8578473ffffffffffffffffffffffffffffffffffffffff166116ca87868661136d565b73ffffffffffffffffffffffffffffffffffffffff1614915061180e565b600381036117d35773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e878660008761171c6001826120de565b926117299392919061200d565b6040518463ffffffff1660e01b815260040161174793929190612168565b602060405180830381865afa158015611764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611788919061218b565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014915061180e565b83838260006040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016103c0949392919061213c565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a0000000000000000602082015260388101829052600090605801610864565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146103d257600080fd5b60006020828403121561189257600080fd5b813561031781611852565b60008083601f8401126118af57600080fd5b50813567ffffffffffffffff8111156118c757600080fd5b6020830191508360208285010111156118df57600080fd5b9250929050565b6000806000604084860312156118fb57600080fd5b83359250602084013567ffffffffffffffff81111561191957600080fd5b6119258682870161189d565b9497909650939450505050565b6000806000806040858703121561194857600080fd5b843567ffffffffffffffff8082111561196057600080fd5b61196c8883890161189d565b9096509450602087013591508082111561198557600080fd5b506119928782880161189d565b95989497509550505050565b6000602082840312156119b057600080fd5b5035919050565b60008083601f8401126119c957600080fd5b50813567ffffffffffffffff8111156119e157600080fd5b6020830191508360208260051b85010111156118df57600080fd5b60008060208385031215611a0f57600080fd5b823567ffffffffffffffff811115611a2657600080fd5b611a32858286016119b7565b90969095509350505050565b600080600080600060608688031215611a5657600080fd5b853567ffffffffffffffff80821115611a6e57600080fd5b611a7a89838a016119b7565b9097509550602088013594506040880135915080821115611a9a57600080fd5b50611aa78882890161189d565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215611af957600080fd5b813567ffffffffffffffff80821115611b1157600080fd5b818401915084601f830112611b2557600080fd5b813581811115611b3757611b37611ab8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611b7d57611b7d611ab8565b81604052828152876020848701011115611b9657600080fd5b826020860160208301376000928101602001929092525095945050505050565b8183823760009101908152919050565b80358015158114611bd657600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611bd657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196508560051b810191508460005b87811015611d8a57828403895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41883603018112611ca157600080fd5b870160c0611cae82611bc6565b15158652611cbd878301611bc6565b15158688015260408281013590870152606073ffffffffffffffffffffffffffffffffffffffff611cef828501611bdb565b16908701526080828101359087015260a080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112611d3557600080fd5b90920187810192903567ffffffffffffffff811115611d5357600080fd5b803603841315611d6257600080fd5b8282890152611d748389018286611bff565b9c89019c97505050928601925050600101611c62565b5091979650505050505050565b60408152600560408201527f73656c663a000000000000000000000000000000000000000000000000000000606082015260806020820152600061037b608083018486611c48565b60408152600660408201527f67756573743a0000000000000000000000000000000000000000000000000000606082015260806020820152600061037b608083018486611c48565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815180845260005b81811015611e7c57602081850181015186830182015201611e60565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006103176020830184611e56565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112611f0157600080fd5b9190910192915050565b600060208284031215611f1d57600080fd5b61031782611bc6565b600060208284031215611f3857600080fd5b61031782611bdb565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611f7657600080fd5b83018035915067ffffffffffffffff821115611f9157600080fd5b6020019150368190038213156118df57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361200657612006611fa6565b5060010190565b6000808585111561201d57600080fd5b8386111561202a57600080fd5b5050820193919092039150565b808201808211156102cb576102cb611fa6565b60608152600061205e606083018688611bff565b6020830194909452506040015292915050565b82815260406020820152600061037b6040830184611e56565b84815273ffffffffffffffffffffffffffffffffffffffff841660208201526060604082015260006120c0606083018486611bff565b9695505050505050565b60208152600061037b602083018486611bff565b818103818111156102cb576102cb611fa6565b604081526000612105604083018587611bff565b9050826020830152949350505050565b604081526000612129604083018587611bff565b905060ff83166020830152949350505050565b606081526000612150606083018688611bff565b60208301949094525090151560409091015292915050565b838152604060208201526000612182604083018486611bff565b95945050505050565b60006020828403121561219d57600080fd5b81516103178161185256fea26469706673582212209bb95d18e97f278aa47e0c04c20d5a6af9bdb6d473c6d4051192cd96fc17866864736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x21DE PUSH2 0x2D PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH2 0x21DE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61C2926C GT PUSH2 0x74 JUMPI DUP1 PUSH4 0x8C3F5563 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61C2926C EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x853C5068 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20C13B0B GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x29561426 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x57C56D6B EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E6 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E6 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x725 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DF DUP6 DUP6 DUP6 PUSH2 0x792 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x311 JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x317 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x343 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x334 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 PUSH2 0x792 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x375 JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x37B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x7CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3ED SWAP3 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP PUSH2 0x415 DUP2 DUP5 DUP5 PUSH2 0x881 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3ED SWAP3 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP2 DUP8 DUP8 PUSH2 0x881 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 ADD CALLDATALOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP2 POP DUP2 SWAP1 POP PUSH2 0x4B9 JUMPI PUSH2 0x49B DUP10 PUSH2 0x7FC JUMP JUMPDEST SWAP3 POP PUSH2 0x4A8 DUP4 DUP10 DUP10 PUSH2 0xA0E JUMP JUMPDEST SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP2 POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP2 AND ADD PUSH2 0x4F8 JUMPI PUSH2 0x4EB DUP10 PUSH2 0x7FC JUMP JUMPDEST SWAP3 POP PUSH2 0x4A8 DUP4 DUP10 DUP10 PUSH2 0xA5F JUMP JUMPDEST PUSH32 0xFE00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0x54A JUMPI PUSH2 0x4EB DUP10 PUSH2 0xA8B JUMP JUMPDEST PUSH32 0xFD00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0x5AE JUMPI PUSH2 0x59E DUP10 DUP10 DUP10 PUSH2 0xAF8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6085CD8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x6D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x731 PUSH1 0x0 PUSH2 0x60F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x789 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB DUP3 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7A5 DUP9 DUP9 DUP9 PUSH2 0x447 JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x7BD JUMPI POP PUSH1 0x1 JUMPDEST SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE CHAINID PUSH1 0x22 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x56 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x76 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA07 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x8A0 JUMPI PUSH2 0x8A0 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x1ECD JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x1F0B JUMP JUMPDEST ISZERO PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x230D1CCC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP1 GAS LT ISZERO PUSH2 0x94E JUMPI DUP3 DUP2 GAS PUSH1 0x40 MLOAD PUSH32 0x2BB3E3BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 PUSH2 0x963 PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD CALLDATALOAD DUP5 ISZERO PUSH2 0x974 JUMPI DUP5 PUSH2 0x976 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x983 PUSH1 0xA0 DUP9 ADD DUP9 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9CF JUMPI DUP8 PUSH32 0x5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x9F1 PUSH2 0x9E2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1F0B JUMP JUMPDEST DUP10 DUP7 PUSH2 0x9EC PUSH2 0xD4C JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x9FF SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x885 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xA29 DUP8 PUSH2 0xA24 DUP8 PUSH1 0x6 DUP2 DUP12 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP8 CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP11 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 SWAP1 MSTORE SWAP9 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xA7A DUP8 PUSH2 0xA75 DUP8 PUSH1 0x1 DUP2 DUP12 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x22 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x76 ADD PUSH2 0x864 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x1 DUP9 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP3 PUSH2 0xB13 DUP4 DUP4 PUSH2 0x2037 JUMP JUMPDEST SWAP1 POP PUSH2 0xB25 DUP12 PUSH2 0x226 DUP4 DUP7 DUP14 DUP16 PUSH2 0x200D JUMP JUMPDEST SWAP4 SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP8 LT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB45 DUP2 DUP5 DUP12 DUP14 PUSH2 0x200D JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST DUP9 DUP4 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 DUP11 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 POP PUSH2 0xBA0 DUP4 DUP4 PUSH2 0x2037 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC2 PUSH2 0xBB0 DUP9 PUSH2 0x124F JUMP JUMPDEST DUP13 DUP13 DUP8 SWAP1 DUP7 SWAP3 PUSH2 0x226 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP1 SWAP2 POP POP DUP9 DUP9 LT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xBE2 DUP3 DUP6 DUP13 DUP15 PUSH2 0x200D JUMP JUMPDEST DUP11 DUP11 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST DUP5 DUP2 LT PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x37DAF62B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP2 PUSH2 0xB81 JUMP JUMPDEST POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC94 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE4A77BBC00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xD26 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB DUP3 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP12 DUP11 CALL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP4 MSTORE DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY POP POP SWAP1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD79 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP3 PUSH32 0xAB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDAB SWAP3 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD PUSH2 0xE60 JUMPI PUSH1 0x15 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 AND DUP2 OR DUP6 PUSH2 0xE46 JUMPI DUP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST DUP1 PUSH2 0xEF6 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x43 ADD PUSH1 0x0 PUSH2 0xE8C DUP11 PUSH2 0xE87 DUP5 DUP9 DUP13 DUP15 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x136D JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP2 SWAP5 POP DUP5 SWAP2 SWAP1 POP PUSH1 0xA0 DUP4 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP7 PUSH2 0xEDB JUMPI DUP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x15 DUP7 ADD SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH2 0xF6F DUP12 DUP5 DUP13 DUP13 DUP11 SWAP1 DUP7 SWAP3 PUSH2 0xF6A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x1630 JUMP JUMPDEST PUSH2 0xFB7 JUMPI DUP11 DUP4 PUSH2 0xF81 DUP4 DUP10 DUP14 DUP16 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9A94623200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP5 POP DUP5 PUSH1 0xA0 DUP5 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR DUP8 PUSH2 0x1002 JUMPI DUP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x1051 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP4 PUSH2 0x1039 JUMPI DUP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x4 DUP2 SUB PUSH2 0x109D JUMPI PUSH1 0x3 DUP1 DUP4 ADD SWAP3 DUP8 DUP2 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 SWAP1 DUP3 ADD ADD PUSH1 0x0 DUP1 PUSH2 0x107E DUP12 PUSH2 0xA24 DUP6 DUP10 DUP14 DUP16 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP8 ADD SWAP7 POP SWAP1 SWAP4 POP PUSH2 0xDBF SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP3 DUP8 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP6 ADD SWAP5 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x110B DUP14 DUP14 DUP14 DUP12 SWAP1 DUP8 SWAP3 PUSH2 0xA24 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST SWAP4 SWAP9 POP DUP9 SWAP4 SWAP1 SWAP3 POP SWAP1 POP DUP5 DUP3 LT PUSH2 0x1121 JUMPI SWAP9 DUP6 ADD SWAP9 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x53657175656E6365206E657374656420636F6E6669673A0A0000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x38 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x58 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x78 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP10 PUSH2 0x1187 JUMPI DUP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x5 DUP2 SUB PUSH2 0x1211 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP8 DUP2 SUB PUSH2 0x11E0 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST PUSH1 0x0 PUSH2 0x11EB DUP3 PUSH2 0x1817 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x11F8 JUMPI DUP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP5 POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB2505F7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C0 JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xAC6A444E00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x1316 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x1323 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x42 DUP3 EQ PUSH2 0x13AD JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x2EE17A3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C6 PUSH2 0x13BD PUSH1 0x1 DUP6 PUSH2 0x20DE JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0xF8 SHR DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0x143A JUMPI DUP7 DUP7 DUP3 PUSH1 0x40 MLOAD PUSH32 0xAD4AAC7600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1452 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x148F JUMPI DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE578897E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0x14FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH2 0x14C9 JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1625 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD PUSH32 0x6C1719D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x20CA JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x166B JUMPI PUSH1 0x40 MLOAD PUSH32 0xAC241E1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x167A PUSH1 0x1 DUP3 PUSH2 0x20DE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1689 JUMPI PUSH2 0x1689 PUSH2 0x1E27 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x16A3 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x16E8 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16CA DUP8 DUP7 DUP7 PUSH2 0x136D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x180E JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x17D3 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH4 0x1626BA7E DUP8 DUP7 PUSH1 0x0 DUP8 PUSH2 0x171C PUSH1 0x1 DUP3 PUSH2 0x20DE JUMP JUMPDEST SWAP3 PUSH2 0x1729 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1747 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1764 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x218B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x180E JUMP JUMPDEST DUP4 DUP4 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x53657175656E636520737461746963206469676573743A0A0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x58 ADD PUSH2 0x864 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x317 DUP2 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1925 DUP7 DUP3 DUP8 ADD PUSH2 0x189D JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196C DUP9 DUP4 DUP10 ADD PUSH2 0x189D JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1992 DUP8 DUP3 DUP9 ADD PUSH2 0x189D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A32 DUP6 DUP3 DUP7 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7A DUP10 DUP4 DUP11 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA7 DUP9 DUP3 DUP10 ADD PUSH2 0x189D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1B37 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1B7D JUMPI PUSH2 0x1B7D PUSH2 0x1AB8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1B96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP9 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0xC0 PUSH2 0x1CAE DUP3 PUSH2 0x1BC6 JUMP JUMPDEST ISZERO ISZERO DUP7 MSTORE PUSH2 0x1CBD DUP8 DUP4 ADD PUSH2 0x1BC6 JUMP JUMPDEST ISZERO ISZERO DUP7 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1CEF DUP3 DUP6 ADD PUSH2 0x1BDB JUMP JUMPDEST AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD CALLDATASIZE DUP5 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 ADD DUP2 SLT PUSH2 0x1D35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 ADD DUP8 DUP2 ADD SWAP3 SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x1D74 DUP4 DUP10 ADD DUP3 DUP7 PUSH2 0x1BFF JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1C62 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67756573743A0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1C48 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1E60 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x317 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1F01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1F76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2006 JUMPI PUSH2 0x2006 PUSH2 0x1FA6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x201D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x202A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CB PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x205E PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E56 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20C0 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x1BFF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x1BFF JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CB PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2105 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1BFF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2129 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1BFF JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2150 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2182 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1BFF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x219D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x317 DUP2 PUSH2 0x1852 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB9 0x5D XOR 0xE9 PUSH32 0x278AA47E0C04C20D5A6AF9BDB6D473C6D4051192CD96FC17866864736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "640:2693:1:-:0;;;;;;;;;;;;-1:-1:-1;200:4:7;185:20;;640:2693:1;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SET_IMAGE_HASH_TYPE_HASH_2042": {
									"entryPoint": null,
									"id": 2042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_executeGuest_199": {
									"entryPoint": 2177,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_hashSetImageHashStruct_2071": {
									"entryPoint": 4687,
									"id": 2071,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidImage_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_leafForAddressAndWeight_1424": {
									"entryPoint": null,
									"id": 1424,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_leafForHardcodedSubdigest_1441": {
									"entryPoint": 6167,
									"id": 1441,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_leafForNested_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_revertBytes_807": {
									"entryPoint": 3435,
									"id": 807,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_signatureValidation_457": {
									"entryPoint": 1938,
									"id": 457,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@_updateImageHash_222": {
									"entryPoint": 1994,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@call_2515": {
									"entryPoint": 3375,
									"id": 2515,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@chainedRecover_2217": {
									"entryPoint": 2808,
									"id": 2217,
									"parameterSlots": 3,
									"returnSlots": 5
								},
								"@createContract_876": {
									"entryPoint": 1595,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@execute_74": {
									"entryPoint": 1050,
									"id": 74,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@fkeccak256_2491": {
									"entryPoint": null,
									"id": 2491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isValidSignature_2797": {
									"entryPoint": 5680,
									"id": 2797,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_488": {
									"entryPoint": 798,
									"id": 488,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_517": {
									"entryPoint": 721,
									"id": 517,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@nonce_955": {
									"entryPoint": 1829,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@readBytes32Map_1178": {
									"entryPoint": 3189,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readBytes32_2339": {
									"entryPoint": null,
									"id": 2339,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readBytes32_2475": {
									"entryPoint": null,
									"id": 2475,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readFirstUint16_2361": {
									"entryPoint": null,
									"id": 2361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readNonce_976": {
									"entryPoint": 1551,
									"id": 976,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readUint16_2433": {
									"entryPoint": null,
									"id": 2433,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readUint24_2447": {
									"entryPoint": null,
									"id": 2447,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readUint32_2373": {
									"entryPoint": null,
									"id": 2373,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readUint8Address_2419": {
									"entryPoint": null,
									"id": 2419,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"@readUint8_2351": {
									"entryPoint": null,
									"id": 2351,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readUint8_2403": {
									"entryPoint": null,
									"id": 2403,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@recoverBranch_1954": {
									"entryPoint": 3513,
									"id": 1954,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@recoverSigner_2715": {
									"entryPoint": 4973,
									"id": 2715,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@recover_2020": {
									"entryPoint": 2574,
									"id": 2020,
									"parameterSlots": 3,
									"returnSlots": 4
								},
								"@recover_2246": {
									"entryPoint": 2655,
									"id": 2246,
									"parameterSlots": 3,
									"returnSlots": 4
								},
								"@returnData_2499": {
									"entryPoint": 3404,
									"id": 2499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@selfExecute_102": {
									"entryPoint": 981,
									"id": 102,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@signatureRecovery_413": {
									"entryPoint": 1095,
									"id": 413,
									"parameterSlots": 3,
									"returnSlots": 5
								},
								"@subdigest_1394": {
									"entryPoint": 2044,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@subdigest_2274": {
									"entryPoint": 2699,
									"id": 2274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_240": {
									"entryPoint": 704,
									"id": 240,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_549": {
									"entryPoint": 4739,
									"id": 549,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_832": {
									"entryPoint": 3283,
									"id": 832,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_901": {
									"entryPoint": 1846,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_919": {
									"entryPoint": null,
									"id": 919,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateImageHash_563": {
									"entryPoint": 899,
									"id": 563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_struct_Transaction_calldata_dyn_calldata": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bool": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 6450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 6887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_struct_Transaction_calldata_dyn_calldata": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 7766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8330,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1292_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1292_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 8001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_t_struct$_Transaction_$1292_calldata_ptr": {
									"entryPoint": 7885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 8247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20962:22",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:22",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:133:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "99:66:22",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:97:22"
															},
															"nodeType": "YulIf",
															"src": "68:117:22"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:22",
														"type": ""
													}
												],
												"src": "14:177:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:176:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "311:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "323:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "307:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:32:22"
															},
															"nodeType": "YulIf",
															"src": "275:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:23:22"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "340:5:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:30:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "420:15:22",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "430:5:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "231:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "242:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "254:6:22",
														"type": ""
													}
												],
												"src": "196:245:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:92:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "551:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "574:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:22"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:22"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:41:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "586:41:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "510:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "521:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "532:4:22",
														"type": ""
													}
												],
												"src": "446:187:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "710:275:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "768:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "771:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "761:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "738:6:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "734:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "734:17:22"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "753:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:35:22"
															},
															"nodeType": "YulIf",
															"src": "720:55:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "784:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "794:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:20:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "857:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "869:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "826:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:30:22"
															},
															"nodeType": "YulIf",
															"src": "823:50:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "882:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "898:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:17:22"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "882:8:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "963:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "972:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "975:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "965:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "965:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "965:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "934:6:22"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "942:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "930:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "930:19:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "951:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:30:22"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "958:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "923:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:39:22"
															},
															"nodeType": "YulIf",
															"src": "920:59:22"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "673:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "681:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "689:8:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "699:6:22",
														"type": ""
													}
												],
												"src": "638:347:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:371:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1142:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1144:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1144:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1117:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1126:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1113:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1109:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:32:22"
															},
															"nodeType": "YulIf",
															"src": "1106:52:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1167:33:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1177:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:23:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1209:46:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1240:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1236:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1223:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:32:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1213:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1298:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1310:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1300:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1300:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1300:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1270:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1267:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:30:22"
															},
															"nodeType": "YulIf",
															"src": "1264:50:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1323:84:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1379:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1390:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1375:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1375:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1399:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1349:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:58:22"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "1327:8:22",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "1337:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1416:18:22",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "1426:8:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1443:18:22",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "1453:8:22"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1046:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1057:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1069:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1077:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1085:6:22",
														"type": ""
													}
												],
												"src": "990:477:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1571:149:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1581:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1593:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1589:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1581:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1623:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1638:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1646:66:22",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1634:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1634:79:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:98:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1616:98:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1540:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1551:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1562:4:22",
														"type": ""
													}
												],
												"src": "1472:248:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1850:592:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1896:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1908:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1898:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1898:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1898:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1871:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1880:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1867:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1863:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:32:22"
															},
															"nodeType": "YulIf",
															"src": "1860:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1921:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1948:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1925:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1967:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1977:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1971:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2022:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2031:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2034:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2024:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2024:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2024:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2010:6:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2018:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2007:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:14:22"
															},
															"nodeType": "YulIf",
															"src": "2004:34:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2047:84:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2103:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2114:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2099:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2123:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2073:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2073:58:22"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "2051:8:22",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "2061:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2140:18:22",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2150:8:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2167:18:22",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2177:8:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2194:48:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2238:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2223:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2210:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:32:22"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2198:8:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2271:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2280:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2283:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2273:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2273:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2273:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2257:8:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2267:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2254:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:16:22"
															},
															"nodeType": "YulIf",
															"src": "2251:36:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2296:86:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2352:9:22"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2363:8:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2348:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2348:24:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2374:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2322:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:60:22"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "2300:8:22",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "2310:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2391:18:22",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "2401:8:22"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2418:18:22",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2428:8:22"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1792:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1803:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1815:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1823:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1831:6:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1839:6:22",
														"type": ""
													}
												],
												"src": "1725:717:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2517:110:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2563:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2575:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2565:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2565:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2565:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2538:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2547:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2559:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:32:22"
															},
															"nodeType": "YulIf",
															"src": "2527:52:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2588:33:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2611:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2598:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:23:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2483:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2494:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2506:6:22",
														"type": ""
													}
												],
												"src": "2447:180:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2733:76:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2743:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2755:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2766:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2751:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2743:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2796:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2778:25:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2702:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2713:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2724:4:22",
														"type": ""
													}
												],
												"src": "2632:177:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2918:283:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2967:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2976:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2969:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2969:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2969:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2946:6:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2954:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2942:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2942:17:22"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2961:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:35:22"
															},
															"nodeType": "YulIf",
															"src": "2928:55:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2992:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3015:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3002:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:20:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2992:6:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3065:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3067:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3067:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3067:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3037:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3045:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3034:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:30:22"
															},
															"nodeType": "YulIf",
															"src": "3031:50:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3090:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3106:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:17:22"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3090:8:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3179:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3188:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3191:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3181:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3181:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3181:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3142:6:22"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3154:1:22",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3157:6:22"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3150:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3150:14:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3138:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3138:27:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3167:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:38:22"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3174:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3131:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:47:22"
															},
															"nodeType": "YulIf",
															"src": "3128:67:22"
														}
													]
												},
												"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2881:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2889:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2897:8:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2907:6:22",
														"type": ""
													}
												],
												"src": "2814:387:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3342:352:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3388:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3397:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3400:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3390:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3390:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3363:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3372:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3355:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:32:22"
															},
															"nodeType": "YulIf",
															"src": "3352:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3413:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3440:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3427:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3417:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3493:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3502:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3505:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3495:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3495:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3495:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3473:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3462:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:22"
															},
															"nodeType": "YulIf",
															"src": "3459:50:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3518:116:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3617:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3626:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3544:57:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:90:22"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "3522:8:22",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "3532:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3643:18:22",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "3653:8:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:18:22",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "3680:8:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3331:6:22",
														"type": ""
													}
												],
												"src": "3206:488:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3888:675:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3934:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3943:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3946:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3936:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3936:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3936:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3909:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3918:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3905:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3901:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:32:22"
															},
															"nodeType": "YulIf",
															"src": "3898:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3959:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3973:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3963:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4005:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4015:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4009:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4060:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4069:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4072:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4062:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4062:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4062:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4048:6:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4056:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4045:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:14:22"
															},
															"nodeType": "YulIf",
															"src": "4042:34:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4085:116:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4184:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4193:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4111:57:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:90:22"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "4089:8:22",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "4099:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4210:18:22",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "4220:8:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4237:18:22",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "4247:8:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4264:42:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4291:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4302:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4287:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4287:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4274:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:32:22"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4315:48:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4348:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4359:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4331:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4331:32:22"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4319:8:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4392:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4401:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4404:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4394:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4394:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4394:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4378:8:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4388:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4375:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:16:22"
															},
															"nodeType": "YulIf",
															"src": "4372:36:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4417:86:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4473:9:22"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4484:8:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4469:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4469:24:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4495:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4443:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:60:22"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4421:8:22",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4431:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4512:18:22",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4522:8:22"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4512:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4539:18:22",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4549:8:22"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3822:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3833:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3845:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3853:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3861:6:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3869:6:22",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3877:6:22",
														"type": ""
													}
												],
												"src": "3699:864:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4781:250:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4791:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4803:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4814:3:22",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4799:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:19:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4834:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4845:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4872:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4883:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:18:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4888:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4861:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4926:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4911:18:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4931:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4904:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4958:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4969:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4954:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4954:18:22"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4974:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4947:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5001:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5012:3:22",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4997:19:22"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5018:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:35:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4990:35:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4718:9:22",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4729:6:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4737:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4745:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4753:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4761:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4772:4:22",
														"type": ""
													}
												],
												"src": "4568:463:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5106:110:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5152:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5161:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5164:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5154:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5154:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5154:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5127:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5136:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5123:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5119:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:32:22"
															},
															"nodeType": "YulIf",
															"src": "5116:52:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5177:33:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5187:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:23:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5072:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5083:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5095:6:22",
														"type": ""
													}
												],
												"src": "5036:180:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5322:76:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5332:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5344:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5355:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5340:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5332:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5374:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5385:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5367:25:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5291:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5302:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5313:4:22",
														"type": ""
													}
												],
												"src": "5221:177:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5435:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5452:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5455:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5445:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:88:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5445:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5549:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:4:22",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5576:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:15:22"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5403:184:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5671:901:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5717:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5726:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5729:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5719:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5719:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5719:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5692:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5701:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5688:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:32:22"
															},
															"nodeType": "YulIf",
															"src": "5681:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5742:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5756:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5746:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5788:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5798:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5792:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5843:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5852:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5855:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5845:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5845:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5845:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5831:6:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5839:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5828:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:14:22"
															},
															"nodeType": "YulIf",
															"src": "5825:34:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5868:32:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5882:9:22"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5893:6:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5878:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:22:22"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5872:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5948:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5957:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5960:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5950:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5950:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5950:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5927:2:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5931:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5923:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5923:13:22"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5938:7:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5919:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:35:22"
															},
															"nodeType": "YulIf",
															"src": "5909:55:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5973:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5996:2:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5983:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:16:22"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5977:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6022:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6024:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6024:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6024:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6014:2:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6018:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6011:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6011:10:22"
															},
															"nodeType": "YulIf",
															"src": "6008:36:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6053:76:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6063:66:22",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6057:2:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6138:23:22",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6152:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6152:9:22"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6142:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6170:71:22",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6192:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "6216:2:22"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6220:4:22",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6212:3:22"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6212:13:22"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "6227:2:22"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "6208:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6208:22:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6232:2:22",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6204:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6204:31:22"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6237:2:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6200:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6200:40:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6188:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6188:53:22"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6174:10:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6300:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6302:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6302:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6302:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6259:10:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6271:2:22"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6256:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6279:10:22"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6291:6:22"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6276:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6276:22:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6253:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:46:22"
															},
															"nodeType": "YulIf",
															"src": "6250:72:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:2:22",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6342:10:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:22:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6331:22:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6369:6:22"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6377:2:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:18:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6362:18:22"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6426:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6435:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6438:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6428:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6428:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6428:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6403:2:22"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6407:2:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6399:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6399:11:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6412:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6395:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6395:20:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6417:7:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6392:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:33:22"
															},
															"nodeType": "YulIf",
															"src": "6389:53:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6468:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6476:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6464:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6464:15:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6485:2:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6489:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6481:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6481:11:22"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6494:2:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6451:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:46:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:46:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "6521:6:22"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6529:2:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6517:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6517:15:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6534:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6513:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6513:24:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6506:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:35:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6506:35:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6550:16:22",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6560:6:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5637:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5648:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5660:6:22",
														"type": ""
													}
												],
												"src": "5592:980:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6678:125:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6688:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6700:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6696:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6688:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6745:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6753:42:22",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6741:55:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:74:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:74:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6647:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6658:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6669:4:22",
														"type": ""
													}
												],
												"src": "6577:226:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6955:124:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6978:3:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6983:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6991:6:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6965:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:33:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6965:33:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7007:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7021:3:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7026:6:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7017:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:16:22"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7011:2:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7049:2:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7042:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7042:13:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7042:13:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7064:9:22",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "7071:2:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6923:3:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6928:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6936:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6947:3:22",
														"type": ""
													}
												],
												"src": "6808:271:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7213:198:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7223:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7235:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7223:4:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7258:52:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7268:42:22",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7262:2:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7326:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7341:6:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7349:2:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7337:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7337:15:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7319:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7319:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7319:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7373:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7384:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7369:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7393:6:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7401:2:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7389:15:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:43:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:43:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7174:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7185:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7193:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7204:4:22",
														"type": ""
													}
												],
												"src": "7084:327:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7462:114:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7472:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7494:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7481:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7481:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7472:5:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7554:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7563:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7566:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7556:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7556:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7556:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7523:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7544:5:22"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7537:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7537:13:22"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7530:6:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7530:21:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7520:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7520:32:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7513:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:40:22"
															},
															"nodeType": "YulIf",
															"src": "7510:60:22"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7441:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7452:5:22",
														"type": ""
													}
												],
												"src": "7416:160:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7630:147:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7640:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7662:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7649:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7640:5:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7755:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7764:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7767:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7757:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7757:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7691:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7702:5:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7709:42:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7698:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7698:54:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7688:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7688:65:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7681:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7681:73:22"
															},
															"nodeType": "YulIf",
															"src": "7678:93:22"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7609:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7620:5:22",
														"type": ""
													}
												],
												"src": "7581:196:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7848:259:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7865:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7870:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7858:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7858:19:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7858:19:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7903:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7908:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7899:14:22"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "7915:5:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7922:6:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7886:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7886:43:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7886:43:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7953:3:22"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "7958:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7949:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7949:16:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7967:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7945:27:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7974:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:38:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7938:38:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7985:116:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8000:3:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "8013:6:22"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8021:2:22",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8009:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8009:15:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8026:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8005:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8005:88:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7996:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7996:98:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8096:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:109:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "7817:5:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7824:6:22",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7832:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7840:3:22",
														"type": ""
													}
												],
												"src": "7782:325:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8210:1930:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8227:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8232:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8220:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:19:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8220:19:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8248:14:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8258:4:22",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8252:2:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8271:31:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8294:3:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8299:2:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:12:22"
															},
															"variables": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulTypedName",
																	"src": "8275:11:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8311:24:22",
															"value": {
																"name": "updated_pos",
																"nodeType": "YulIdentifier",
																"src": "8324:11:22"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "8315:5:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8344:18:22",
															"value": {
																"name": "updated_pos",
																"nodeType": "YulIdentifier",
																"src": "8351:11:22"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8344:3:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8371:38:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nodeType": "YulIdentifier",
																		"src": "8387:5:22"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8398:1:22",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8401:6:22"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8394:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8394:14:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8383:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:26:22"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "8375:4:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8418:19:22",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8432:5:22"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8422:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8446:10:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8455:1:22",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8450:1:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8514:1600:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8535:3:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "8544:4:22"
																						},
																						{
																							"name": "pos_1",
																							"nodeType": "YulIdentifier",
																							"src": "8550:5:22"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "8540:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8540:16:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8528:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8528:29:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8528:29:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8570:46:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8609:6:22"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "8596:12:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8596:20:22"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulTypedName",
																				"src": "8574:18:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8765:16:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8774:1:22",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8777:1:22",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8767:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8767:12:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8767:12:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail",
																							"nodeType": "YulIdentifier",
																							"src": "8643:18:22"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nodeType": "YulIdentifier",
																												"src": "8671:12:22"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "8671:14:22"
																										},
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "8687:5:22"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "8667:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8667:26:22"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8695:66:22",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8663:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8663:99:22"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "8639:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8639:124:22"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "8632:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8632:132:22"
																		},
																		"nodeType": "YulIf",
																		"src": "8629:152:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8794:45:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail",
																					"nodeType": "YulIdentifier",
																					"src": "8813:18:22"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "8833:5:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8809:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8809:30:22"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nodeType": "YulTypedName",
																				"src": "8798:7:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8852:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8862:4:22",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "8856:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "8886:4:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "8922:7:22"
																										}
																									],
																									"functionName": {
																										"name": "abi_decode_bool",
																										"nodeType": "YulIdentifier",
																										"src": "8906:15:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8906:24:22"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "8899:6:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8899:32:22"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "8892:6:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8892:40:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8879:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8879:54:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8879:54:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "8957:4:22"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "8963:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8953:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8953:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "value_1",
																													"nodeType": "YulIdentifier",
																													"src": "9002:7:22"
																												},
																												{
																													"name": "_1",
																													"nodeType": "YulIdentifier",
																													"src": "9011:2:22"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "8998:3:22"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "8998:16:22"
																										}
																									],
																									"functionName": {
																										"name": "abi_decode_bool",
																										"nodeType": "YulIdentifier",
																										"src": "8982:15:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8982:33:22"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "8975:6:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8975:41:22"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "8968:6:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8968:49:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8946:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8946:72:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8946:72:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9031:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9041:4:22",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "9035:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "9069:4:22"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "9075:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9065:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9065:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "value_1",
																									"nodeType": "YulIdentifier",
																									"src": "9097:7:22"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "9106:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9093:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9093:16:22"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "9080:12:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9080:30:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9058:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9058:53:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9058:53:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9124:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9134:4:22",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "9128:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "9162:4:22"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "9168:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9158:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9158:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "9200:7:22"
																										},
																										{
																											"name": "_4",
																											"nodeType": "YulIdentifier",
																											"src": "9209:2:22"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "9196:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9196:16:22"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_address",
																								"nodeType": "YulIdentifier",
																								"src": "9177:18:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9177:36:22"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9215:42:22",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "9173:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9173:85:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9151:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9151:108:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9151:108:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9272:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9282:4:22",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "9276:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "9310:4:22"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "9316:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9306:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9306:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "value_1",
																									"nodeType": "YulIdentifier",
																									"src": "9338:7:22"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "9347:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9334:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9334:16:22"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "9321:12:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9321:30:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9299:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9299:53:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9299:53:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9365:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9375:4:22",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "9369:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9392:58:22",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_1",
																							"nodeType": "YulIdentifier",
																							"src": "9437:7:22"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "9446:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9433:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9433:16:22"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "9420:12:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9420:30:22"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail_1",
																				"nodeType": "YulTypedName",
																				"src": "9396:20:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9603:16:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9612:1:22",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9615:1:22",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9605:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9605:12:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9605:12:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail_1",
																							"nodeType": "YulIdentifier",
																							"src": "9477:20:22"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nodeType": "YulIdentifier",
																												"src": "9507:12:22"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "9507:14:22"
																										},
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "9523:7:22"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "9503:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9503:28:22"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9533:66:22",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9499:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9499:101:22"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "9473:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9473:128:22"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "9466:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9466:136:22"
																		},
																		"nodeType": "YulIf",
																		"src": "9463:156:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9632:49:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail_1",
																					"nodeType": "YulIdentifier",
																					"src": "9651:20:22"
																				},
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "9673:7:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9647:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9647:34:22"
																		},
																		"variables": [
																			{
																				"name": "value_2",
																				"nodeType": "YulTypedName",
																				"src": "9636:7:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9694:37:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "9723:7:22"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "9710:12:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9710:21:22"
																		},
																		"variables": [
																			{
																				"name": "length_1",
																				"nodeType": "YulTypedName",
																				"src": "9698:8:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9744:31:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "9763:7:22"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9772:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9759:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9759:16:22"
																		},
																		"variables": [
																			{
																				"name": "value_3",
																				"nodeType": "YulTypedName",
																				"src": "9748:7:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9824:16:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9833:1:22",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9836:1:22",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9826:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9826:12:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9826:12:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "9794:8:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9804:18:22",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "9791:2:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9791:32:22"
																		},
																		"nodeType": "YulIf",
																		"src": "9788:52:22"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9900:16:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9909:1:22",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9912:1:22",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9902:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9902:12:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9902:12:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "value_3",
																					"nodeType": "YulIdentifier",
																					"src": "9860:7:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "calldatasize",
																								"nodeType": "YulIdentifier",
																								"src": "9873:12:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9873:14:22"
																						},
																						{
																							"name": "length_1",
																							"nodeType": "YulIdentifier",
																							"src": "9889:8:22"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "9869:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9869:29:22"
																				}
																			],
																			"functionName": {
																				"name": "sgt",
																				"nodeType": "YulIdentifier",
																				"src": "9856:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9856:43:22"
																		},
																		"nodeType": "YulIf",
																		"src": "9853:63:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "9940:4:22"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "9946:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9936:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9936:13:22"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9951:2:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9929:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9929:25:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9929:25:22"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9967:67:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_3",
																					"nodeType": "YulIdentifier",
																					"src": "10001:7:22"
																				},
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "10010:8:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "10024:4:22"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "10030:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10020:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10020:13:22"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_bytes_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "9975:25:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9975:59:22"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9967:4:22"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10047:25:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10061:6:22"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10069:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10057:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10057:15:22"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10047:6:22"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10085:19:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10096:3:22"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10101:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10092:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10092:12:22"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10085:3:22"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8476:1:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8479:6:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8473:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:13:22"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8487:18:22",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8489:14:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8498:1:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8501:1:22",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8494:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8494:9:22"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8489:1:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8469:3:22",
																"statements": []
															},
															"src": "8465:1649:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10123:11:22",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "10130:4:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10123:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8179:5:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8186:6:22",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8194:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8202:3:22",
														"type": ""
													}
												],
												"src": "8112:2028:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10467:272:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10484:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10477:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10477:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10477:21:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10518:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10529:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10514:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10534:1:22",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10507:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10507:29:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10507:29:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10556:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10567:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10552:18:22"
																	},
																	{
																		"hexValue": "73656c663a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10572:7:22",
																		"type": "",
																		"value": "self:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10545:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10545:35:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10545:35:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10600:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10611:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10596:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10596:20:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10618:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10589:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10589:33:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10589:33:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10631:102:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10697:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10705:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10717:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10728:3:22",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10713:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10713:19:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10639:57:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10639:94:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10631:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1292_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10428:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10439:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10447:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10458:4:22",
														"type": ""
													}
												],
												"src": "10145:594:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11066:273:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11083:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11094:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11076:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11076:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11076:21:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11117:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11128:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11113:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11113:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11133:1:22",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11106:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11106:29:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11106:29:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11155:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11166:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11151:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11151:18:22"
																	},
																	{
																		"hexValue": "67756573743a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11171:8:22",
																		"type": "",
																		"value": "guest:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11144:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11144:36:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11144:36:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11200:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11211:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11196:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11196:20:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11218:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11189:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11189:33:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11189:33:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11231:102:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11297:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11305:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11317:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11328:3:22",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11313:19:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11239:57:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11239:94:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11231:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1292_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11027:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11038:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11046:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11057:4:22",
														"type": ""
													}
												],
												"src": "10744:595:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11376:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11393:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11396:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11386:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11386:88:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11386:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11490:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11493:4:22",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11483:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11514:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11517:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11507:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11507:15:22"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11344:184:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11632:149:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11642:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11654:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11665:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11650:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11650:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11642:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11684:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11699:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11707:66:22",
																				"type": "",
																				"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11695:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11695:79:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11677:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11677:98:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11677:98:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11601:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11612:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11623:4:22",
														"type": ""
													}
												],
												"src": "11533:248:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11835:432:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11845:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11865:5:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11859:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11859:12:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11849:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11887:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11892:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11880:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11880:19:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11880:19:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11908:10:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11917:1:22",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11912:1:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:110:22",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11993:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12003:4:22",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "11997:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "12035:3:22"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12040:1:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12031:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12031:11:22"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "12044:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12027:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12027:20:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "12063:5:22"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "12070:1:22"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "12059:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12059:13:22"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "12074:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12055:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12055:22:22"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12049:5:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12049:29:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12020:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12020:59:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12020:59:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11938:1:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11941:6:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11935:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:13:22"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11949:21:22",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11951:17:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11960:1:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11963:4:22",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11956:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11956:12:22"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11951:1:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11931:3:22",
																"statements": []
															},
															"src": "11927:162:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12113:3:22"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12118:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12109:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12109:16:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12127:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12105:27:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12098:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12098:38:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12098:38:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12145:116:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12160:3:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "12173:6:22"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12181:2:22",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12169:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12169:15:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12186:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12165:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12165:88:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12156:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12156:98:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12256:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12152:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:109:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12145:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11812:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11819:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11827:3:22",
														"type": ""
													}
												],
												"src": "11786:481:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12391:98:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12408:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12419:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12401:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12401:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12401:21:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12431:52:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12456:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12468:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12479:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12464:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12464:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "12439:16:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:44:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12431:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12360:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12371:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12382:4:22",
														"type": ""
													}
												],
												"src": "12272:217:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12770:315:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12787:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12792:66:22",
																		"type": "",
																		"value": "0x1901000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12780:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12780:79:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12780:79:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12879:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12884:1:22",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:11:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12888:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12868:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12868:27:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12868:27:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12915:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12920:2:22",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12911:12:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12933:2:22",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "12937:6:22"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "12929:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12929:15:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12946:66:22",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12925:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12925:88:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12904:110:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12904:110:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13034:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13039:2:22",
																				"type": "",
																				"value": "54"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13030:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13030:12:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13044:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13023:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13023:28:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13023:28:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13060:19:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13071:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13076:2:22",
																		"type": "",
																		"value": "86"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13067:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13067:12:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13060:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12730:3:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12735:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12743:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12751:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12762:3:22",
														"type": ""
													}
												],
												"src": "12494:591:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13196:281:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13206:51:22",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "13245:11:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "13232:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13232:25:22"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "13210:18:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13405:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13414:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13417:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13407:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13407:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13407:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "13280:18:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "13308:12:22"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13308:14:22"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "13324:8:22"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "13304:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13304:29:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13335:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13300:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13300:102:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13276:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13276:127:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13269:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13269:135:22"
															},
															"nodeType": "YulIf",
															"src": "13266:155:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13430:41:22",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "13442:8:22"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "13452:18:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13438:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13438:33:22"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "13430:4:22"
																}
															]
														}
													]
												},
												"name": "access_calldata_tail_t_struct$_Transaction_$1292_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "13161:8:22",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "13171:11:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "13187:4:22",
														"type": ""
													}
												],
												"src": "13090:387:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13549:113:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13595:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13604:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13607:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13597:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13597:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13597:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13570:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13579:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13566:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13566:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13591:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13562:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13562:32:22"
															},
															"nodeType": "YulIf",
															"src": "13559:52:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13620:36:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13646:9:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "13630:15:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13630:26:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13620:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13515:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13526:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13538:6:22",
														"type": ""
													}
												],
												"src": "13482:180:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13824:162:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13834:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13846:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13857:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13842:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13842:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13834:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13876:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13887:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13869:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13869:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13869:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13914:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13925:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13910:18:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13930:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13903:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13903:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13903:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13957:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13968:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13953:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13953:18:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13973:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13946:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "13946:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13946:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13777:9:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13788:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13796:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13804:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13815:4:22",
														"type": ""
													}
												],
												"src": "13667:319:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14061:116:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14107:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14116:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14119:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14109:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14109:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14109:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14082:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14091:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14078:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14078:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14103:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14074:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14074:32:22"
															},
															"nodeType": "YulIf",
															"src": "14071:52:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14132:39:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14161:9:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "14142:18:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14142:29:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14132:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14027:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14038:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14050:6:22",
														"type": ""
													}
												],
												"src": "13991:186:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14276:486:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14286:51:22",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "14325:11:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14312:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14312:25:22"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "14290:18:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14485:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14494:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14497:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14487:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14487:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14487:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "14360:18:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "14388:12:22"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14388:14:22"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "14404:8:22"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14384:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14384:29:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14415:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14380:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14380:102:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14356:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14356:127:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14349:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14349:135:22"
															},
															"nodeType": "YulIf",
															"src": "14346:155:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14510:47:22",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "14528:8:22"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "14538:18:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14524:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14524:33:22"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nodeType": "YulTypedName",
																	"src": "14514:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14566:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "14589:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14576:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14576:20:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14566:6:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14639:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14648:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14651:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14641:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14641:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14641:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14611:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14619:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14608:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14608:30:22"
															},
															"nodeType": "YulIf",
															"src": "14605:50:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14664:25:22",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "14676:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14684:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14672:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14672:17:22"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "14664:4:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14740:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14749:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14752:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14742:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14742:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14742:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "14705:4:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14715:12:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14715:14:22"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14731:6:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14711:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14711:27:22"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "14701:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:38:22"
															},
															"nodeType": "YulIf",
															"src": "14698:58:22"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "14233:8:22",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "14243:11:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "14259:4:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14265:6:22",
														"type": ""
													}
												],
												"src": "14182:580:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14799:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14816:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14819:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14809:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:88:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14809:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14913:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14916:4:22",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14906:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14906:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14937:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14940:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14930:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "14930:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14930:15:22"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14767:184:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15003:148:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15094:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15096:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15096:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15096:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15019:5:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15026:66:22",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15016:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15016:77:22"
															},
															"nodeType": "YulIf",
															"src": "15013:103:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15125:20:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15136:5:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15143:1:22",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15132:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15132:13:22"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15125:3:22"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14985:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14995:3:22",
														"type": ""
													}
												],
												"src": "14956:195:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15286:201:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15324:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15333:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15336:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15326:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15326:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15326:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15302:10:22"
																	},
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15314:8:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15299:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15299:24:22"
															},
															"nodeType": "YulIf",
															"src": "15296:44:22"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15373:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15382:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15385:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15375:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15375:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15375:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15355:8:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15365:6:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15352:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15352:20:22"
															},
															"nodeType": "YulIf",
															"src": "15349:40:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15398:36:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15415:6:22"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15423:10:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15411:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15411:23:22"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nodeType": "YulIdentifier",
																	"src": "15398:9:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15443:38:22",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15460:8:22"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "15470:10:22"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15456:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15456:25:22"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nodeType": "YulIdentifier",
																	"src": "15443:9:22"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15220:6:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15228:6:22",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "15236:10:22",
														"type": ""
													},
													{
														"name": "endIndex",
														"nodeType": "YulTypedName",
														"src": "15248:8:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nodeType": "YulTypedName",
														"src": "15261:9:22",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nodeType": "YulTypedName",
														"src": "15272:9:22",
														"type": ""
													}
												],
												"src": "15156:331:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15540:77:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15550:16:22",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15561:1:22"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15564:1:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15557:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15557:9:22"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15550:3:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15589:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15591:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15591:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15591:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15581:1:22"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15584:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15578:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15578:10:22"
															},
															"nodeType": "YulIf",
															"src": "15575:36:22"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15523:1:22",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15526:1:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15532:3:22",
														"type": ""
													}
												],
												"src": "15492:125:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15813:201:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15830:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15841:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15823:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15823:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15823:21:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15853:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15887:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15895:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15907:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15918:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15903:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15903:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "15861:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15861:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15853:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15942:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15953:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15938:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15938:18:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15958:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15931:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15931:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15931:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15985:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15996:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15981:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15981:18:22"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16001:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15974:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15974:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15758:9:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15769:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15777:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15785:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15793:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15804:4:22",
														"type": ""
													}
												],
												"src": "15622:392:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16148:119:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16158:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16170:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16181:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16166:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16166:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16158:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16200:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16211:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16193:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16193:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16193:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16238:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16249:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16234:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16234:18:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16254:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16227:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16227:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16227:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16109:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16120:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16128:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16139:4:22",
														"type": ""
													}
												],
												"src": "16019:248:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16401:119:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16411:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16423:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16434:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16419:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16419:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16411:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16453:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16464:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16446:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16446:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16446:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16491:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16502:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16487:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16487:18:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16507:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16480:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16480:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16480:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16362:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16373:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16381:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16392:4:22",
														"type": ""
													}
												],
												"src": "16272:248:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16672:141:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16689:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16700:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16682:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16682:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16727:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16738:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16723:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16723:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16743:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16716:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16716:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16716:30:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16755:52:22",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16780:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16792:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16803:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16788:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16788:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "16763:16:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "16763:44:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16755:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16633:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16644:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16652:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16663:4:22",
														"type": ""
													}
												],
												"src": "16525:288:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17009:250:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17026:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17037:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17019:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17019:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17019:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17064:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17075:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17060:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17060:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17084:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17092:42:22",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17080:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17080:55:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17053:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17053:83:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17053:83:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17156:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17167:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17152:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17152:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17172:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17145:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17145:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17145:30:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17184:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17218:6:22"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17226:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17238:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17249:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17234:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17234:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "17192:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17192:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17184:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16954:9:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16965:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16973:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16981:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16989:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17000:4:22",
														"type": ""
													}
												],
												"src": "16818:441:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17393:115:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17410:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17421:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17403:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17403:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17403:21:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17433:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17467:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17475:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17487:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17498:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17483:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17483:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "17441:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17441:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17433:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17354:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17365:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17373:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17384:4:22",
														"type": ""
													}
												],
												"src": "17264:244:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17562:79:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17572:17:22",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17584:1:22"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17587:1:22"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17580:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17580:9:22"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17572:4:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17613:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17615:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17615:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17615:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "17604:4:22"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17610:1:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17601:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17601:11:22"
															},
															"nodeType": "YulIf",
															"src": "17598:37:22"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17544:1:22",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17547:1:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17553:4:22",
														"type": ""
													}
												],
												"src": "17513:128:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17803:158:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17820:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17831:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17813:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17813:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17813:21:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17843:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17877:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17885:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17897:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17908:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17893:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17893:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "17851:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17851:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17843:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17932:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17943:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17928:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17928:18:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17948:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17921:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "17921:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17921:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17756:9:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17767:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17775:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17783:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17794:4:22",
														"type": ""
													}
												],
												"src": "17646:315:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18121:169:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18138:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18149:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18131:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18131:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18131:21:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18161:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18195:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18203:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18215:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18226:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18211:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18211:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "18169:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18169:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18161:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18250:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18261:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18246:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18246:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "18270:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18278:4:22",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18266:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18266:17:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18239:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18239:45:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18239:45:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18074:9:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18085:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18093:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18101:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18112:4:22",
														"type": ""
													}
												],
												"src": "17966:324:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18476:217:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18486:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18498:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18509:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18494:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18494:19:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18486:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18529:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18540:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18522:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18522:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18522:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18567:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18578:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18563:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18563:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18587:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18595:4:22",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18583:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18583:17:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18556:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18556:45:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18556:45:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18621:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18632:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18617:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18617:18:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18637:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18610:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18610:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18610:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18664:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18675:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18660:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18660:18:22"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18680:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18653:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18653:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18653:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18421:9:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18432:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18440:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18448:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18456:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18467:4:22",
														"type": ""
													}
												],
												"src": "18295:398:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18918:160:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18935:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18940:66:22",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18928:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "18928:79:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18928:79:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19027:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19032:2:22",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19023:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19023:12:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19037:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19016:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19016:28:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19016:28:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19053:19:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19064:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19069:2:22",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19060:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19060:12:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19053:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18894:3:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18899:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18910:3:22",
														"type": ""
													}
												],
												"src": "18698:380:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19262:217:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19279:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19290:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19272:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19272:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19272:21:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19302:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19336:6:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19344:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19356:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19367:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19352:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19352:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "19310:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19310:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19302:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19391:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19402:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19387:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19387:18:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19407:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19380:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19380:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19380:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19434:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19445:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19430:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19430:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "19464:6:22"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19457:6:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19457:14:22"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19450:6:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19450:22:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19423:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19423:50:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19423:50:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19207:9:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19218:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19226:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19234:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19242:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19253:4:22",
														"type": ""
													}
												],
												"src": "19083:396:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19647:158:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19664:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19675:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19657:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19657:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19657:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19702:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19713:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19698:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19698:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19718:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19691:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19691:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19691:30:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19730:69:22",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19764:6:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19772:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19784:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19795:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19780:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19780:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "19738:25:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19738:61:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19730:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19600:9:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19611:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19619:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19627:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19638:4:22",
														"type": ""
													}
												],
												"src": "19484:321:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19890:169:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19936:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19945:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19948:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19938:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19938:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19938:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19911:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19920:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19907:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19907:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19932:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19903:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19903:32:22"
															},
															"nodeType": "YulIf",
															"src": "19900:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19961:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19980:9:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19974:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19974:16:22"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "19965:5:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20023:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "19999:23:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "19999:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19999:30:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20038:15:22",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20048:5:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "20038:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19856:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19867:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19879:6:22",
														"type": ""
													}
												],
												"src": "19810:249:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20340:235:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20357:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20362:66:22",
																		"type": "",
																		"value": "0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20350:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20350:79:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20350:79:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "20449:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20454:2:22",
																				"type": "",
																				"value": "24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20445:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20445:12:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20459:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20438:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20438:28:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20438:28:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "20486:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20491:2:22",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20482:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20482:12:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20496:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20475:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20475:28:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20475:28:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "20523:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20528:2:22",
																				"type": "",
																				"value": "88"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20519:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20519:12:22"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20533:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20512:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20512:28:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20512:28:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20549:20:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20560:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20565:3:22",
																		"type": "",
																		"value": "120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20556:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20556:13:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20549:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20300:3:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20305:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20313:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20321:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20332:3:22",
														"type": ""
													}
												],
												"src": "20064:511:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20800:160:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20817:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20822:66:22",
																		"type": "",
																		"value": "0x53657175656e636520737461746963206469676573743a0a0000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20810:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20810:79:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20810:79:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "20909:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20914:2:22",
																				"type": "",
																				"value": "24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20905:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20905:12:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20919:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20898:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20898:28:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20898:28:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20935:19:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20946:3:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20951:2:22",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20942:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "20942:12:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20935:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20776:3:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20781:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20792:3:22",
														"type": ""
													}
												],
												"src": "20580:380:22"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_array_struct_Transaction_calldata_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_struct_Transaction_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_struct_Transaction_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_array_struct_Transaction_calldata_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        let updated_pos := add(pos, _1)\n        let pos_1 := updated_pos\n        pos := updated_pos\n        let tail := add(pos_1, shl(5, length))\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, pos_1))\n            let rel_offset_of_tail := calldataload(srcPtr)\n            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), value), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41))) { revert(0, 0) }\n            let value_1 := add(rel_offset_of_tail, value)\n            let _2 := 0xc0\n            mstore(tail, iszero(iszero(abi_decode_bool(value_1))))\n            mstore(add(tail, _1), iszero(iszero(abi_decode_bool(add(value_1, _1)))))\n            let _3 := 0x40\n            mstore(add(tail, _3), calldataload(add(value_1, _3)))\n            let _4 := 0x60\n            mstore(add(tail, _4), and(abi_decode_address(add(value_1, _4)), 0xffffffffffffffffffffffffffffffffffffffff))\n            let _5 := 0x80\n            mstore(add(tail, _5), calldataload(add(value_1, _5)))\n            let _6 := 0xa0\n            let rel_offset_of_tail_1 := calldataload(add(value_1, _6))\n            if iszero(slt(rel_offset_of_tail_1, add(sub(calldatasize(), value_1), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n            let value_2 := add(rel_offset_of_tail_1, value_1)\n            let length_1 := calldataload(value_2)\n            let value_3 := add(value_2, _1)\n            if gt(length_1, 0xffffffffffffffff) { revert(0, 0) }\n            if sgt(value_3, sub(calldatasize(), length_1)) { revert(0, 0) }\n            mstore(add(tail, _6), _2)\n            tail := abi_encode_bytes_calldata(value_3, length_1, add(tail, _2))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1292_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 5)\n        mstore(add(headStart, 96), \"self:\")\n        mstore(add(headStart, 0x20), 128)\n        tail := abi_encode_array_struct_Transaction_calldata_dyn_calldata(value0, value1, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1292_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 6)\n        mstore(add(headStart, 96), \"guest:\")\n        mstore(add(headStart, 0x20), 128)\n        tail := abi_encode_array_struct_Transaction_calldata_dyn_calldata(value0, value1, add(headStart, 128))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff00000000000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), and(shl(96, value1), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 54), value2)\n        end := add(pos, 86)\n    }\n    function access_calldata_tail_t_struct$_Transaction_$1292_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 32))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000)\n        mstore(add(pos, 24), value0)\n        mstore(add(pos, 56), value1)\n        mstore(add(pos, 88), value2)\n        end := add(pos, 120)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x53657175656e636520737461746963206469676573743a0a0000000000000000)\n        mstore(add(pos, 24), value0)\n        end := add(pos, 56)\n    }\n}",
									"id": 22,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100bc5760003560e01c806361c2926c116100745780638c3f55631161004e5780638c3f55631461025357806390042baf14610273578063affed0e0146102ab57600080fd5b806361c2926c146101cb5780637a9a1628146101eb578063853c50681461020b57600080fd5b806320c13b0b116100a557806320c13b0b14610147578063295614261461016757806357c56d6b1461018957600080fd5b806301ffc9a7146100c15780631626ba7e146100f6575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611880565b6102c0565b60405190151581526020015b60405180910390f35b34801561010257600080fd5b506101166101113660046118e6565b6102d1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ed565b34801561015357600080fd5b50610116610162366004611932565b61031e565b34801561017357600080fd5b5061018761018236600461199e565b610383565b005b34801561019557600080fd5b506101bd7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b6040519081526020016100ed565b3480156101d757600080fd5b506101876101e63660046119fc565b6103d5565b3480156101f757600080fd5b50610187610206366004611a3e565b61041a565b34801561021757600080fd5b5061022b6102263660046118e6565b610447565b604080519586526020860194909452928401919091526060830152608082015260a0016100ed565b34801561025f57600080fd5b506101bd61026e36600461199e565b61060f565b610286610281366004611ae7565b61063b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b3480156102b757600080fd5b506101bd610725565b60006102cb82610736565b92915050565b6000806102df858585610792565b509050801561031157507f1626ba7e000000000000000000000000000000000000000000000000000000009050610317565b50600090505b9392505050565b6000806103438686604051610334929190611bb6565b60405180910390208585610792565b509050801561037557507f20c13b0b00000000000000000000000000000000000000000000000000000000905061037b565b50600090505b949350505050565b3330146103c9576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b6103d2816107ca565b50565b600061040883836040516020016103ed929190611d97565b604051602081830303815290604052805190602001206107fc565b9050610415818484610881565b505050565b600061043286866040516020016103ed929190611ddf565b905061043f818787610881565b505050505050565b6000806000806000808787600081811061046357610463611e27565b909101357fff000000000000000000000000000000000000000000000000000000000000001691508190506104b95761049b896107fc565b92506104a8838989610a0e565b929850909650945091506106049050565b7fff00000000000000000000000000000000000000000000000000000000000000818116016104f8576104eb896107fc565b92506104a8838989610a5f565b7ffe000000000000000000000000000000000000000000000000000000000000007fff0000000000000000000000000000000000000000000000000000000000000082160161054a576104eb89610a8b565b7ffd000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216016105ae5761059e898989610af8565b9550955095509550955050610604565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff00000000000000000000000000000000000000000000000000000000000000821660048201526024016103c0565b939792965093509350565b60006102cb7f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e83610c75565b600033301461067e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016103c0565b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166106d757816040517f0d2571910000000000000000000000000000000000000000000000000000000081526004016103c09190611eba565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b6000610731600061060f565b905090565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161078957506001919050565b6102cb82610cd3565b60008060008060006107a5888888610447565b509650919450925090508282108015906107bd575060015b9450505050935093915050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b8060005b81811015610a0757368484838181106108a0576108a0611e27565b90506020028101906108b29190611ecd565b90506108c16020820182611f0b565b156108fb576040517f230d1ccc000000000000000000000000000000000000000000000000000000008152600481018390526024016103c0565b6040810135805a101561094e5782815a6040517f2bb3e3ba0000000000000000000000000000000000000000000000000000000081526004810193909352602483019190915260448201526064016103c0565b60006109886109636080850160608601611f26565b608085013584156109745784610976565b5a5b61098360a0880188611f41565b610d2f565b905080156109cf57877f5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7856040516109c291815260200190565b60405180910390a26109f1565b6109f16109e26040850160208601611f0b565b89866109ec610d4c565b610d6b565b50505080806109ff90611fd5565b915050610885565b5050505050565b6000808080610a2987610a24876006818b61200d565b610db9565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b6000808080610a7a87610a75876001818b61200d565b610a0e565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b1660428301526056820183905290607601610864565b6000808080806004600188013560e81c82610b138383612037565b9050610b258b61022683868d8f61200d565b939b5091995097509550935087871015610b7d57610b4581848b8d61200d565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016103c0949392919061204a565b8092505b88831015610c675760038301928a013560e81c9150610ba08383612037565b90506000610bc2610bb08861124f565b8c8c879086926102269392919061200d565b939c50919a5098509091505088881015610c1a57610be282858c8e61200d565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016103c0949392919061204a565b848110610c5d576040517f37daf62b00000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044016103c0565b9350915081610b81565b505050939792965093509350565b6000808383604051602001610c94929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60007fe4a77bbc000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601610d2657506001919050565b6102cb82611283565b6000604051828482376000808483898b8af1979650505050505050565b60603d604051915060208201818101604052818352816000823e505090565b8315610d7957805160208201fd5b827fab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b4198383604051610dab929190612071565b60405180910390a250505050565b60008060005b8381101561124657600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101610e6057601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785610e465780610e55565b60008681526020829052604090205b955050505050610dbf565b80610ef65760018201918681013560f81c906043016000610e8c8a610e8784888c8e61200d565b61136d565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786610edb5780610eea565b60008781526020829052604090205b96505050505050610dbf565b6002810361101e576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff169150809650819250505060008186019050610f6f8b848c8c8a908692610f6a9392919061200d565b611630565b610fb7578a83610f8183898d8f61200d565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016103c0949392919061208a565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617876110025780611011565b60008881526020829052604090205b9750505050505050610dbf565b60038103611051576020820191860135836110395780611048565b60008481526020829052604090205b93505050610dbf565b6004810361109d576003808301928781013560e81c919082010160008061107e8b610a2485898d8f61200d565b60009889526020526040909720969097019650909350610dbf92505050565b600681036111a55760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff16915080965081925050506000818601905060008061110b8d8d8d8b908792610a249392919061200d565b9398508893909250905084821061112157988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a90528351808403909101815260989092019092528051910120896111875780611196565b60008a81526020829052604090205b99505050505050505050610dbf565b600581036112115760208201918601358781036111e0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b60006111eb82611817565b9050846111f85780611207565b60008581526020829052604090205b9450505050610dbf565b6040517fb2505f7c000000000000000000000000000000000000000000000000000000008152600481018290526024016103c0565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206102cb565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fac6a444e00000000000000000000000000000000000000000000000000000000148061131657507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b1561132357506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146102cb565b6000604282146113ad5782826040517f2ee17a3d0000000000000000000000000000000000000000000000000000000081526004016103c09291906120ca565b60006113c66113bd6001856120de565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561143a578686826040517fad4aac760000000000000000000000000000000000000000000000000000000081526004016103c0939291906120f1565b8260ff16601b1415801561145257508260ff16601c14155b1561148f578686846040517fe578897e0000000000000000000000000000000000000000000000000000000081526004016103c093929190612115565b600184036114fc576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa1580156114eb573d6000803e3d6000fd5b5050506020604051035194506115d4565b60028403611599576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a0016114c9565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016103c0949392919061213c565b73ffffffffffffffffffffffffffffffffffffffff85166116255786866040517f6c1719d20000000000000000000000000000000000000000000000000000000081526004016103c09291906120ca565b505050509392505050565b600081810361166b576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838361167a6001826120de565b81811061168957611689611e27565b919091013560f81c91505060018114806116a35750600281145b156116e8578473ffffffffffffffffffffffffffffffffffffffff166116ca87868661136d565b73ffffffffffffffffffffffffffffffffffffffff1614915061180e565b600381036117d35773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e878660008761171c6001826120de565b926117299392919061200d565b6040518463ffffffff1660e01b815260040161174793929190612168565b602060405180830381865afa158015611764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611788919061218b565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014915061180e565b83838260006040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016103c0949392919061213c565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a0000000000000000602082015260388101829052600090605801610864565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146103d257600080fd5b60006020828403121561189257600080fd5b813561031781611852565b60008083601f8401126118af57600080fd5b50813567ffffffffffffffff8111156118c757600080fd5b6020830191508360208285010111156118df57600080fd5b9250929050565b6000806000604084860312156118fb57600080fd5b83359250602084013567ffffffffffffffff81111561191957600080fd5b6119258682870161189d565b9497909650939450505050565b6000806000806040858703121561194857600080fd5b843567ffffffffffffffff8082111561196057600080fd5b61196c8883890161189d565b9096509450602087013591508082111561198557600080fd5b506119928782880161189d565b95989497509550505050565b6000602082840312156119b057600080fd5b5035919050565b60008083601f8401126119c957600080fd5b50813567ffffffffffffffff8111156119e157600080fd5b6020830191508360208260051b85010111156118df57600080fd5b60008060208385031215611a0f57600080fd5b823567ffffffffffffffff811115611a2657600080fd5b611a32858286016119b7565b90969095509350505050565b600080600080600060608688031215611a5657600080fd5b853567ffffffffffffffff80821115611a6e57600080fd5b611a7a89838a016119b7565b9097509550602088013594506040880135915080821115611a9a57600080fd5b50611aa78882890161189d565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215611af957600080fd5b813567ffffffffffffffff80821115611b1157600080fd5b818401915084601f830112611b2557600080fd5b813581811115611b3757611b37611ab8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611b7d57611b7d611ab8565b81604052828152876020848701011115611b9657600080fd5b826020860160208301376000928101602001929092525095945050505050565b8183823760009101908152919050565b80358015158114611bd657600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611bd657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196508560051b810191508460005b87811015611d8a57828403895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41883603018112611ca157600080fd5b870160c0611cae82611bc6565b15158652611cbd878301611bc6565b15158688015260408281013590870152606073ffffffffffffffffffffffffffffffffffffffff611cef828501611bdb565b16908701526080828101359087015260a080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112611d3557600080fd5b90920187810192903567ffffffffffffffff811115611d5357600080fd5b803603841315611d6257600080fd5b8282890152611d748389018286611bff565b9c89019c97505050928601925050600101611c62565b5091979650505050505050565b60408152600560408201527f73656c663a000000000000000000000000000000000000000000000000000000606082015260806020820152600061037b608083018486611c48565b60408152600660408201527f67756573743a0000000000000000000000000000000000000000000000000000606082015260806020820152600061037b608083018486611c48565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815180845260005b81811015611e7c57602081850181015186830182015201611e60565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006103176020830184611e56565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112611f0157600080fd5b9190910192915050565b600060208284031215611f1d57600080fd5b61031782611bc6565b600060208284031215611f3857600080fd5b61031782611bdb565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611f7657600080fd5b83018035915067ffffffffffffffff821115611f9157600080fd5b6020019150368190038213156118df57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361200657612006611fa6565b5060010190565b6000808585111561201d57600080fd5b8386111561202a57600080fd5b5050820193919092039150565b808201808211156102cb576102cb611fa6565b60608152600061205e606083018688611bff565b6020830194909452506040015292915050565b82815260406020820152600061037b6040830184611e56565b84815273ffffffffffffffffffffffffffffffffffffffff841660208201526060604082015260006120c0606083018486611bff565b9695505050505050565b60208152600061037b602083018486611bff565b818103818111156102cb576102cb611fa6565b604081526000612105604083018587611bff565b9050826020830152949350505050565b604081526000612129604083018587611bff565b905060ff83166020830152949350505050565b606081526000612150606083018688611bff565b60208301949094525090151560409091015292915050565b838152604060208201526000612182604083018486611bff565b95945050505050565b60006020828403121561219d57600080fd5b81516103178161185256fea26469706673582212209bb95d18e97f278aa47e0c04c20d5a6af9bdb6d473c6d4051192cd96fc17866864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61C2926C GT PUSH2 0x74 JUMPI DUP1 PUSH4 0x8C3F5563 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61C2926C EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x853C5068 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20C13B0B GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x29561426 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x57C56D6B EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E6 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E6 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x725 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DF DUP6 DUP6 DUP6 PUSH2 0x792 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x311 JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x317 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x343 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x334 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 PUSH2 0x792 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x375 JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x37B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x7CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3ED SWAP3 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP PUSH2 0x415 DUP2 DUP5 DUP5 PUSH2 0x881 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3ED SWAP3 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP2 DUP8 DUP8 PUSH2 0x881 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 ADD CALLDATALOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP2 POP DUP2 SWAP1 POP PUSH2 0x4B9 JUMPI PUSH2 0x49B DUP10 PUSH2 0x7FC JUMP JUMPDEST SWAP3 POP PUSH2 0x4A8 DUP4 DUP10 DUP10 PUSH2 0xA0E JUMP JUMPDEST SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP2 POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP2 AND ADD PUSH2 0x4F8 JUMPI PUSH2 0x4EB DUP10 PUSH2 0x7FC JUMP JUMPDEST SWAP3 POP PUSH2 0x4A8 DUP4 DUP10 DUP10 PUSH2 0xA5F JUMP JUMPDEST PUSH32 0xFE00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0x54A JUMPI PUSH2 0x4EB DUP10 PUSH2 0xA8B JUMP JUMPDEST PUSH32 0xFD00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0x5AE JUMPI PUSH2 0x59E DUP10 DUP10 DUP10 PUSH2 0xAF8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6085CD8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x6D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x731 PUSH1 0x0 PUSH2 0x60F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x789 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB DUP3 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7A5 DUP9 DUP9 DUP9 PUSH2 0x447 JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x7BD JUMPI POP PUSH1 0x1 JUMPDEST SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE CHAINID PUSH1 0x22 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x56 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x76 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA07 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x8A0 JUMPI PUSH2 0x8A0 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x1ECD JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x1F0B JUMP JUMPDEST ISZERO PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x230D1CCC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP1 GAS LT ISZERO PUSH2 0x94E JUMPI DUP3 DUP2 GAS PUSH1 0x40 MLOAD PUSH32 0x2BB3E3BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 PUSH2 0x963 PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD CALLDATALOAD DUP5 ISZERO PUSH2 0x974 JUMPI DUP5 PUSH2 0x976 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x983 PUSH1 0xA0 DUP9 ADD DUP9 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9CF JUMPI DUP8 PUSH32 0x5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x9F1 PUSH2 0x9E2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1F0B JUMP JUMPDEST DUP10 DUP7 PUSH2 0x9EC PUSH2 0xD4C JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x9FF SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x885 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xA29 DUP8 PUSH2 0xA24 DUP8 PUSH1 0x6 DUP2 DUP12 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP8 CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP11 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 SWAP1 MSTORE SWAP9 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xA7A DUP8 PUSH2 0xA75 DUP8 PUSH1 0x1 DUP2 DUP12 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x22 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x76 ADD PUSH2 0x864 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x1 DUP9 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP3 PUSH2 0xB13 DUP4 DUP4 PUSH2 0x2037 JUMP JUMPDEST SWAP1 POP PUSH2 0xB25 DUP12 PUSH2 0x226 DUP4 DUP7 DUP14 DUP16 PUSH2 0x200D JUMP JUMPDEST SWAP4 SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP8 LT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB45 DUP2 DUP5 DUP12 DUP14 PUSH2 0x200D JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST DUP9 DUP4 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 DUP11 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 POP PUSH2 0xBA0 DUP4 DUP4 PUSH2 0x2037 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC2 PUSH2 0xBB0 DUP9 PUSH2 0x124F JUMP JUMPDEST DUP13 DUP13 DUP8 SWAP1 DUP7 SWAP3 PUSH2 0x226 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP1 SWAP2 POP POP DUP9 DUP9 LT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xBE2 DUP3 DUP6 DUP13 DUP15 PUSH2 0x200D JUMP JUMPDEST DUP11 DUP11 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST DUP5 DUP2 LT PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x37DAF62B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP2 PUSH2 0xB81 JUMP JUMPDEST POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC94 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE4A77BBC00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xD26 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB DUP3 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP12 DUP11 CALL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP4 MSTORE DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY POP POP SWAP1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD79 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP3 PUSH32 0xAB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDAB SWAP3 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD PUSH2 0xE60 JUMPI PUSH1 0x15 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 AND DUP2 OR DUP6 PUSH2 0xE46 JUMPI DUP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST DUP1 PUSH2 0xEF6 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x43 ADD PUSH1 0x0 PUSH2 0xE8C DUP11 PUSH2 0xE87 DUP5 DUP9 DUP13 DUP15 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x136D JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP2 SWAP5 POP DUP5 SWAP2 SWAP1 POP PUSH1 0xA0 DUP4 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP7 PUSH2 0xEDB JUMPI DUP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x15 DUP7 ADD SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH2 0xF6F DUP12 DUP5 DUP13 DUP13 DUP11 SWAP1 DUP7 SWAP3 PUSH2 0xF6A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x1630 JUMP JUMPDEST PUSH2 0xFB7 JUMPI DUP11 DUP4 PUSH2 0xF81 DUP4 DUP10 DUP14 DUP16 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9A94623200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP5 POP DUP5 PUSH1 0xA0 DUP5 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR DUP8 PUSH2 0x1002 JUMPI DUP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x1051 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP4 PUSH2 0x1039 JUMPI DUP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x4 DUP2 SUB PUSH2 0x109D JUMPI PUSH1 0x3 DUP1 DUP4 ADD SWAP3 DUP8 DUP2 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 SWAP1 DUP3 ADD ADD PUSH1 0x0 DUP1 PUSH2 0x107E DUP12 PUSH2 0xA24 DUP6 DUP10 DUP14 DUP16 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP8 ADD SWAP7 POP SWAP1 SWAP4 POP PUSH2 0xDBF SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP3 DUP8 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP6 ADD SWAP5 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x110B DUP14 DUP14 DUP14 DUP12 SWAP1 DUP8 SWAP3 PUSH2 0xA24 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST SWAP4 SWAP9 POP DUP9 SWAP4 SWAP1 SWAP3 POP SWAP1 POP DUP5 DUP3 LT PUSH2 0x1121 JUMPI SWAP9 DUP6 ADD SWAP9 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x53657175656E6365206E657374656420636F6E6669673A0A0000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x38 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x58 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x78 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP10 PUSH2 0x1187 JUMPI DUP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x5 DUP2 SUB PUSH2 0x1211 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP8 DUP2 SUB PUSH2 0x11E0 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST PUSH1 0x0 PUSH2 0x11EB DUP3 PUSH2 0x1817 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x11F8 JUMPI DUP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP5 POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB2505F7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C0 JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xAC6A444E00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x1316 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x1323 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x42 DUP3 EQ PUSH2 0x13AD JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x2EE17A3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C6 PUSH2 0x13BD PUSH1 0x1 DUP6 PUSH2 0x20DE JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0xF8 SHR DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0x143A JUMPI DUP7 DUP7 DUP3 PUSH1 0x40 MLOAD PUSH32 0xAD4AAC7600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1452 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x148F JUMPI DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE578897E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0x14FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH2 0x14C9 JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1625 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD PUSH32 0x6C1719D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x20CA JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x166B JUMPI PUSH1 0x40 MLOAD PUSH32 0xAC241E1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x167A PUSH1 0x1 DUP3 PUSH2 0x20DE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1689 JUMPI PUSH2 0x1689 PUSH2 0x1E27 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x16A3 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x16E8 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16CA DUP8 DUP7 DUP7 PUSH2 0x136D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x180E JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x17D3 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH4 0x1626BA7E DUP8 DUP7 PUSH1 0x0 DUP8 PUSH2 0x171C PUSH1 0x1 DUP3 PUSH2 0x20DE JUMP JUMPDEST SWAP3 PUSH2 0x1729 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1747 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1764 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x218B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x180E JUMP JUMPDEST DUP4 DUP4 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x53657175656E636520737461746963206469676573743A0A0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x58 ADD PUSH2 0x864 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x317 DUP2 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1925 DUP7 DUP3 DUP8 ADD PUSH2 0x189D JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196C DUP9 DUP4 DUP10 ADD PUSH2 0x189D JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1992 DUP8 DUP3 DUP9 ADD PUSH2 0x189D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A32 DUP6 DUP3 DUP7 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7A DUP10 DUP4 DUP11 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA7 DUP9 DUP3 DUP10 ADD PUSH2 0x189D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1B37 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1B7D JUMPI PUSH2 0x1B7D PUSH2 0x1AB8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1B96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP9 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0xC0 PUSH2 0x1CAE DUP3 PUSH2 0x1BC6 JUMP JUMPDEST ISZERO ISZERO DUP7 MSTORE PUSH2 0x1CBD DUP8 DUP4 ADD PUSH2 0x1BC6 JUMP JUMPDEST ISZERO ISZERO DUP7 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1CEF DUP3 DUP6 ADD PUSH2 0x1BDB JUMP JUMPDEST AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD CALLDATASIZE DUP5 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 ADD DUP2 SLT PUSH2 0x1D35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 ADD DUP8 DUP2 ADD SWAP3 SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x1D74 DUP4 DUP10 ADD DUP3 DUP7 PUSH2 0x1BFF JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1C62 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67756573743A0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1C48 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1E60 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x317 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1F01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1F76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2006 JUMPI PUSH2 0x2006 PUSH2 0x1FA6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x201D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x202A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CB PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x205E PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E56 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20C0 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x1BFF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37B PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x1BFF JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CB PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2105 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1BFF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2129 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1BFF JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2150 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2182 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1BFF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x219D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x317 DUP2 PUSH2 0x1852 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB9 0x5D XOR 0xE9 PUSH32 0x278AA47E0C04C20D5A6AF9BDB6D473C6D4051192CD96FC17866864736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "640:2693:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3127:204;;;;;;;;;;-1:-1:-1;3127:204:1;;;;;:::i;:::-;;:::i;:::-;;;611:14:22;;604:22;586:41;;574:2;559:18;3127:204:1;;;;;;;;5489:316:2;;;;;;;;;;-1:-1:-1;5489:316:2;;;;;:::i;:::-;;:::i;:::-;;;1646:66:22;1634:79;;;1616:98;;1604:2;1589:18;5489:316:2;1472:248:22;4525:332:2;;;;;;;;;;-1:-1:-1;4525:332:2;;;;;:::i;:::-;;:::i;6456:119::-;;;;;;;;;;-1:-1:-1;6456:119:2;;;;;:::i;:::-;;:::i;:::-;;811:95:14;;;;;;;;;;;;862:44;811:95;;;;;2778:25:22;;;2766:2;2751:18;811:95:14;2632:177:22;1290:262:1;;;;;;;;;;-1:-1:-1;1290:262:1;;;;;:::i;:::-;;:::i;890:292::-;;;;;;;;;;-1:-1:-1;890:292:1;;;;;:::i;:::-;;:::i;1675:1486:2:-;;;;;;;;;;-1:-1:-1;1675:1486:2;;;;;:::i;:::-;;:::i;:::-;;;;4827:25:22;;;4883:2;4868:18;;4861:34;;;;4911:18;;;4904:34;;;;4969:2;4954:18;;4947:34;5012:3;4997:19;;4990:35;4814:3;4799:19;1675:1486:2;4568:463:22;938:156:6;;;;;;;;;;-1:-1:-1;938:156:6;;;;;:::i;:::-;;:::i;456:276:4:-;;;;;;:::i;:::-;;:::i;:::-;;;6753:42:22;6741:55;;;6723:74;;6711:2;6696:18;456:276:4;6577:226:22;670:87:6;;;;;;;;;;;;;:::i;3127:204:1:-;3270:4;3289:37;3313:12;3289:23;:37::i;:::-;3282:44;3127:204;-1:-1:-1;;3127:204:1:o;5489:316:2:-;5608:6;5650:12;5667:40;5688:5;5695:11;;5667:20;:40::i;:::-;5649:58;;;5717:7;5713:65;;;-1:-1:-1;5741:30:2;;-1:-1:-1;5734:37:2;;5713:65;-1:-1:-1;5798:1:2;;-1:-1:-1;5489:316:2;;;;;;:::o;4525:332::-;4651:6;4693:12;4710:51;4741:5;;4731:16;;;;;;;:::i;:::-;;;;;;;;4749:11;;4710:20;:51::i;:::-;4692:69;;;4771:7;4767:63;;;-1:-1:-1;4795:28:2;;-1:-1:-1;4788:35:2;;4767:63;-1:-1:-1;4850:1:2;;-1:-1:-1;4525:332:2;;;;;;;:::o;6456:119::-;178:10:8;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;7319:34:22;255:4:8;7369:18:22;;;7362:43;7231:18;;222:39:8;;;;;;;;174:94;6542:28:2::1;6559:10;6542:16;:28::i;:::-;6456:119:::0;:::o;1290:262:1:-;1401:14;1418:63;1474:4;;1454:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1444:36;;;;;;1418:25;:63::i;:::-;1401:80;;1520:27;1534:6;1542:4;;1520:13;:27::i;:::-;1364:188;1290:262;;:::o;890:292::-;1030:14;1047:64;1104:4;;1083:26;;;;;;;;;:::i;1047:64::-;1030:81;;1150:27;1164:6;1172:4;;1150:13;:27::i;:::-;993:189;890:292;;;;;:::o;1675:1486:2:-;1801:17;1824:14;1844:17;1867;1890:18;1919:20;1942:10;;1953:1;1942:13;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1942:13:2;;-1:-1:-1;1962:303:2;;2057:34;2083:7;2057:25;:34::i;:::-;2045:46;;2144;2168:9;2179:10;;2144:23;:46::i;:::-;2099:91;;-1:-1:-1;2099:91:2;;-1:-1:-1;2099:91:2;-1:-1:-1;2099:91:2;-1:-1:-1;2198:60:2;;-1:-1:-1;2198:60:2;1962:303;2275:29;;;;;2271:310;;2370:34;2396:7;2370:25;:34::i;:::-;2358:46;;2457:49;2484:9;2495:10;;2457:26;:49::i;2271:310::-;2591:33;;;;;2587:319;;2690:39;2721:7;2690:30;:39::i;2587:319::-;2916:29;;;;;2912:196;;3066:35;3081:7;3090:10;;3066:14;:35::i;:::-;3059:42;;;;;;;;;;;;;2912:196;3121:35;;;;;11707:66:22;11695:79;;3121:35:2;;;11677:98:22;11650:18;;3121:35:2;11533:248:22;1675:1486:2;;;;;;;;;;:::o;938:156:6:-;1002:7;1032:56;453:66;1080:6;1032:28;:56::i;456:276:4:-;550:12;178:10:8;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;7319:34:22;255:4:8;7369:18:22;;;7362:43;7231:18;;222:39:8;7084:327:22;174:94:8;631:5:4::1;625:12;620:2;613:5;609:14;596:11;589:49;581:57:::0;-1:-1:-1;649:18:4::1;::::0;::::1;645:50;;689:5;676:19;;;;;;;;;;;:::i;645:50::-;706:21;::::0;6753:42:22;6741:55;;6723:74;;706:21:4::1;::::0;6711:2:22;6696:18;706:21:4::1;;;;;;;456:276:::0;;;:::o;670:87:6:-;718:7;740:12;750:1;740:9;:12::i;:::-;733:19;;670:87;:::o;942:233:4:-;1028:4;1044:48;;;;;1040:80;;-1:-1:-1;1109:4:4;;942:233;-1:-1:-1;942:233:4:o;1040:80::-;1133:37;1157:12;1133:23;:37::i;3480:386:2:-;3611:12;3629:17;3657;3676:14;3692:17;3760:38;3778:7;3787:10;;3760:17;:38::i;:::-;-1:-1:-1;3715:83:2;-1:-1:-1;3715:83:2;;-1:-1:-1;3715:83:2;-1:-1:-1;3715:83:2;-1:-1:-1;3814:19:2;;;;;;:47;;-1:-1:-1;2779:4:1;3837:24:2;3804:57;;3651:215;;;3480:386;;;;;;:::o;2824:93:1:-;2898:14;;;;;;;;;;;;;;1173:224:13;1279:107;;12792:66:22;1279:107:13;;;12780:79:22;1325:13:13;12875:11:22;;;12868:27;12946:66;1356:4:13;12933:2:22;12929:15;12925:88;12911:12;;;12904:110;13030:12;;;13023:28;;;1240:7:13;;13067:12:22;;1279:107:13;;;;;;;;;;;;;1262:130;;;;;;1255:137;;1173:224;;;:::o;1710:834:1:-;1847:4;1832:12;1864:676;1888:4;1884:1;:8;1864:676;;;1907:32;1942:4;;1947:1;1942:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1907:42;-1:-1:-1;1962:24:1;;;;1907:42;1962:24;:::i;:::-;1958:62;;;1995:25;;;;;;;;2778::22;;;2751:18;;1995:25:1;2632:177:22;1958:62:1;2048:20;;;;;2080:9;:20;2076:69;;;2122:1;2125:8;2135:9;2109:36;;;;;;;;13869:25:22;;;;13910:18;;;13903:34;;;;13953:18;;;13946:34;13842:18;;2109:36:1;13667:319:22;2076:69:1;2154:12;2169:148;2192:18;;;;;;;;:::i;:::-;2220:17;;;;2247:13;;:36;;2275:8;2247:36;;;2263:9;2247:36;2293:16;;;;:11;:16;:::i;:::-;2169:13;:148::i;:::-;2154:163;;2330:7;2326:208;;;2365:7;2354:22;2374:1;2354:22;;;;2778:25:22;;2766:2;2751:18;;2632:177;2354:22:1;;;;;;;;2326:208;;;2401:124;2425:25;;;;;;;;:::i;:::-;2462:7;2481:1;2494:21;:19;:21::i;:::-;2401:12;:124::i;:::-;1899:641;;;1894:3;;;;;:::i;:::-;;;;1864:676;;;;1799:745;1710:834;;;:::o;8892:642:13:-;8996:17;;;;9131:41;9145:10;9157:14;:10;9168:1;9157:10;;:14;:::i;:::-;9131:13;:41::i;:::-;622:9:20;656:13;;;1585:25:18;;1626:3;1622:14;683:2:20;676:14;;;715:2;702:16;;;656:13;;9379:1:13;2034:23:18;;;2021:37;2074:3;2070:14;676::20;;;;702:16;;;;1622:14:18;;9109:63:13;;-1:-1:-1;702:16:20;2070:14:18;-1:-1:-1;8892:642:13;-1:-1:-1;;;;8892:642:13:o;648:262:15:-;752:17;;;;854:51;878:10;890:14;:10;901:1;890:10;;:14;:::i;:::-;854:23;:51::i;:::-;847:58;;;;;;;;648:262;;;;;;;:::o;404:213:16:-;502:104;;12792:66:22;502:104:16;;;12780:79:22;463:7:16;12875:11:22;;;12868:27;;;12946:66;576:4:16;12933:2:22;12929:15;12925:88;12911:12;;;12904:110;13030:12;;;13023:28;;;463:7:16;13067:12:22;;502:104:16;12494:591:22;2320:2059:14;2428:17;;;;;3378:14:19;2563:1:14;3290:25:19;;3277:39;3336:3;3332:14;2428:17:14;2768:16;3378:14:19;3332;2768:16:14;:::i;:::-;2750:34;-1:-1:-1;2883:72:14;2908:7;2923:26;2750:34;2934:6;2923:10;;:26;:::i;2883:72::-;2791:164;;-1:-1:-1;2791:164:14;;-1:-1:-1;2791:164:14;-1:-1:-1;2791:164:14;-1:-1:-1;2791:164:14;-1:-1:-1;2966:18:14;;;2962:118;;;3027:26;3045:7;3038:6;3027:10;;:26;:::i;:::-;3055:9;3066:6;3001:72;;;;;;;;;;;;;;:::i;2962:118::-;3095:7;3086:16;;3283:1092;3290:26;;;3283:1092;;;3390:1:19;3378:14;;;3290:25;;3277:39;3336:3;3332:14;;-1:-1:-1;3444:16:14;3378:14:19;3332;3444:16:14;:::i;:::-;3434:26;;3469:22;3687:105;3714:34;3738:9;3714:23;:34::i;:::-;3758:10;;3769:6;3758:26;3776:7;3758:26;;;;;;;:::i;3687:105::-;3500:292;;-1:-1:-1;3500:292:14;;-1:-1:-1;3500:292:14;-1:-1:-1;3500:292:14;;-1:-1:-1;;3833:18:14;;;3829:122;;;3896:26;3914:7;3907:6;3896:10;;:26;:::i;:::-;3924:9;3935:6;3870:72;;;;;;;;;;;;;;:::i;3829:122::-;4216:10;4198:14;:28;4194:115;;4245:55;;;;;;;;16193:25:22;;;16234:18;;;16227:34;;;16166:18;;4245:55:14;16019:248:22;4194:115:14;4330:14;-1:-1:-1;4361:7:14;-1:-1:-1;4361:7:14;3283:1092;;;2540:1839;;;2320:2059;;;;;;;;;:::o;490:187:9:-;568:11;587;622:4;628:7;611:25;;;;;;;;16193::22;;;16249:2;16234:18;;16227:34;16181:2;16166:18;;16019:248;611:25:9;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:9:o;4140:231:3:-;4226:4;4242:46;;;;;4238:78;;-1:-1:-1;4305:4:3;;4140:231;-1:-1:-1;4140:231:3:o;4238:78::-;4329:37;4353:12;4329:23;:37::i;1525:353:20:-;1640:6;1688:4;1682:11;1732:12;1718;1713:3;1700:45;1859:1;1848;1826:12;1813:3;1799:4;1786:3;1772:4;1758:110;1753:115;1525:353;-1:-1:-1;;;;;;;1525:353:20:o;852:271::-;897:14;948:16;982:4;976:11;971:16;;1014:2;1011:1;1007:10;1048:4;1041:5;1037:16;1031:4;1024:30;1071:4;1068:1;1061:15;1108:4;1105:1;1098:5;1083:30;;;852:271;:::o;3644:286:3:-;3781:14;3777:149;;;3849:7;3843:14;3836:4;3827:7;3823:18;3816:42;3777:149;3894:7;3885:34;3903:6;3911:7;3885:34;;;;;;;:::i;:::-;;;;;;;;3644:286;;;;:::o;3525:4708:13:-;3635:14;3655:12;3696:14;3765:4458;3772:26;;;3765:4458;;;1475:1:19;1463:14;;;1390:25;;1377:39;1432:3;1428:14;3923:20:13;;;3919:402;;2205:2:19;2193:15;;;2046:25;;2033:39;2088:3;2084:14;;;;2118:2;2114:13;2129:42;2110:62;;;1873:23:13;;:49;;4231:4;:59;;4286:4;4231:59;;;622:9:20;656:13;;;683:2;676:14;;;715:2;702:16;;4252:31:13;4224:66;;4302:8;;;;;;3919:402;4335:4;4331:679;;1475:1:19;1463:14;;;1390:25;;;1377:39;1432:3;1428:14;;4560:11:13;;4396:16;4598:72;4631:10;4643:26;4560:11;1463:14:19;4643:10:13;1390:25:19;4643:26:13;:::i;:::-;4598:32;:72::i;:::-;4764:20;;;;;;;;4691:7;;-1:-1:-1;4691:7:13;;4764:20;-1:-1:-1;1893:3:13;1873:23;;;;;1899;;;1873:49;4920:4;:59;;4975:4;4920:59;;;622:9:20;656:13;;;683:2;676:14;;;715:2;702:16;;4941:31:13;4913:66;;4991:8;;;;;;;4331:679;625:1;5024:4;:30;5020:932;;5104:16;;2046:25:19;;;2033:39;2088:3;2084:14;;;;2118:2;2114:13;2129:42;2110:62;2205:2;2193:15;;5146:64:13;-1:-1:-1;5146:64:13;;-1:-1:-1;5146:64:13;-1:-1:-1;5256:12:13;3290:25:19;;;3277:39;3336:3;3332:14;3390:1;3378:14;;5280:46:13;;;;;;;;;;;;;5380:15;5407:4;5398:6;:13;5380:31;;5428:81;5464:10;5476:4;5482:10;;5493:6;5482:26;5500:7;5482:26;;;;;;;:::i;:::-;5428:35;:81::i;:::-;5423:190;;5555:10;5567:4;5573:26;5591:7;5584:6;5573:10;;:26;:::i;:::-;5532:68;;;;;;;;;;;;;;:::i;5423:190::-;5706:20;;;;;;;;;-1:-1:-1;5706:20:13;1893:3;1873:23;;;;;1899;;;1873:49;5862:4;:59;;5917:4;5862:59;;;622:9:20;656:13;;;683:2;676:14;;;715:2;702:16;;5883:31:13;5855:66;;5933:8;;;;;;;;5020:932;667:1;5966:4;:17;5962:243;;4550:2:19;4536:17;;;4487:27;;4474:41;6115:4:13;:59;;6170:4;6115:59;;;622:9:20;656:13;;;683:2;676:14;;;715:2;702:16;;6136:31:13;6108:66;;6186:8;;;;5962:243;711:1;6219:4;:19;6215:472;;3390:1:19;3378:14;;;;3290:25;;;3277:39;3336:3;3332:14;;6409:13:13;;;;6309:12;;6494:53;6508:10;6520:26;6409:13;3378:14:19;6520:10:13;3290:25:19;6520:26:13;:::i;6494:53::-;622:9:20;656:13;;;683:2;676:14;715:2;702:16;;;6560:17:13;;;;;-1:-1:-1;6649:7:13;;-1:-1:-1;6668:8:13;;-1:-1:-1;;;6668:8:13;6215:472;802:1;6701:4;:19;6697:979;;6864:22;1390:25:19;;;1377:39;1432:3;1428:14;1475:1;1463:14;;6898:55:13;-1:-1:-1;6898:55:13;;;-1:-1:-1;6966:25:13;2699::19;;;2686:39;2745:3;2741:14;2797:1;2785:14;;7003:59:13;-1:-1:-1;7003:59:13;;;-1:-1:-1;7075:12:13;3290:25:19;;;3277:39;3336:3;3332:14;3390:1;3378:14;;7099:46:13;;;;;;;;;;;;;7157:15;7184:4;7175:6;:13;7157:31;;7201:22;7225:20;7290:53;7304:10;7316;;7327:6;7316:26;7334:7;7316:26;;;;;;;:::i;7290:53::-;7364:7;;-1:-1:-1;7364:7:13;;7257:86;;-1:-1:-1;7257:86:13;-1:-1:-1;7388:35:13;;;7384:92;;7439:24;;;;7384:92;2976:73;;;20362:66:22;2976:73:13;;;;20350:79:22;;;;20445:12;;;20438:28;;;20482:12;;;20475:28;;;20519:12;;;;20512:28;;;2976:73:13;;;;;;;;;;20556:13:22;;;;2976:73:13;;;2966:84;;;;;7585:4;:59;;7640:4;7585:59;;;622:9:20;656:13;;;683:2;676:14;;;715:2;702:16;;7606:31:13;7578:66;;7657:8;;;;;;;;;;6697:979;758:1;7690:4;:22;7686:485;;4550:2:19;4536:17;;;4487:27;;4474:41;7920:23:13;;;7916:82;;7968:17;7959:26;;7916:82;8010:12;8025:37;8052:9;8025:26;:37::i;:::-;8010:52;-1:-1:-1;8081:4:13;:59;;8136:4;8081:59;;;622:9:20;656:13;;;683:2;676:14;;;715:2;702:16;;8102:31:13;8074:66;;8152:8;;;;;7686:485;8188:26;;;;;;;;2778:25:22;;;2751:18;;8188:26:13;2632:177:22;3765:4458:13;3678:4551;3525:4708;;;;;;:::o;1296:160:14:-;862:44;1372:7;656:13:20;;;683:2;676:14;;;715:2;702:16;;1394:57:14;543:185:20;6015:300:2;6101:4;6124:45;;;6140:29;6124:45;;:103;;-1:-1:-1;6179:48:2;;;6195:32;6179:48;6124:103;6113:147;;;-1:-1:-1;6249:4:2;;6015:300;-1:-1:-1;6015:300:2:o;6113:147::-;725:31:5;709:47;;;;6273:37:2;613:148:5;1767:2316:21;1867:14;1914:2;1893:23;;1889:70;;1948:10;;1925:34;;;;;;;;;;;;:::i;1889:70::-;1965:21;1989:43;2010:21;2030:1;2010:10;:21;:::i;:::-;1226:23:18;;1213:37;1266:3;1262:14;;1071:215;1989:43:21;1965:67;;;-1:-1:-1;2115:2:21;1226:23:18;;1213:37;1266:3;1262:14;795:37;;2202:2:21;808:23:18;;795:37;3209:66:21;3196:79;;3192:135;;;3306:10;;3318:1;3292:28;;;;;;;;;;;;;:::i;3192:135::-;3337:1;:7;;3342:2;3337:7;;:18;;;;;3348:1;:7;;3353:2;3348:7;;3337:18;3333:74;;;3386:10;;3398:1;3372:28;;;;;;;;;;;;;:::i;3333:74::-;1253:1;3447:13;:32;3443:509;;3498:25;;;;;;;;;;;;18522::22;;;18595:4;18583:17;;18563:18;;;18556:45;;;;18617:18;;;18610:34;;;18660:18;;;18653:34;;;3498:25:21;;18494:19:22;;3498:25:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:34;;3443:509;;;1303:1;3608:13;:34;3604:348;;3690:59;;18940:66:22;3690:59:21;;;18928:79:22;19023:12;;;19016:28;;;3661:130:21;;19060:12:22;;3690:59:21;;;;;;;;;;;;;3680:70;;3690:59;3680:70;;;;3661:130;;;;;;;;;18522:25:22;18595:4;18583:17;;18563:18;;;18556:45;18617:18;;;18610:34;;;18660:18;;;18653:34;;;18494:19;;3661:130:21;18295:398:22;3604:348:21;3913:10;;3925:13;3940:4;3888:57;;;;;;;;;;;;;;:::i;3604:348::-;3999:22;;;3995:63;;4047:10;;4030:28;;;;;;;;;;;;:::i;3995:63::-;4065:13;;;;1767:2316;;;;;:::o;4411:951::-;4535:10;4557:22;;;4553:66;;4596:16;;;;;;;;;;;;;;4553:66;4625:21;4655:10;;4666:21;4686:1;4655:10;4666:21;:::i;:::-;4655:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;1253:1:21;4699:32;;;:70;;;1303:1;4735:13;:34;4699:70;4695:663;;;4873:7;4837:43;;:32;4851:5;4858:10;;4837:13;:32::i;:::-;:43;;;4829:51;;4695:663;;;1359:1;4898:13;:40;4894:464;;5060:40;;;;5101:5;5108:10;5119:1;5108:10;5121:21;5141:1;5108:10;5121:21;:::i;:::-;5108:35;;;;;;;:::i;:::-;5060:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5030:114;;:26;:114;;-1:-1:-1;4894:464:21;;;5318:10;;5330:13;5345:5;5293:58;;;;;;;;;;;;;;:::i;4894:464::-;4547:815;4411:951;;;;;;:::o;2227:182:13:-;2346:57;;20822:66:22;2346:57:13;;;20810:79:22;20905:12;;;20898:28;;;2314:7:13;;20942:12:22;;2346:57:13;20580:380:22;14:177;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:347::-;689:8;699:6;753:3;746:4;738:6;734:17;730:27;720:55;;771:1;768;761:12;720:55;-1:-1:-1;794:20:22;;837:18;826:30;;823:50;;;869:1;866;859:12;823:50;906:4;898:6;894:17;882:29;;958:3;951:4;942:6;934;930:19;926:30;923:39;920:59;;;975:1;972;965:12;920:59;638:347;;;;;:::o;990:477::-;1069:6;1077;1085;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1190:9;1177:23;1167:33;;1251:2;1240:9;1236:18;1223:32;1278:18;1270:6;1267:30;1264:50;;;1310:1;1307;1300:12;1264:50;1349:58;1399:7;1390:6;1379:9;1375:22;1349:58;:::i;:::-;990:477;;1426:8;;-1:-1:-1;1323:84:22;;-1:-1:-1;;;;990:477:22:o;1725:717::-;1815:6;1823;1831;1839;1892:2;1880:9;1871:7;1867:23;1863:32;1860:52;;;1908:1;1905;1898:12;1860:52;1948:9;1935:23;1977:18;2018:2;2010:6;2007:14;2004:34;;;2034:1;2031;2024:12;2004:34;2073:58;2123:7;2114:6;2103:9;2099:22;2073:58;:::i;:::-;2150:8;;-1:-1:-1;2047:84:22;-1:-1:-1;2238:2:22;2223:18;;2210:32;;-1:-1:-1;2254:16:22;;;2251:36;;;2283:1;2280;2273:12;2251:36;;2322:60;2374:7;2363:8;2352:9;2348:24;2322:60;:::i;:::-;1725:717;;;;-1:-1:-1;2401:8:22;-1:-1:-1;;;;1725:717:22:o;2447:180::-;2506:6;2559:2;2547:9;2538:7;2534:23;2530:32;2527:52;;;2575:1;2572;2565:12;2527:52;-1:-1:-1;2598:23:22;;2447:180;-1:-1:-1;2447:180:22:o;2814:387::-;2897:8;2907:6;2961:3;2954:4;2946:6;2942:17;2938:27;2928:55;;2979:1;2976;2969:12;2928:55;-1:-1:-1;3002:20:22;;3045:18;3034:30;;3031:50;;;3077:1;3074;3067:12;3031:50;3114:4;3106:6;3102:17;3090:29;;3174:3;3167:4;3157:6;3154:1;3150:14;3142:6;3138:27;3134:38;3131:47;3128:67;;;3191:1;3188;3181:12;3206:488;3323:6;3331;3384:2;3372:9;3363:7;3359:23;3355:32;3352:52;;;3400:1;3397;3390:12;3352:52;3440:9;3427:23;3473:18;3465:6;3462:30;3459:50;;;3505:1;3502;3495:12;3459:50;3544:90;3626:7;3617:6;3606:9;3602:22;3544:90;:::i;:::-;3653:8;;3518:116;;-1:-1:-1;3206:488:22;-1:-1:-1;;;;3206:488:22:o;3699:864::-;3845:6;3853;3861;3869;3877;3930:2;3918:9;3909:7;3905:23;3901:32;3898:52;;;3946:1;3943;3936:12;3898:52;3986:9;3973:23;4015:18;4056:2;4048:6;4045:14;4042:34;;;4072:1;4069;4062:12;4042:34;4111:90;4193:7;4184:6;4173:9;4169:22;4111:90;:::i;:::-;4220:8;;-1:-1:-1;4085:116:22;-1:-1:-1;4302:2:22;4287:18;;4274:32;;-1:-1:-1;4359:2:22;4344:18;;4331:32;;-1:-1:-1;4375:16:22;;;4372:36;;;4404:1;4401;4394:12;4372:36;;4443:60;4495:7;4484:8;4473:9;4469:24;4443:60;:::i;:::-;3699:864;;;;-1:-1:-1;3699:864:22;;-1:-1:-1;4522:8:22;;4417:86;3699:864;-1:-1:-1;;;3699:864:22:o;5403:184::-;5455:77;5452:1;5445:88;5552:4;5549:1;5542:15;5576:4;5573:1;5566:15;5592:980;5660:6;5713:2;5701:9;5692:7;5688:23;5684:32;5681:52;;;5729:1;5726;5719:12;5681:52;5769:9;5756:23;5798:18;5839:2;5831:6;5828:14;5825:34;;;5855:1;5852;5845:12;5825:34;5893:6;5882:9;5878:22;5868:32;;5938:7;5931:4;5927:2;5923:13;5919:27;5909:55;;5960:1;5957;5950:12;5909:55;5996:2;5983:16;6018:2;6014;6011:10;6008:36;;;6024:18;;:::i;:::-;6158:2;6152:9;6220:4;6212:13;;6063:66;6208:22;;;6232:2;6204:31;6200:40;6188:53;;;6256:18;;;6276:22;;;6253:46;6250:72;;;6302:18;;:::i;:::-;6342:10;6338:2;6331:22;6377:2;6369:6;6362:18;6417:7;6412:2;6407;6403;6399:11;6395:20;6392:33;6389:53;;;6438:1;6435;6428:12;6389:53;6494:2;6489;6485;6481:11;6476:2;6468:6;6464:15;6451:46;6539:1;6517:15;;;6534:2;6513:24;6506:35;;;;-1:-1:-1;6521:6:22;5592:980;-1:-1:-1;;;;;5592:980:22:o;6808:271::-;6991:6;6983;6978:3;6965:33;6947:3;7017:16;;7042:13;;;7017:16;6808:271;-1:-1:-1;6808:271:22:o;7416:160::-;7481:20;;7537:13;;7530:21;7520:32;;7510:60;;7566:1;7563;7556:12;7510:60;7416:160;;;:::o;7581:196::-;7649:20;;7709:42;7698:54;;7688:65;;7678:93;;7767:1;7764;7757:12;7782:325;7870:6;7865:3;7858:19;7922:6;7915:5;7908:4;7903:3;7899:14;7886:43;;7974:1;7967:4;7958:6;7953:3;7949:16;7945:27;7938:38;7840:3;8096:4;8026:66;8021:2;8013:6;8009:15;8005:88;8000:3;7996:98;7992:109;7985:116;;7782:325;;;;:::o;8112:2028::-;8232:6;8227:3;8220:19;8202:3;8258:4;8299:2;8294:3;8290:12;8324:11;8351;8344:18;;8401:6;8398:1;8394:14;8387:5;8383:26;8371:38;;8432:5;8455:1;8465:1649;8479:6;8476:1;8473:13;8465:1649;;;8550:5;8544:4;8540:16;8535:3;8528:29;8609:6;8596:20;8695:66;8687:5;8671:14;8667:26;8663:99;8643:18;8639:124;8629:152;;8777:1;8774;8767:12;8629:152;8809:30;;8862:4;8906:24;8809:30;8906:24;:::i;:::-;8899:32;8892:40;8886:4;8879:54;8982:33;9011:2;9002:7;8998:16;8982:33;:::i;:::-;8975:41;8968:49;8953:13;;;8946:72;9041:4;9093:16;;;9080:30;9065:13;;;9058:53;9134:4;9215:42;9177:36;9196:16;;;9177:36;:::i;:::-;9173:85;9158:13;;;9151:108;9282:4;9334:16;;;9321:30;9306:13;;;9299:53;9375:4;9433:16;;;9420:30;9507:14;9503:28;;;9533:66;9499:101;9473:128;;9463:156;;9615:1;9612;9605:12;9463:156;9647:34;;;9759:16;;;;-1:-1:-1;9710:21:22;9804:18;9791:32;;9788:52;;;9836:1;9833;9826:12;9788:52;9889:8;9873:14;9869:29;9860:7;9856:43;9853:63;;;9912:1;9909;9902:12;9853:63;9951:2;9946;9940:4;9936:13;9929:25;9975:59;10030:2;10024:4;10020:13;10010:8;10001:7;9975:59;:::i;:::-;10092:12;;;;9967:67;-1:-1:-1;;;10057:15:22;;;;-1:-1:-1;;8501:1:22;8494:9;8465:1649;;;-1:-1:-1;10130:4:22;;8112:2028;-1:-1:-1;;;;;;;8112:2028:22:o;10145:594::-;10495:2;10484:9;10477:21;10534:1;10529:2;10518:9;10514:18;10507:29;10572:7;10567:2;10556:9;10552:18;10545:35;10618:3;10611:4;10600:9;10596:20;10589:33;10458:4;10639:94;10728:3;10717:9;10713:19;10705:6;10697;10639:94;:::i;10744:595::-;11094:2;11083:9;11076:21;11133:1;11128:2;11117:9;11113:18;11106:29;11171:8;11166:2;11155:9;11151:18;11144:36;11218:3;11211:4;11200:9;11196:20;11189:33;11057:4;11239:94;11328:3;11317:9;11313:19;11305:6;11297;11239:94;:::i;11344:184::-;11396:77;11393:1;11386:88;11493:4;11490:1;11483:15;11517:4;11514:1;11507:15;11786:481;11827:3;11865:5;11859:12;11892:6;11887:3;11880:19;11917:1;11927:162;11941:6;11938:1;11935:13;11927:162;;;12003:4;12059:13;;;12055:22;;12049:29;12031:11;;;12027:20;;12020:59;11956:12;11927:162;;;11931:3;12134:1;12127:4;12118:6;12113:3;12109:16;12105:27;12098:38;12256:4;12186:66;12181:2;12173:6;12169:15;12165:88;12160:3;12156:98;12152:109;12145:116;;;11786:481;;;;:::o;12272:217::-;12419:2;12408:9;12401:21;12382:4;12439:44;12479:2;12468:9;12464:18;12456:6;12439:44;:::i;13090:387::-;13187:4;13245:11;13232:25;13335:66;13324:8;13308:14;13304:29;13300:102;13280:18;13276:127;13266:155;;13417:1;13414;13407:12;13266:155;13438:33;;;;;13090:387;-1:-1:-1;;13090:387:22:o;13482:180::-;13538:6;13591:2;13579:9;13570:7;13566:23;13562:32;13559:52;;;13607:1;13604;13597:12;13559:52;13630:26;13646:9;13630:26;:::i;13991:186::-;14050:6;14103:2;14091:9;14082:7;14078:23;14074:32;14071:52;;;14119:1;14116;14109:12;14071:52;14142:29;14161:9;14142:29;:::i;14182:580::-;14259:4;14265:6;14325:11;14312:25;14415:66;14404:8;14388:14;14384:29;14380:102;14360:18;14356:127;14346:155;;14497:1;14494;14487:12;14346:155;14524:33;;14576:20;;;-1:-1:-1;14619:18:22;14608:30;;14605:50;;;14651:1;14648;14641:12;14605:50;14684:4;14672:17;;-1:-1:-1;14715:14:22;14711:27;;;14701:38;;14698:58;;;14752:1;14749;14742:12;14767:184;14819:77;14816:1;14809:88;14916:4;14913:1;14906:15;14940:4;14937:1;14930:15;14956:195;14995:3;15026:66;15019:5;15016:77;15013:103;;15096:18;;:::i;:::-;-1:-1:-1;15143:1:22;15132:13;;14956:195::o;15156:331::-;15261:9;15272;15314:8;15302:10;15299:24;15296:44;;;15336:1;15333;15326:12;15296:44;15365:6;15355:8;15352:20;15349:40;;;15385:1;15382;15375:12;15349:40;-1:-1:-1;;15411:23:22;;;15456:25;;;;;-1:-1:-1;15156:331:22:o;15492:125::-;15557:9;;;15578:10;;;15575:36;;;15591:18;;:::i;15622:392::-;15841:2;15830:9;15823:21;15804:4;15861:61;15918:2;15907:9;15903:18;15895:6;15887;15861:61;:::i;:::-;15953:2;15938:18;;15931:34;;;;-1:-1:-1;15996:2:22;15981:18;15974:34;15853:69;15622:392;-1:-1:-1;;15622:392:22:o;16525:288::-;16700:6;16689:9;16682:25;16743:2;16738;16727:9;16723:18;16716:30;16663:4;16763:44;16803:2;16792:9;16788:18;16780:6;16763:44;:::i;16818:441::-;17037:6;17026:9;17019:25;17092:42;17084:6;17080:55;17075:2;17064:9;17060:18;17053:83;17172:2;17167;17156:9;17152:18;17145:30;17000:4;17192:61;17249:2;17238:9;17234:18;17226:6;17218;17192:61;:::i;:::-;17184:69;16818:441;-1:-1:-1;;;;;;16818:441:22:o;17264:244::-;17421:2;17410:9;17403:21;17384:4;17441:61;17498:2;17487:9;17483:18;17475:6;17467;17441:61;:::i;17513:128::-;17580:9;;;17601:11;;;17598:37;;;17615:18;;:::i;17646:315::-;17831:2;17820:9;17813:21;17794:4;17851:61;17908:2;17897:9;17893:18;17885:6;17877;17851:61;:::i;:::-;17843:69;;17948:6;17943:2;17932:9;17928:18;17921:34;17646:315;;;;;;:::o;17966:324::-;18149:2;18138:9;18131:21;18112:4;18169:61;18226:2;18215:9;18211:18;18203:6;18195;18169:61;:::i;:::-;18161:69;;18278:4;18270:6;18266:17;18261:2;18250:9;18246:18;18239:45;17966:324;;;;;;:::o;19083:396::-;19290:2;19279:9;19272:21;19253:4;19310:61;19367:2;19356:9;19352:18;19344:6;19336;19310:61;:::i;:::-;19402:2;19387:18;;19380:34;;;;-1:-1:-1;19457:14:22;;19450:22;19445:2;19430:18;;;19423:50;19302:69;19083:396;-1:-1:-1;;19083:396:22:o;19484:321::-;19675:6;19664:9;19657:25;19718:2;19713;19702:9;19698:18;19691:30;19638:4;19738:61;19795:2;19784:9;19780:18;19772:6;19764;19738:61;:::i;:::-;19730:69;19484:321;-1:-1:-1;;;;;19484:321:22:o;19810:249::-;19879:6;19932:2;19920:9;19911:7;19907:23;19903:32;19900:52;;;19948:1;19945;19938:12;19900:52;19980:9;19974:16;19999:30;20023:5;19999:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1734000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SET_IMAGE_HASH_TYPE_HASH()": "262",
								"createContract(bytes)": "infinite",
								"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": "infinite",
								"isValidSignature(bytes,bytes)": "infinite",
								"isValidSignature(bytes32,bytes)": "infinite",
								"nonce()": "2645",
								"readNonce(uint256)": "2640",
								"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": "infinite",
								"signatureRecovery(bytes32,bytes)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"updateImageHash(bytes32)": "357"
							},
							"internal": {
								"_executeGuest(bytes32,struct IModuleCalls.Transaction calldata[] calldata)": "infinite",
								"_isValidImage(bytes32)": "infinite",
								"_updateImageHash(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 200,
									"end": 204,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 185,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 185,
									"end": 205,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "1055"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 3333,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bb95d18e97f278aa47e0c04c20d5a6af9bdb6d473c6d4051192cd96fc17866864736f6c63430008120033",
									".code": [
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "61C2926C"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "8C3F5563"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "8C3F5563"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "90042BAF"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "AFFED0E0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "61C2926C"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "7A9A1628"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "853C5068"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "20C13B0B"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "20C13B0B"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "29561426"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "57C56D6B"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "1626BA7E"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 3333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3127,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5489,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5489,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1712,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1634,
											"end": 1713,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1634,
											"end": 1713,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1634,
											"end": 1713,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1616,
											"end": 1714,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1616,
											"end": 1714,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1607,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1472,
											"end": 1720,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4525,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4525,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6456,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6456,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 811,
											"end": 906,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 862,
											"end": 906,
											"name": "PUSH",
											"source": 14,
											"value": "8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 811,
											"end": 906,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 906,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 811,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2632,
											"end": 2809,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1290,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1290,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 890,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 890,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1675,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1675,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 4883,
											"end": 4885,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4947,
											"end": 4981,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 5012,
											"end": 5015,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 4997,
											"end": 5016,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4997,
											"end": 5016,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4990,
											"end": 5025,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 4814,
											"end": 4817,
											"name": "PUSH",
											"source": 22,
											"value": "A0"
										},
										{
											"begin": 4799,
											"end": 4818,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4568,
											"end": 5031,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 938,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 938,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 456,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 456,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6753,
											"end": 6795,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6741,
											"end": 6796,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 6741,
											"end": 6796,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 6741,
											"end": 6796,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 6723,
											"end": 6797,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6723,
											"end": 6797,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 6711,
											"end": 6713,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6577,
											"end": 6803,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 670,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 670,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3313,
											"end": 3325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3289,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3127,
											"end": 3331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5706,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5706,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5667,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5707,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5667,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5713,
											"end": 5778,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5713,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5713,
											"end": 5778,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "PUSH",
											"source": 2,
											"value": "1626BA7E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5734,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5734,
											"end": 5771,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5713,
											"end": 5778,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5713,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5798,
											"end": 5799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4741,
											"end": 4746,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4746,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4731,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4747,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4760,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4760,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4710,
											"end": 4761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4761,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4710,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4830,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4767,
											"end": 4830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4795,
											"end": 4823,
											"name": "PUSH",
											"source": 2,
											"value": "20C13B0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4795,
											"end": 4823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4788,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4788,
											"end": 4823,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4830,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4767,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 178,
											"end": 188,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 200,
											"end": 204,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 178,
											"end": 205,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 174,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 174,
											"end": 268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "E125889400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 235,
											"end": 245,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7319,
											"end": 7353,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 255,
											"end": 259,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7362,
											"end": 7405,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "PUSH",
											"source": 22,
											"value": "44"
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 222,
											"end": 261,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 174,
											"end": 268,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 174,
											"end": 268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6559,
											"end": 6569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6542,
											"end": 6558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6542,
											"end": 6570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6542,
											"end": 6570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6542,
											"end": 6570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1454,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1480,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1418,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1418,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1520,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1520,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1083,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1111,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1047,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1164,
											"end": 1170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1176,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1176,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1150,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1177,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1150,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1952,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1952,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1942,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1962,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1962,
											"end": 2265,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2083,
											"end": 2090,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2057,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2091,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2057,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2091,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2189,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2189,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2190,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2190,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2190,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2190,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2190,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2190,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2198,
											"end": 2258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2258,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2265,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1962,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2304,
											"name": "PUSH",
											"source": 2,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2275,
											"end": 2304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2271,
											"end": 2581,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2370,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2404,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2505,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2505,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2457,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2581,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2271,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "FE00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2591,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2591,
											"end": 2624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2587,
											"end": 2906,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2690,
											"end": 2729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2906,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2587,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "FD00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2916,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2916,
											"end": 2945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2945,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2912,
											"end": 3108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3081,
											"end": 3088,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3090,
											"end": 3100,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3090,
											"end": 3100,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3066,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3066,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3059,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2912,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "6085CD8200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11707,
											"end": 11773,
											"name": "PUSH",
											"source": 22,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11695,
											"end": 11774,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11695,
											"end": 11774,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11677,
											"end": 11775,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11650,
											"end": 11668,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 11650,
											"end": 11668,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11533,
											"end": 11781,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 3161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 453,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1032,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 188,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 200,
											"end": 204,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 178,
											"end": 205,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 174,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 174,
											"end": 268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "E125889400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 235,
											"end": 245,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7319,
											"end": 7353,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 255,
											"end": 259,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7362,
											"end": 7405,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "PUSH",
											"source": 22,
											"value": "44"
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 7084,
											"end": 7411,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 174,
											"end": 268,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 174,
											"end": 268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 631,
											"end": 636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 625,
											"end": 637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 618,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 596,
											"end": 607,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 589,
											"end": 638,
											"modifierDepth": 1,
											"name": "CREATE",
											"source": 4
										},
										{
											"begin": 581,
											"end": 638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 649,
											"end": 667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 649,
											"end": 667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 649,
											"end": 667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 689,
											"end": 694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D25719100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 676,
											"end": 695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 727,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6753,
											"end": 6795,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6741,
											"end": 6796,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6741,
											"end": 6796,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 6723,
											"end": 6797,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6723,
											"end": 6797,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C"
										},
										{
											"begin": 706,
											"end": 727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6711,
											"end": 6713,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 670,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 718,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 740,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 740,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 733,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 733,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "6FFBD45100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1133,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1133,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1133,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3646,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3797,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3797,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3760,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3798,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3760,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3798,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3798,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3814,
											"end": 3861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3837,
											"end": 3861,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3837,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3861,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2917,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2824,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "A038794000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2912,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1397,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1173,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12858,
											"name": "PUSH",
											"source": 22,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12780,
											"end": 12859,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1325,
											"end": 1338,
											"name": "CHAINID",
											"source": 13
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "PUSH",
											"source": 22,
											"value": "22"
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 12946,
											"end": 13012,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 1356,
											"end": 1360,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 12933,
											"end": 12935,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 12929,
											"end": 12944,
											"name": "SHL",
											"source": 22
										},
										{
											"begin": 12925,
											"end": 13013,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 12911,
											"end": 12923,
											"name": "PUSH",
											"source": 22,
											"value": "42"
										},
										{
											"begin": 12911,
											"end": 12923,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12911,
											"end": 12923,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12904,
											"end": 13014,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13030,
											"end": 13042,
											"name": "PUSH",
											"source": 22,
											"value": "56"
										},
										{
											"begin": 13030,
											"end": 13042,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 13030,
											"end": 13042,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13023,
											"end": 13051,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13023,
											"end": 13051,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13023,
											"end": 13051,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1240,
											"end": 1247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13067,
											"end": 13079,
											"name": "PUSH",
											"source": 22,
											"value": "76"
										},
										{
											"begin": 13067,
											"end": 13079,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1392,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1392,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1392,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1392,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1710,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1892,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1942,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1942,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1962,
											"end": 1986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1962,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2020,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1958,
											"end": 2020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "PUSH",
											"source": 1,
											"value": "230D1CCC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1995,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2632,
											"end": 2809,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1958,
											"end": 2020,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1958,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2100,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2076,
											"end": 2145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "2BB3E3BA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13869,
											"end": 13894,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 13869,
											"end": 13894,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13869,
											"end": 13894,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 13869,
											"end": 13894,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13910,
											"end": 13928,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 13910,
											"end": 13928,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13910,
											"end": 13928,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13903,
											"end": 13937,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 13903,
											"end": 13937,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13903,
											"end": 13937,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 13903,
											"end": 13937,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "PUSH",
											"source": 22,
											"value": "44"
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13946,
											"end": 13980,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "PUSH",
											"source": 22,
											"value": "64"
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2109,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13667,
											"end": 13986,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2076,
											"end": 2145,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2076,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2192,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2260,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2304,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2293,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2169,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2317,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2169,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "PUSH",
											"source": 1,
											"value": "5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2632,
											"end": 2809,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2326,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2425,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2469,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2494,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2494,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2401,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2401,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1894,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 2540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8892,
											"end": 9534,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 8892,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 9145,
											"end": 9155,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9157,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9157,
											"end": 9167,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9157,
											"end": 9167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9157,
											"end": 9167,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 9157,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 9157,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9157,
											"end": 9171,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9157,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 9131,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9172,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 9131,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1585,
											"end": 1610,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1585,
											"end": 1610,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1629,
											"name": "PUSH",
											"source": 18,
											"value": "F0"
										},
										{
											"begin": 1622,
											"end": 1636,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9379,
											"end": 9380,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2034,
											"end": 2057,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2034,
											"end": 2057,
											"name": "SWAP11",
											"source": 18
										},
										{
											"begin": 2034,
											"end": 2057,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2058,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1622,
											"end": 1636,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1622,
											"end": 1636,
											"name": "SWAP10",
											"source": 18
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8892,
											"end": 9534,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8892,
											"end": 9534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 910,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 648,
											"end": 910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 752,
											"end": 769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 752,
											"end": 769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 752,
											"end": 769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 854,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 878,
											"end": 888,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 890,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 890,
											"end": 900,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 901,
											"end": 902,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 890,
											"end": 900,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 890,
											"end": 900,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 890,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 890,
											"end": 904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 890,
											"end": 904,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 890,
											"end": 904,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 854,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 854,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 854,
											"end": 905,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 854,
											"end": 905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 847,
											"end": 905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 648,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 404,
											"end": 617,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 404,
											"end": 617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 502,
											"end": 606,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 606,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12792,
											"end": 12858,
											"name": "PUSH",
											"source": 22,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 606,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 502,
											"end": 606,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12780,
											"end": 12859,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 463,
											"end": 470,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "PUSH",
											"source": 22,
											"value": "22"
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 12946,
											"end": 13012,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 576,
											"end": 580,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 12933,
											"end": 12935,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 12929,
											"end": 12944,
											"name": "SHL",
											"source": 22
										},
										{
											"begin": 12925,
											"end": 13013,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 12911,
											"end": 12923,
											"name": "PUSH",
											"source": 22,
											"value": "42"
										},
										{
											"begin": 12911,
											"end": 12923,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 12911,
											"end": 12923,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12904,
											"end": 13014,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13030,
											"end": 13042,
											"name": "PUSH",
											"source": 22,
											"value": "56"
										},
										{
											"begin": 13030,
											"end": 13042,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13030,
											"end": 13042,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13023,
											"end": 13051,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13023,
											"end": 13051,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13023,
											"end": 13051,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 463,
											"end": 470,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13067,
											"end": 13079,
											"name": "PUSH",
											"source": 22,
											"value": "76"
										},
										{
											"begin": 13067,
											"end": 13079,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 502,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 12494,
											"end": 13085,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3316,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 19,
											"value": "E8"
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2768,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2784,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2768,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2750,
											"end": 2784,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2883,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 2750,
											"end": 2784,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2934,
											"end": 2940,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2923,
											"end": 2933,
											"name": "DUP14",
											"source": 14
										},
										{
											"begin": 2923,
											"end": 2933,
											"name": "DUP16",
											"source": 14
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2923,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2883,
											"end": 2955,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2883,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP12",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP10",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2791,
											"end": 2955,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2962,
											"end": 3080,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2962,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2962,
											"end": 3080,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "DUP14",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 3027,
											"end": 3053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3053,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 3027,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "PUSH",
											"source": 14,
											"value": "B006ABA000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 3001,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2962,
											"end": 3080,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2962,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3102,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3290,
											"end": 3316,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3290,
											"end": 3316,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3290,
											"end": 3316,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3316,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 19,
											"value": "E8"
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 3444,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 3714,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 3714,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3748,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3714,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3768,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3768,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 3758,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3687,
											"end": 3792,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 3687,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP13",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP11",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3829,
											"end": 3951,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3829,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 3829,
											"end": 3951,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 3914,
											"end": 3921,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3907,
											"end": 3913,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3906,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3906,
											"name": "DUP15",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 3896,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "B006ABA000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 3870,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3829,
											"end": 3951,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 3829,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4216,
											"end": 4226,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4198,
											"end": 4212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4198,
											"end": 4226,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 4194,
											"end": 4309,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "PUSH",
											"source": 14,
											"value": "37DAF62B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16227,
											"end": 16261,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 16227,
											"end": 16261,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 16227,
											"end": 16261,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "PUSH",
											"source": 22,
											"value": "44"
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4245,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 16019,
											"end": 16267,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4194,
											"end": 4309,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 4194,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4330,
											"end": 4344,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4368,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4368,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3283,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 4379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 4379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 4379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 4379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 490,
											"end": 677,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 490,
											"end": 677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 626,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 628,
											"end": 635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 16249,
											"end": 16251,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16227,
											"end": 16261,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 16181,
											"end": 16183,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 16019,
											"end": 16267,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 611,
											"end": 636,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 661,
											"end": 671,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 661,
											"end": 671,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 490,
											"end": 677,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 490,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4140,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4140,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4226,
											"end": 4230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "E4A77BBC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4242,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4242,
											"end": 4288,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4242,
											"end": 4288,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4242,
											"end": 4288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4238,
											"end": 4316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4305,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4305,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4140,
											"end": 4371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4316,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4238,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4353,
											"end": 4365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4329,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 4329,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1878,
											"name": "tag",
											"source": 20,
											"value": "179"
										},
										{
											"begin": 1525,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1692,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1693,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1744,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1718,
											"end": 1730,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1838,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1816,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1799,
											"end": 1803,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 1786,
											"end": 1789,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 1758,
											"end": 1868,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 1753,
											"end": 1868,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 1525,
											"end": 1878,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1525,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 852,
											"end": 1123,
											"name": "tag",
											"source": 20,
											"value": "186"
										},
										{
											"begin": 852,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 897,
											"end": 911,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 982,
											"end": 986,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 987,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 971,
											"end": 987,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 971,
											"end": 987,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1007,
											"end": 1017,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1052,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1054,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1071,
											"end": 1075,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1061,
											"end": 1076,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1108,
											"end": 1112,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1083,
											"end": 1113,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 1083,
											"end": 1113,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1083,
											"end": 1113,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 852,
											"end": 1123,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 852,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3644,
											"end": 3930,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3644,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3926,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3777,
											"end": 3926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3816,
											"end": 3858,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3926,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3777,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "AB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3885,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3667,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1377,
											"end": 1416,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 3923,
											"end": 3943,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3923,
											"end": 3943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3919,
											"end": 4321,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 2193,
											"end": 2208,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2193,
											"end": 2208,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2193,
											"end": 2208,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2033,
											"end": 2072,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 2114,
											"end": 2127,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1922,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4235,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4290,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 4252,
											"end": 4283,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 4252,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4224,
											"end": 4290,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4224,
											"end": 4290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4302,
											"end": 4310,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4321,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3919,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4335,
											"end": 4339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4331,
											"end": 5010,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1377,
											"end": 1416,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4560,
											"end": 4571,
											"name": "PUSH",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4560,
											"end": 4571,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 4631,
											"end": 4641,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4560,
											"end": 4571,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4643,
											"end": 4653,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "DUP15",
											"source": 19
										},
										{
											"begin": 4643,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 4643,
											"end": 4669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4669,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4643,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4598,
											"end": 4670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4670,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 4598,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4698,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4691,
											"end": 4698,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1922,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4920,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 4920,
											"end": 4979,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4975,
											"end": 4979,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4920,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 4920,
											"end": 4979,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4920,
											"end": 4979,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 4920,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4913,
											"end": 4979,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4913,
											"end": 4979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4991,
											"end": 4999,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4331,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5024,
											"end": 5028,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5054,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5020,
											"end": 5952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5120,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2033,
											"end": 2072,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 2114,
											"end": 2127,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 2193,
											"end": 2208,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2193,
											"end": 2208,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5146,
											"end": 5210,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5146,
											"end": 5210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5146,
											"end": 5210,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5146,
											"end": 5210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3316,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 19,
											"value": "E8"
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5428,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5464,
											"end": 5474,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5492,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5492,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5507,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5482,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5428,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 5428,
											"end": 5509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5428,
											"end": 5509,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5428,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 5423,
											"end": 5613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5555,
											"end": 5565,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5567,
											"end": 5571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 5591,
											"end": 5598,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5590,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5583,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5583,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5573,
											"end": 5599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5599,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 5573,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "PUSH",
											"source": 13,
											"value": "9A94623200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 5532,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5613,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 5423,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5726,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 1922,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5866,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5862,
											"end": 5921,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5921,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5862,
											"end": 5921,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5921,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5862,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 5883,
											"end": 5914,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5883,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5921,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5933,
											"end": 5941,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5952,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5020,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 667,
											"end": 668,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5966,
											"end": 5970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 5983,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5962,
											"end": 6205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4487,
											"end": 4514,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4487,
											"end": 4514,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4474,
											"end": 4515,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 6115,
											"end": 6174,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6170,
											"end": 6174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 6115,
											"end": 6174,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6174,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 6115,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 6136,
											"end": 6167,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 6136,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6108,
											"end": 6174,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6108,
											"end": 6174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6205,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5962,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 711,
											"end": 712,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 6215,
											"end": 6687,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3316,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 19,
											"value": "E8"
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6409,
											"end": 6422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6409,
											"end": 6422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6409,
											"end": 6422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6409,
											"end": 6422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6309,
											"end": 6321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6321,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6494,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6508,
											"end": 6518,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 6409,
											"end": 6422,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6520,
											"end": 6530,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP16",
											"source": 19
										},
										{
											"begin": 6520,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 6520,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6494,
											"end": 6547,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6494,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6668,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 6668,
											"end": 6676,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6668,
											"end": 6676,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6687,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 6215,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 6720,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6697,
											"end": 7676,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6886,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1415,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1377,
											"end": 1416,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6898,
											"end": 6953,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6898,
											"end": 6953,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6898,
											"end": 6953,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6966,
											"end": 6991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2724,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2699,
											"end": 2724,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2699,
											"end": 2724,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2748,
											"name": "PUSH",
											"source": 19,
											"value": "F0"
										},
										{
											"begin": 2741,
											"end": 2755,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7003,
											"end": 7062,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7062,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 7003,
											"end": 7062,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7075,
											"end": 7087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3316,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 19,
											"value": "E8"
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7181,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7157,
											"end": 7188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7157,
											"end": 7188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7201,
											"end": 7223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 7304,
											"end": 7314,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7326,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7326,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7334,
											"end": 7341,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 7316,
											"end": 7342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7343,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7257,
											"end": 7343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7388,
											"end": 7423,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7388,
											"end": 7423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7388,
											"end": 7423,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 7384,
											"end": 7476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7463,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7463,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7463,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7463,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7476,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 7384,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20362,
											"end": 20428,
											"name": "PUSH",
											"source": 22,
											"value": "53657175656E6365206E657374656420636F6E6669673A0A0000000000000000"
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20350,
											"end": 20429,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 20350,
											"end": 20429,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20350,
											"end": 20429,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 20350,
											"end": 20429,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20445,
											"end": 20457,
											"name": "PUSH",
											"source": 22,
											"value": "38"
										},
										{
											"begin": 20445,
											"end": 20457,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20445,
											"end": 20457,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 20438,
											"end": 20466,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 20438,
											"end": 20466,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20438,
											"end": 20466,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20482,
											"end": 20494,
											"name": "PUSH",
											"source": 22,
											"value": "58"
										},
										{
											"begin": 20482,
											"end": 20494,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20482,
											"end": 20494,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 20475,
											"end": 20503,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 20475,
											"end": 20503,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20475,
											"end": 20503,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20519,
											"end": 20531,
											"name": "PUSH",
											"source": 22,
											"value": "78"
										},
										{
											"begin": 20519,
											"end": 20531,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 20519,
											"end": 20531,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 20519,
											"end": 20531,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 20512,
											"end": 20540,
											"name": "DUP11",
											"source": 22
										},
										{
											"begin": 20512,
											"end": 20540,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20512,
											"end": 20540,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20556,
											"end": 20569,
											"name": "PUSH",
											"source": 22,
											"value": "98"
										},
										{
											"begin": 20556,
											"end": 20569,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20556,
											"end": 20569,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 20556,
											"end": 20569,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3050,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3050,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3050,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7589,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7585,
											"end": 7644,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7585,
											"end": 7644,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7644,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7585,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 7606,
											"end": 7637,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7606,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7644,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 7676,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6697,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7690,
											"end": 7694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7712,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7686,
											"end": 8171,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4487,
											"end": 4514,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4487,
											"end": 4514,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4474,
											"end": 4515,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7920,
											"end": 7943,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7943,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7916,
											"end": 7998,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7968,
											"end": 7985,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7959,
											"end": 7985,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 7985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 7998,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7916,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 8052,
											"end": 8061,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8025,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 8025,
											"end": 8062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8025,
											"end": 8062,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 8025,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8085,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8081,
											"end": 8140,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8136,
											"end": 8140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8081,
											"end": 8140,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8140,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8081,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 8102,
											"end": 8133,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8102,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8140,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8140,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8152,
											"end": 8160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8152,
											"end": 8160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8152,
											"end": 8160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8152,
											"end": 8160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 8152,
											"end": 8160,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 8171,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7686,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "PUSH",
											"source": 13,
											"value": "B2505F7C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2778,
											"end": 2803,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2632,
											"end": 2809,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 3765,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 8229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 8233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1296,
											"end": 1456,
											"name": "tag",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 1296,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 862,
											"end": 906,
											"name": "PUSH",
											"source": 14,
											"value": "8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1"
										},
										{
											"begin": 1372,
											"end": 1379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 669,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 656,
											"end": 669,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 718,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 702,
											"end": 718,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1394,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 543,
											"end": 728,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6015,
											"end": 6315,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6015,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6169,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6124,
											"end": 6169,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6124,
											"end": 6169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6140,
											"end": 6169,
											"name": "PUSH",
											"source": 2,
											"value": "AC6A444E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6124,
											"end": 6169,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6124,
											"end": 6169,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6124,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6124,
											"end": 6227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6227,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6179,
											"end": 6227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "PUSH",
											"source": 2,
											"value": "36E7817500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6179,
											"end": 6227,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6124,
											"end": 6227,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6124,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6113,
											"end": 6260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6015,
											"end": 6315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6260,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6113,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 709,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 709,
											"end": 756,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 709,
											"end": 756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 709,
											"end": 756,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 613,
											"end": 761,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "tag",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1867,
											"end": 1881,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 1893,
											"end": 1916,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1893,
											"end": 1916,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1889,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 1889,
											"end": 1959,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "PUSH",
											"source": 21,
											"value": "2EE17A3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "333"
										},
										{
											"begin": 1925,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1889,
											"end": 1959,
											"name": "tag",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 1889,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1965,
											"end": 1986,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 2010,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "tag",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1266,
											"end": 1269,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1071,
											"end": 1286,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 2032,
											"name": "tag",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 1989,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1965,
											"end": 2032,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 1965,
											"end": 2032,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1965,
											"end": 2032,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1266,
											"end": 1269,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 795,
											"end": 832,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 795,
											"end": 832,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2202,
											"end": 2204,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 831,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 808,
											"end": 831,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 795,
											"end": 832,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3209,
											"end": 3275,
											"name": "PUSH",
											"source": 21,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3192,
											"end": 3327,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3192,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 3192,
											"end": 3327,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3316,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3316,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "PUSH",
											"source": 21,
											"value": "AD4AAC7600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3292,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 3292,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3192,
											"end": 3327,
											"name": "tag",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 3192,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "PUSH",
											"source": 21,
											"value": "1B"
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "PUSH",
											"source": 21,
											"value": "1C"
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "tag",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3333,
											"end": 3407,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3333,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 3333,
											"end": 3407,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3386,
											"end": 3396,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3386,
											"end": 3396,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "PUSH",
											"source": 21,
											"value": "E578897E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3372,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "348"
										},
										{
											"begin": 3372,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3333,
											"end": 3407,
											"name": "tag",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 3333,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3447,
											"end": 3460,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3443,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "349"
										},
										{
											"begin": 3443,
											"end": 3952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18522,
											"end": 18547,
											"name": "DUP11",
											"source": 22
										},
										{
											"begin": 18522,
											"end": 18547,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18522,
											"end": 18547,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18595,
											"end": 18599,
											"name": "PUSH",
											"source": 22,
											"value": "FF"
										},
										{
											"begin": 18583,
											"end": 18600,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 18583,
											"end": 18600,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18556,
											"end": 18601,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18556,
											"end": 18601,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18556,
											"end": 18601,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18556,
											"end": 18601,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18617,
											"end": 18635,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 18617,
											"end": 18635,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18617,
											"end": 18635,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18610,
											"end": 18644,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 18610,
											"end": 18644,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18610,
											"end": 18644,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18660,
											"end": 18678,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 18660,
											"end": 18678,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18660,
											"end": 18678,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18653,
											"end": 18687,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18653,
											"end": 18687,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18653,
											"end": 18687,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18494,
											"end": 18513,
											"name": "PUSH",
											"source": 22,
											"value": "A0"
										},
										{
											"begin": 18494,
											"end": 18513,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "tag",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "STATICCALL",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "tag",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3489,
											"end": 3523,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3489,
											"end": 3523,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3443,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "361"
										},
										{
											"begin": 3443,
											"end": 3952,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3443,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "349"
										},
										{
											"begin": 3443,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 3608,
											"end": 3621,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3608,
											"end": 3642,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3604,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 3604,
											"end": 3952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18940,
											"end": 19006,
											"name": "PUSH",
											"source": 22,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18928,
											"end": 19007,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 19023,
											"end": 19035,
											"name": "PUSH",
											"source": 22,
											"value": "3C"
										},
										{
											"begin": 19023,
											"end": 19035,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19023,
											"end": 19035,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19016,
											"end": 19044,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 19016,
											"end": 19044,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19016,
											"end": 19044,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19060,
											"end": 19072,
											"name": "PUSH",
											"source": 22,
											"value": "5C"
										},
										{
											"begin": 19060,
											"end": 19072,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3680,
											"end": 3750,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3680,
											"end": 3750,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3690,
											"end": 3749,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3750,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3680,
											"end": 3750,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3680,
											"end": 3750,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3680,
											"end": 3750,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18522,
											"end": 18547,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18595,
											"end": 18599,
											"name": "PUSH",
											"source": 22,
											"value": "FF"
										},
										{
											"begin": 18583,
											"end": 18600,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 18583,
											"end": 18600,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18556,
											"end": 18601,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18617,
											"end": 18635,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 18617,
											"end": 18635,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18617,
											"end": 18635,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18610,
											"end": 18644,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 18610,
											"end": 18644,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18610,
											"end": 18644,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18660,
											"end": 18678,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 18660,
											"end": 18678,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18660,
											"end": 18678,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18653,
											"end": 18687,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 18653,
											"end": 18687,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18653,
											"end": 18687,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18494,
											"end": 18513,
											"name": "PUSH",
											"source": 22,
											"value": "A0"
										},
										{
											"begin": 18494,
											"end": 18513,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3661,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 18295,
											"end": 18693,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3604,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 3604,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3913,
											"end": 3923,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3913,
											"end": 3923,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3925,
											"end": 3938,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "PUSH",
											"source": 21,
											"value": "9DFBA85200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3888,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 3888,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3604,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "361"
										},
										{
											"begin": 3604,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3999,
											"end": 4021,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4021,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3999,
											"end": 4021,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4057,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4057,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "PUSH",
											"source": 21,
											"value": "6C1719D200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "333"
										},
										{
											"begin": 4030,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "tag",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4065,
											"end": 4078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4065,
											"end": 4078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4065,
											"end": 4078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4065,
											"end": 4078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 4083,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 4083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "tag",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "367"
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 21,
											"value": "AC241E1100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "tag",
											"source": 21,
											"value": "367"
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 4646,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4666,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 4686,
											"end": 4687,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4666,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 4666,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4666,
											"end": 4687,
											"name": "tag",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 4666,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "113"
										},
										{
											"begin": 4655,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "tag",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "PUSH",
											"source": 21,
											"value": "F8"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 4699,
											"end": 4731,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4699,
											"end": 4731,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 4699,
											"end": 4731,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4699,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 4699,
											"end": 4769,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4699,
											"end": 4769,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4748,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4735,
											"end": 4769,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 4699,
											"end": 4769,
											"name": "tag",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 4699,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "372"
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4837,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "373"
										},
										{
											"begin": 4851,
											"end": 4856,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4837,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 4837,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4837,
											"end": 4869,
											"name": "tag",
											"source": 21,
											"value": "373"
										},
										{
											"begin": 4837,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 4829,
											"end": 4880,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4829,
											"end": 4880,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "384"
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "tag",
											"source": 21,
											"value": "372"
										},
										{
											"begin": 4695,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 4898,
											"end": 4911,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4898,
											"end": 4938,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5100,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5060,
											"end": 5100,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5100,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5100,
											"name": "PUSH",
											"source": 21,
											"value": "1626BA7E"
										},
										{
											"begin": 5101,
											"end": 5106,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5118,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5118,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "376"
										},
										{
											"begin": 5141,
											"end": 5142,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 5108,
											"end": 5118,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 5121,
											"end": 5142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5142,
											"name": "tag",
											"source": 21,
											"value": "376"
										},
										{
											"begin": 5121,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "193"
										},
										{
											"begin": 5108,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "tag",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 5108,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "378"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "379"
										},
										{
											"begin": 5060,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "tag",
											"source": 21,
											"value": "378"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "STATICCALL",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "tag",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "382"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "383"
										},
										{
											"begin": 5060,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "tag",
											"source": 21,
											"value": "382"
										},
										{
											"begin": 5060,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5030,
											"end": 5144,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5030,
											"end": 5144,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5030,
											"end": 5056,
											"name": "PUSH",
											"source": 21,
											"value": "1626BA7E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5030,
											"end": 5144,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 5030,
											"end": 5144,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "384"
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "tag",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5318,
											"end": 5328,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5318,
											"end": 5328,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5330,
											"end": 5343,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "PUSH",
											"source": 21,
											"value": "9DFBA85200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 5293,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "tag",
											"source": 21,
											"value": "384"
										},
										{
											"begin": 4894,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4547,
											"end": 5362,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 5362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2227,
											"end": 2409,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2227,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2403,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2403,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20822,
											"end": 20888,
											"name": "PUSH",
											"source": 22,
											"value": "53657175656E636520737461746963206469676573743A0A0000000000000000"
										},
										{
											"begin": 2346,
											"end": 2403,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2403,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20810,
											"end": 20889,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20905,
											"end": 20917,
											"name": "PUSH",
											"source": 22,
											"value": "38"
										},
										{
											"begin": 20905,
											"end": 20917,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 20905,
											"end": 20917,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 20898,
											"end": 20926,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20898,
											"end": 20926,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20898,
											"end": 20926,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20942,
											"end": 20954,
											"name": "PUSH",
											"source": 22,
											"value": "58"
										},
										{
											"begin": 20942,
											"end": 20954,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2346,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 20580,
											"end": 20960,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 22,
											"value": "397"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 99,
											"end": 165,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "96"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 22,
											"value": "19"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "411"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 22,
											"value": "411"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "82"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "397"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"name": "tag",
											"source": 22,
											"value": "398"
										},
										{
											"begin": 638,
											"end": 985,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 689,
											"end": 697,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 705,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 753,
											"end": 756,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 738,
											"end": 744,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 730,
											"end": 757,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 720,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "415"
										},
										{
											"begin": 720,
											"end": 775,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 761,
											"end": 773,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 720,
											"end": 775,
											"name": "tag",
											"source": 22,
											"value": "415"
										},
										{
											"begin": 720,
											"end": 775,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 814,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 794,
											"end": 814,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 837,
											"end": 855,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 826,
											"end": 856,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 823,
											"end": 873,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 823,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "416"
										},
										{
											"begin": 823,
											"end": 873,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 823,
											"end": 873,
											"name": "tag",
											"source": 22,
											"value": "416"
										},
										{
											"begin": 823,
											"end": 873,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 906,
											"end": 910,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 882,
											"end": 911,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 882,
											"end": 911,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 958,
											"end": 961,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 934,
											"end": 940,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 930,
											"end": 949,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 926,
											"end": 956,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 923,
											"end": 962,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 920,
											"end": 979,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 920,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "417"
										},
										{
											"begin": 920,
											"end": 979,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 975,
											"end": 976,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 965,
											"end": 977,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 920,
											"end": 979,
											"name": "tag",
											"source": 22,
											"value": "417"
										},
										{
											"begin": 920,
											"end": 979,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 638,
											"end": 985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 990,
											"end": 1467,
											"name": "tag",
											"source": 22,
											"value": "26"
										},
										{
											"begin": 990,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "419"
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "tag",
											"source": 22,
											"value": "419"
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1190,
											"end": 1199,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1177,
											"end": 1200,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1251,
											"end": 1253,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1236,
											"end": 1254,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1223,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1267,
											"end": 1297,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 1264,
											"end": 1314,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1264,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "420"
										},
										{
											"begin": 1264,
											"end": 1314,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1264,
											"end": 1314,
											"name": "tag",
											"source": 22,
											"value": "420"
										},
										{
											"begin": 1264,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1349,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "421"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 1375,
											"end": 1397,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1349,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "398"
										},
										{
											"begin": 1349,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1349,
											"end": 1407,
											"name": "tag",
											"source": 22,
											"value": "421"
										},
										{
											"begin": 1349,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 990,
											"end": 1467,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 990,
											"end": 1467,
											"name": "SWAP8",
											"source": 22
										},
										{
											"begin": 1426,
											"end": 1434,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1426,
											"end": 1434,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1407,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 1323,
											"end": 1407,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 990,
											"end": 1467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1725,
											"end": 2442,
											"name": "tag",
											"source": 22,
											"value": "33"
										},
										{
											"begin": 1725,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1815,
											"end": 1821,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 1867,
											"end": 1890,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 1863,
											"end": 1895,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "424"
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1898,
											"end": 1910,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "tag",
											"source": 22,
											"value": "424"
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1935,
											"end": 1958,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2018,
											"end": 2020,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2007,
											"end": 2021,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "425"
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "tag",
											"source": 22,
											"value": "425"
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2073,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "426"
										},
										{
											"begin": 2123,
											"end": 2130,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2073,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "398"
										},
										{
											"begin": 2073,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2073,
											"end": 2131,
											"name": "tag",
											"source": 22,
											"value": "426"
										},
										{
											"begin": 2073,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2150,
											"end": 2158,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2150,
											"end": 2158,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2131,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2210,
											"end": 2242,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 2210,
											"end": 2242,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2254,
											"end": 2270,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2254,
											"end": 2270,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2254,
											"end": 2270,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "427"
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2273,
											"end": 2285,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "tag",
											"source": 22,
											"value": "427"
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2322,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "428"
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 2363,
											"end": 2371,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2352,
											"end": 2361,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 2348,
											"end": 2372,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2322,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "398"
										},
										{
											"begin": 2322,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2322,
											"end": 2382,
											"name": "tag",
											"source": 22,
											"value": "428"
										},
										{
											"begin": 2322,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1725,
											"end": 2442,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 1725,
											"end": 2442,
											"name": "SWAP9",
											"source": 22
										},
										{
											"begin": 1725,
											"end": 2442,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 1725,
											"end": 2442,
											"name": "SWAP8",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2409,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1725,
											"end": 2442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2447,
											"end": 2627,
											"name": "tag",
											"source": 22,
											"value": "39"
										},
										{
											"begin": 2447,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2506,
											"end": 2512,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2556,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2538,
											"end": 2545,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 2534,
											"end": 2557,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 2527,
											"end": 2579,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 2527,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "430"
										},
										{
											"begin": 2527,
											"end": 2579,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 2575,
											"end": 2576,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 2527,
											"end": 2579,
											"name": "tag",
											"source": 22,
											"value": "430"
										},
										{
											"begin": 2527,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2447,
											"end": 2627,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2814,
											"end": 3201,
											"name": "tag",
											"source": 22,
											"value": "399"
										},
										{
											"begin": 2814,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2897,
											"end": 2905,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 2942,
											"end": 2959,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2938,
											"end": 2965,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 2928,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "433"
										},
										{
											"begin": 2928,
											"end": 2983,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2969,
											"end": 2981,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 2928,
											"end": 2983,
											"name": "tag",
											"source": 22,
											"value": "433"
										},
										{
											"begin": 2928,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3022,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 3002,
											"end": 3022,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3064,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 3034,
											"end": 3064,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 3031,
											"end": 3081,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 3031,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "434"
										},
										{
											"begin": 3031,
											"end": 3081,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 3031,
											"end": 3081,
											"name": "tag",
											"source": 22,
											"value": "434"
										},
										{
											"begin": 3031,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 3102,
											"end": 3119,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3090,
											"end": 3119,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 3090,
											"end": 3119,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3174,
											"end": 3177,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 3167,
											"end": 3171,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 22,
											"value": "5"
										},
										{
											"begin": 3150,
											"end": 3164,
											"name": "SHL",
											"source": 22
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 3138,
											"end": 3165,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3131,
											"end": 3178,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 3128,
											"end": 3195,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 3128,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "417"
										},
										{
											"begin": 3128,
											"end": 3195,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3189,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 3206,
											"end": 3694,
											"name": "tag",
											"source": 22,
											"value": "49"
										},
										{
											"begin": 3206,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 3363,
											"end": 3370,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 3359,
											"end": 3382,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "437"
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3398,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3390,
											"end": 3402,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "tag",
											"source": 22,
											"value": "437"
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3440,
											"end": 3449,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3427,
											"end": 3450,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 3459,
											"end": 3509,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 3459,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "438"
										},
										{
											"begin": 3459,
											"end": 3509,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 3505,
											"end": 3506,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3503,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3495,
											"end": 3507,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 3459,
											"end": 3509,
											"name": "tag",
											"source": 22,
											"value": "438"
										},
										{
											"begin": 3459,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3544,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "439"
										},
										{
											"begin": 3626,
											"end": 3633,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3606,
											"end": 3615,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3544,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "399"
										},
										{
											"begin": 3544,
											"end": 3634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3544,
											"end": 3634,
											"name": "tag",
											"source": 22,
											"value": "439"
										},
										{
											"begin": 3544,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3653,
											"end": 3661,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3653,
											"end": 3661,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": 3518,
											"end": 3634,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3518,
											"end": 3634,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3694,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "tag",
											"source": 22,
											"value": "54"
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3875,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 3909,
											"end": 3916,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 3905,
											"end": 3928,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 3901,
											"end": 3933,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 3898,
											"end": 3950,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 3898,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "441"
										},
										{
											"begin": 3898,
											"end": 3950,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 3946,
											"end": 3947,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 3898,
											"end": 3950,
											"name": "tag",
											"source": 22,
											"value": "441"
										},
										{
											"begin": 3898,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 4015,
											"end": 4033,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4045,
											"end": 4059,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 4042,
											"end": 4076,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 4042,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "442"
										},
										{
											"begin": 4042,
											"end": 4076,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 4072,
											"end": 4073,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 4062,
											"end": 4074,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 4042,
											"end": 4076,
											"name": "tag",
											"source": 22,
											"value": "442"
										},
										{
											"begin": 4042,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4111,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "443"
										},
										{
											"begin": 4193,
											"end": 4200,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP11",
											"source": 22
										},
										{
											"begin": 4169,
											"end": 4191,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4111,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "399"
										},
										{
											"begin": 4111,
											"end": 4201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4111,
											"end": 4201,
											"name": "tag",
											"source": 22,
											"value": "443"
										},
										{
											"begin": 4111,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4220,
											"end": 4228,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 4220,
											"end": 4228,
											"name": "SWAP8",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4085,
											"end": 4201,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4304,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4274,
											"end": 4306,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 4274,
											"end": 4306,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4331,
											"end": 4363,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 4331,
											"end": 4363,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "444"
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 4404,
											"end": 4405,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "tag",
											"source": 22,
											"value": "444"
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4443,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "445"
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 4484,
											"end": 4492,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 4469,
											"end": 4493,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4443,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "398"
										},
										{
											"begin": 4443,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4443,
											"end": 4503,
											"name": "tag",
											"source": 22,
											"value": "445"
										},
										{
											"begin": 4443,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP10",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP9",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4522,
											"end": 4530,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 4522,
											"end": 4530,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 4417,
											"end": 4503,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 3699,
											"end": 4563,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3699,
											"end": 4563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5403,
											"end": 5587,
											"name": "tag",
											"source": 22,
											"value": "400"
										},
										{
											"begin": 5403,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5455,
											"end": 5532,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5452,
											"end": 5453,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5533,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 5552,
											"end": 5556,
											"name": "PUSH",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 5549,
											"end": 5550,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 5542,
											"end": 5557,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 5576,
											"end": 5580,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 5592,
											"end": 6572,
											"name": "tag",
											"source": 22,
											"value": "71"
										},
										{
											"begin": 5592,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5660,
											"end": 5666,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 5701,
											"end": 5710,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 5692,
											"end": 5699,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 5688,
											"end": 5711,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 5684,
											"end": 5716,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 5681,
											"end": 5733,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 5681,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "452"
										},
										{
											"begin": 5681,
											"end": 5733,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 5719,
											"end": 5731,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 5681,
											"end": 5733,
											"name": "tag",
											"source": 22,
											"value": "452"
										},
										{
											"begin": 5681,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5769,
											"end": 5778,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 5798,
											"end": 5816,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5839,
											"end": 5841,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 5828,
											"end": 5842,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 5825,
											"end": 5859,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 5825,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "453"
										},
										{
											"begin": 5825,
											"end": 5859,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5853,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 5825,
											"end": 5859,
											"name": "tag",
											"source": 22,
											"value": "453"
										},
										{
											"begin": 5825,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5893,
											"end": 5899,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 5878,
											"end": 5900,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5868,
											"end": 5900,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 5868,
											"end": 5900,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5938,
											"end": 5945,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 5931,
											"end": 5935,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 5923,
											"end": 5936,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5919,
											"end": 5946,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 5909,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "454"
										},
										{
											"begin": 5909,
											"end": 5964,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 5958,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 5950,
											"end": 5962,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 5909,
											"end": 5964,
											"name": "tag",
											"source": 22,
											"value": "454"
										},
										{
											"begin": 5909,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6011,
											"end": 6021,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 6008,
											"end": 6044,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 6008,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "456"
										},
										{
											"begin": 6008,
											"end": 6044,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 6024,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "456"
										},
										{
											"begin": 6024,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "400"
										},
										{
											"begin": 6024,
											"end": 6042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6024,
											"end": 6042,
											"name": "tag",
											"source": 22,
											"value": "456"
										},
										{
											"begin": 6024,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 6220,
											"end": 6224,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 6212,
											"end": 6225,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6212,
											"end": 6225,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6063,
											"end": 6129,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "PUSH",
											"source": 22,
											"value": "3F"
										},
										{
											"begin": 6204,
											"end": 6235,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 6188,
											"end": 6241,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6188,
											"end": 6241,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6188,
											"end": 6241,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 6276,
											"end": 6298,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6276,
											"end": 6298,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 6276,
											"end": 6298,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 6253,
											"end": 6299,
											"name": "OR",
											"source": 22
										},
										{
											"begin": 6250,
											"end": 6322,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 6250,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "458"
										},
										{
											"begin": 6250,
											"end": 6322,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "458"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "400"
										},
										{
											"begin": 6302,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "tag",
											"source": 22,
											"value": "458"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6342,
											"end": 6352,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 6331,
											"end": 6353,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 6377,
											"end": 6379,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6369,
											"end": 6375,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 6417,
											"end": 6424,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 6412,
											"end": 6414,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 6399,
											"end": 6410,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6395,
											"end": 6415,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6392,
											"end": 6425,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 6389,
											"end": 6442,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 6389,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "459"
										},
										{
											"begin": 6389,
											"end": 6442,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 6438,
											"end": 6439,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 6428,
											"end": 6440,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 6389,
											"end": 6442,
											"name": "tag",
											"source": 22,
											"value": "459"
										},
										{
											"begin": 6389,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6489,
											"end": 6491,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6485,
											"end": 6487,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 6481,
											"end": 6492,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6476,
											"end": 6478,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 6464,
											"end": 6479,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6451,
											"end": 6497,
											"name": "CALLDATACOPY",
											"source": 22
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6532,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6517,
											"end": 6532,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6517,
											"end": 6532,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6534,
											"end": 6536,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6506,
											"end": 6541,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6506,
											"end": 6541,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 6506,
											"end": 6541,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6506,
											"end": 6541,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 5592,
											"end": 6572,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5592,
											"end": 6572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6808,
											"end": 7079,
											"name": "tag",
											"source": 22,
											"value": "89"
										},
										{
											"begin": 6808,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6983,
											"end": 6989,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 6978,
											"end": 6981,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6965,
											"end": 6998,
											"name": "CALLDATACOPY",
											"source": 22
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7033,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 7017,
											"end": 7033,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7017,
											"end": 7033,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 6808,
											"end": 7079,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6808,
											"end": 7079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7416,
											"end": 7576,
											"name": "tag",
											"source": 22,
											"value": "401"
										},
										{
											"begin": 7416,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7481,
											"end": 7501,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7481,
											"end": 7501,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 7537,
											"end": 7550,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7537,
											"end": 7550,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 7530,
											"end": 7551,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 7520,
											"end": 7552,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7520,
											"end": 7552,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 7510,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "464"
										},
										{
											"begin": 7510,
											"end": 7570,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7556,
											"end": 7568,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 7510,
											"end": 7570,
											"name": "tag",
											"source": 22,
											"value": "464"
										},
										{
											"begin": 7510,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7416,
											"end": 7576,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 7416,
											"end": 7576,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 7416,
											"end": 7576,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7416,
											"end": 7576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7581,
											"end": 7777,
											"name": "tag",
											"source": 22,
											"value": "402"
										},
										{
											"begin": 7581,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7649,
											"end": 7669,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7649,
											"end": 7669,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 7709,
											"end": 7751,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7698,
											"end": 7752,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7698,
											"end": 7752,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 7688,
											"end": 7753,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7688,
											"end": 7753,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 7678,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "464"
										},
										{
											"begin": 7678,
											"end": 7771,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 7767,
											"end": 7768,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7757,
											"end": 7769,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 7782,
											"end": 8107,
											"name": "tag",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 7782,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7865,
											"end": 7868,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 7858,
											"end": 7877,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7915,
											"end": 7920,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7886,
											"end": 7929,
											"name": "CALLDATACOPY",
											"source": 22
										},
										{
											"begin": 7886,
											"end": 7929,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7974,
											"end": 7975,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7971,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 7958,
											"end": 7964,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7953,
											"end": 7956,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7945,
											"end": 7972,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7938,
											"end": 7976,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7840,
											"end": 7843,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8100,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 8026,
											"end": 8092,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 8021,
											"end": 8023,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 8013,
											"end": 8019,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8009,
											"end": 8024,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8005,
											"end": 8093,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 8000,
											"end": 8003,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 7996,
											"end": 8094,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7992,
											"end": 8101,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7985,
											"end": 8101,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 7985,
											"end": 8101,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7782,
											"end": 8107,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 7782,
											"end": 8107,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 7782,
											"end": 8107,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7782,
											"end": 8107,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7782,
											"end": 8107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8112,
											"end": 10140,
											"name": "tag",
											"source": 22,
											"value": "404"
										},
										{
											"begin": 8112,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8227,
											"end": 8230,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 8220,
											"end": 8239,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 8202,
											"end": 8205,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 8290,
											"end": 8302,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8324,
											"end": 8335,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 8351,
											"end": 8362,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "PUSH",
											"source": 22,
											"value": "5"
										},
										{
											"begin": 8394,
											"end": 8408,
											"name": "SHL",
											"source": 22
										},
										{
											"begin": 8387,
											"end": 8392,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8432,
											"end": 8437,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8455,
											"end": 8456,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "tag",
											"source": 22,
											"value": "469"
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 8476,
											"end": 8477,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8473,
											"end": 8486,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "471"
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 8550,
											"end": 8555,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 8535,
											"end": 8538,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 8528,
											"end": 8557,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 8695,
											"end": 8761,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41"
										},
										{
											"begin": 8687,
											"end": 8692,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 8671,
											"end": 8685,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 8667,
											"end": 8693,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 8663,
											"end": 8762,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8639,
											"end": 8763,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 8629,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "472"
										},
										{
											"begin": 8629,
											"end": 8781,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 8767,
											"end": 8779,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 8629,
											"end": 8781,
											"name": "tag",
											"source": 22,
											"value": "472"
										},
										{
											"begin": 8629,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8809,
											"end": 8839,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 8809,
											"end": 8839,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8862,
											"end": 8866,
											"name": "PUSH",
											"source": 22,
											"value": "C0"
										},
										{
											"begin": 8906,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "473"
										},
										{
											"begin": 8809,
											"end": 8839,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8906,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "401"
										},
										{
											"begin": 8906,
											"end": 8930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8906,
											"end": 8930,
											"name": "tag",
											"source": 22,
											"value": "473"
										},
										{
											"begin": 8906,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8892,
											"end": 8932,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8886,
											"end": 8890,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 8879,
											"end": 8933,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 8982,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "474"
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9002,
											"end": 9009,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 8998,
											"end": 9014,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8982,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "401"
										},
										{
											"begin": 8982,
											"end": 9015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8982,
											"end": 9015,
											"name": "tag",
											"source": 22,
											"value": "474"
										},
										{
											"begin": 8982,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8975,
											"end": 9016,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8968,
											"end": 9017,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8953,
											"end": 8966,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 8953,
											"end": 8966,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 8953,
											"end": 8966,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8946,
											"end": 9018,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 9041,
											"end": 9045,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 9093,
											"end": 9109,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9093,
											"end": 9109,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 9093,
											"end": 9109,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9080,
											"end": 9110,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 9065,
											"end": 9078,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 9065,
											"end": 9078,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9065,
											"end": 9078,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9058,
											"end": 9111,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 9134,
											"end": 9138,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 9215,
											"end": 9257,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9177,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "475"
										},
										{
											"begin": 9196,
											"end": 9212,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9196,
											"end": 9212,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 9196,
											"end": 9212,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9177,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "402"
										},
										{
											"begin": 9177,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9177,
											"end": 9213,
											"name": "tag",
											"source": 22,
											"value": "475"
										},
										{
											"begin": 9177,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9173,
											"end": 9258,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 9158,
											"end": 9171,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 9158,
											"end": 9171,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9158,
											"end": 9171,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9151,
											"end": 9259,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 9282,
											"end": 9286,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 9334,
											"end": 9350,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9334,
											"end": 9350,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 9334,
											"end": 9350,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9321,
											"end": 9351,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 9306,
											"end": 9319,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 9306,
											"end": 9319,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9306,
											"end": 9319,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9299,
											"end": 9352,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 22,
											"value": "A0"
										},
										{
											"begin": 9433,
											"end": 9449,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9433,
											"end": 9449,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 9433,
											"end": 9449,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9420,
											"end": 9450,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 9507,
											"end": 9521,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 9503,
											"end": 9531,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 9503,
											"end": 9531,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 9503,
											"end": 9531,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 9533,
											"end": 9599,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1"
										},
										{
											"begin": 9499,
											"end": 9600,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9473,
											"end": 9601,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 9473,
											"end": 9601,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 9463,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "476"
										},
										{
											"begin": 9463,
											"end": 9619,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 9615,
											"end": 9616,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9605,
											"end": 9617,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 9463,
											"end": 9619,
											"name": "tag",
											"source": 22,
											"value": "476"
										},
										{
											"begin": 9463,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9647,
											"end": 9681,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 9647,
											"end": 9681,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 9647,
											"end": 9681,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9759,
											"end": 9775,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9759,
											"end": 9775,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 9759,
											"end": 9775,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9759,
											"end": 9775,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 9804,
											"end": 9822,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9791,
											"end": 9823,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 9791,
											"end": 9823,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 9788,
											"end": 9840,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 9788,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "477"
										},
										{
											"begin": 9788,
											"end": 9840,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 9836,
											"end": 9837,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9833,
											"end": 9834,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9826,
											"end": 9838,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 9788,
											"end": 9840,
											"name": "tag",
											"source": 22,
											"value": "477"
										},
										{
											"begin": 9788,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9889,
											"end": 9897,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9873,
											"end": 9887,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 9869,
											"end": 9898,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 9860,
											"end": 9867,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 9856,
											"end": 9899,
											"name": "SGT",
											"source": 22
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "478"
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 9912,
											"end": 9913,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9909,
											"end": 9910,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9902,
											"end": 9914,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "tag",
											"source": 22,
											"value": "478"
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9951,
											"end": 9953,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9946,
											"end": 9948,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 9936,
											"end": 9949,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9929,
											"end": 9954,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 9975,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "479"
										},
										{
											"begin": 10030,
											"end": 10032,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 10024,
											"end": 10028,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 10020,
											"end": 10033,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10010,
											"end": 10018,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10001,
											"end": 10008,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 9975,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 9975,
											"end": 10034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9975,
											"end": 10034,
											"name": "tag",
											"source": 22,
											"value": "479"
										},
										{
											"begin": 9975,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10092,
											"end": 10104,
											"name": "SWAP13",
											"source": 22
										},
										{
											"begin": 10092,
											"end": 10104,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 10092,
											"end": 10104,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10092,
											"end": 10104,
											"name": "SWAP13",
											"source": 22
										},
										{
											"begin": 9967,
											"end": 10034,
											"name": "SWAP8",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10057,
											"end": 10072,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 10057,
											"end": 10072,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 10057,
											"end": 10072,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10057,
											"end": 10072,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8501,
											"end": 8502,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 8494,
											"end": 8503,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "469"
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "tag",
											"source": 22,
											"value": "471"
										},
										{
											"begin": 8465,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "SWAP8",
											"source": 22
										},
										{
											"begin": 8112,
											"end": 10140,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8112,
											"end": 10140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10145,
											"end": 10739,
											"name": "tag",
											"source": 22,
											"value": "101"
										},
										{
											"begin": 10145,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10495,
											"end": 10497,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 10484,
											"end": 10493,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 10477,
											"end": 10498,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "PUSH",
											"source": 22,
											"value": "5"
										},
										{
											"begin": 10529,
											"end": 10531,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10514,
											"end": 10532,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10507,
											"end": 10536,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 10572,
											"end": 10579,
											"name": "PUSH",
											"source": 22,
											"value": "73656C663A000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10545,
											"end": 10580,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 10618,
											"end": 10621,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 10611,
											"end": 10615,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 10600,
											"end": 10609,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10596,
											"end": 10616,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10589,
											"end": 10622,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 10458,
											"end": 10462,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 10639,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "86"
										},
										{
											"begin": 10728,
											"end": 10731,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 10717,
											"end": 10726,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 10639,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "404"
										},
										{
											"begin": 10639,
											"end": 10733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10744,
											"end": 11339,
											"name": "tag",
											"source": 22,
											"value": "108"
										},
										{
											"begin": 10744,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11094,
											"end": 11096,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 11083,
											"end": 11092,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 11076,
											"end": 11097,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11133,
											"end": 11134,
											"name": "PUSH",
											"source": 22,
											"value": "6"
										},
										{
											"begin": 11128,
											"end": 11130,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 11117,
											"end": 11126,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11113,
											"end": 11131,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11106,
											"end": 11135,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11171,
											"end": 11179,
											"name": "PUSH",
											"source": 22,
											"value": "67756573743A0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11166,
											"end": 11168,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 11155,
											"end": 11164,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11144,
											"end": 11180,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11218,
											"end": 11221,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 11211,
											"end": 11215,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 11200,
											"end": 11209,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11196,
											"end": 11216,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11189,
											"end": 11222,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11057,
											"end": 11061,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "86"
										},
										{
											"begin": 11328,
											"end": 11331,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 11317,
											"end": 11326,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 11313,
											"end": 11332,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11305,
											"end": 11311,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 11297,
											"end": 11303,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 11239,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "404"
										},
										{
											"begin": 11239,
											"end": 11333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11344,
											"end": 11528,
											"name": "tag",
											"source": 22,
											"value": "113"
										},
										{
											"begin": 11344,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11396,
											"end": 11473,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11393,
											"end": 11394,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11386,
											"end": 11474,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11493,
											"end": 11497,
											"name": "PUSH",
											"source": 22,
											"value": "32"
										},
										{
											"begin": 11490,
											"end": 11491,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 11483,
											"end": 11498,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11517,
											"end": 11521,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 11514,
											"end": 11515,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11522,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 11786,
											"end": 12267,
											"name": "tag",
											"source": 22,
											"value": "405"
										},
										{
											"begin": 11786,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11870,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 11859,
											"end": 11871,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 11892,
											"end": 11898,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 11887,
											"end": 11890,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 11880,
											"end": 11899,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11917,
											"end": 11918,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "tag",
											"source": 22,
											"value": "487"
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 11938,
											"end": 11939,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 11935,
											"end": 11948,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "489"
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 12003,
											"end": 12007,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12059,
											"end": 12072,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 12059,
											"end": 12072,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 12059,
											"end": 12072,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12055,
											"end": 12077,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 12055,
											"end": 12077,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12049,
											"end": 12078,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 12031,
											"end": 12042,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 12031,
											"end": 12042,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 12031,
											"end": 12042,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12027,
											"end": 12047,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12027,
											"end": 12047,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 11956,
											"end": 11968,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "487"
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "tag",
											"source": 22,
											"value": "489"
										},
										{
											"begin": 11927,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11931,
											"end": 11934,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12127,
											"end": 12131,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12124,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12113,
											"end": 12116,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 12109,
											"end": 12125,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12105,
											"end": 12132,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12098,
											"end": 12136,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 12256,
											"end": 12260,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12186,
											"end": 12252,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 12181,
											"end": 12183,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 12173,
											"end": 12179,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 12169,
											"end": 12184,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12165,
											"end": 12253,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 12160,
											"end": 12163,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 12156,
											"end": 12254,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12152,
											"end": 12261,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12145,
											"end": 12261,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 12145,
											"end": 12261,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12145,
											"end": 12261,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11786,
											"end": 12267,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 11786,
											"end": 12267,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 11786,
											"end": 12267,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11786,
											"end": 12267,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11786,
											"end": 12267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12272,
											"end": 12489,
											"name": "tag",
											"source": 22,
											"value": "140"
										},
										{
											"begin": 12272,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12419,
											"end": 12421,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12408,
											"end": 12417,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 12401,
											"end": 12422,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 12382,
											"end": 12386,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12439,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "82"
										},
										{
											"begin": 12479,
											"end": 12481,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12468,
											"end": 12477,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 12464,
											"end": 12482,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12456,
											"end": 12462,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 12439,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "405"
										},
										{
											"begin": 12439,
											"end": 12483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13090,
											"end": 13477,
											"name": "tag",
											"source": 22,
											"value": "164"
										},
										{
											"begin": 13090,
											"end": 13477,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13187,
											"end": 13191,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13245,
											"end": 13256,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13232,
											"end": 13257,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 13335,
											"end": 13401,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41"
										},
										{
											"begin": 13324,
											"end": 13332,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13308,
											"end": 13322,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 13304,
											"end": 13333,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 13300,
											"end": 13402,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 13276,
											"end": 13403,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 13266,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "494"
										},
										{
											"begin": 13266,
											"end": 13421,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13415,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 13407,
											"end": 13419,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 13266,
											"end": 13421,
											"name": "tag",
											"source": 22,
											"value": "494"
										},
										{
											"begin": 13266,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13438,
											"end": 13471,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 13438,
											"end": 13471,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13438,
											"end": 13471,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 13438,
											"end": 13471,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13438,
											"end": 13471,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 13090,
											"end": 13477,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13090,
											"end": 13477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13482,
											"end": 13662,
											"name": "tag",
											"source": 22,
											"value": "166"
										},
										{
											"begin": 13482,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13538,
											"end": 13544,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13591,
											"end": 13593,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 13579,
											"end": 13588,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13570,
											"end": 13577,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 13566,
											"end": 13589,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 13562,
											"end": 13594,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 13559,
											"end": 13611,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 13559,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "496"
										},
										{
											"begin": 13559,
											"end": 13611,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 13597,
											"end": 13609,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 13559,
											"end": 13611,
											"name": "tag",
											"source": 22,
											"value": "496"
										},
										{
											"begin": 13559,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "82"
										},
										{
											"begin": 13646,
											"end": 13655,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "401"
										},
										{
											"begin": 13630,
											"end": 13656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13991,
											"end": 14177,
											"name": "tag",
											"source": 22,
											"value": "174"
										},
										{
											"begin": 13991,
											"end": 14177,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14050,
											"end": 14056,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14103,
											"end": 14105,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 14091,
											"end": 14100,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14082,
											"end": 14089,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 14078,
											"end": 14101,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 14074,
											"end": 14106,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 14071,
											"end": 14123,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 14071,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "500"
										},
										{
											"begin": 14071,
											"end": 14123,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 14119,
											"end": 14120,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14116,
											"end": 14117,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14109,
											"end": 14121,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 14071,
											"end": 14123,
											"name": "tag",
											"source": 22,
											"value": "500"
										},
										{
											"begin": 14071,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14142,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "82"
										},
										{
											"begin": 14161,
											"end": 14170,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14142,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "402"
										},
										{
											"begin": 14142,
											"end": 14171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14182,
											"end": 14762,
											"name": "tag",
											"source": 22,
											"value": "178"
										},
										{
											"begin": 14182,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14259,
											"end": 14263,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 14312,
											"end": 14337,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 14415,
											"end": 14481,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1"
										},
										{
											"begin": 14404,
											"end": 14412,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 14388,
											"end": 14402,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 14384,
											"end": 14413,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 14380,
											"end": 14482,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 14356,
											"end": 14483,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 14346,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "503"
										},
										{
											"begin": 14346,
											"end": 14501,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 14497,
											"end": 14498,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14494,
											"end": 14495,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14487,
											"end": 14499,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 14346,
											"end": 14501,
											"name": "tag",
											"source": 22,
											"value": "503"
										},
										{
											"begin": 14346,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14524,
											"end": 14557,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 14524,
											"end": 14557,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 14576,
											"end": 14596,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14576,
											"end": 14596,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 14576,
											"end": 14596,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14619,
											"end": 14637,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14608,
											"end": 14638,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14608,
											"end": 14638,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 14605,
											"end": 14655,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 14605,
											"end": 14655,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "504"
										},
										{
											"begin": 14605,
											"end": 14655,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 14651,
											"end": 14652,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 14649,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14641,
											"end": 14653,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 14605,
											"end": 14655,
											"name": "tag",
											"source": 22,
											"value": "504"
										},
										{
											"begin": 14605,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14684,
											"end": 14688,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 14672,
											"end": 14689,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 14672,
											"end": 14689,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14715,
											"end": 14729,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 14711,
											"end": 14738,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 14711,
											"end": 14738,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14711,
											"end": 14738,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 14701,
											"end": 14739,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14701,
											"end": 14739,
											"name": "SGT",
											"source": 22
										},
										{
											"begin": 14698,
											"end": 14756,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 14698,
											"end": 14756,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "417"
										},
										{
											"begin": 14698,
											"end": 14756,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 14752,
											"end": 14753,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14749,
											"end": 14750,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14742,
											"end": 14754,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 14767,
											"end": 14951,
											"name": "tag",
											"source": 22,
											"value": "406"
										},
										{
											"begin": 14767,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14819,
											"end": 14896,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14816,
											"end": 14817,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14897,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 14916,
											"end": 14920,
											"name": "PUSH",
											"source": 22,
											"value": "11"
										},
										{
											"begin": 14913,
											"end": 14914,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 14906,
											"end": 14921,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 14940,
											"end": 14944,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 14937,
											"end": 14938,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14930,
											"end": 14945,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 14956,
											"end": 15151,
											"name": "tag",
											"source": 22,
											"value": "189"
										},
										{
											"begin": 14956,
											"end": 15151,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14995,
											"end": 14998,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15026,
											"end": 15092,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15019,
											"end": 15024,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15016,
											"end": 15093,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 15013,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "509"
										},
										{
											"begin": 15013,
											"end": 15116,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "509"
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "406"
										},
										{
											"begin": 15096,
											"end": 15114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "tag",
											"source": 22,
											"value": "509"
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15143,
											"end": 15144,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14956,
											"end": 15151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15156,
											"end": 15487,
											"name": "tag",
											"source": 22,
											"value": "193"
										},
										{
											"begin": 15156,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15261,
											"end": 15270,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15272,
											"end": 15281,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 15314,
											"end": 15322,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 15302,
											"end": 15312,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 15299,
											"end": 15323,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 15296,
											"end": 15340,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 15296,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "511"
										},
										{
											"begin": 15296,
											"end": 15340,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 15326,
											"end": 15338,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 15296,
											"end": 15340,
											"name": "tag",
											"source": 22,
											"value": "511"
										},
										{
											"begin": 15296,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15365,
											"end": 15371,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 15355,
											"end": 15363,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 15352,
											"end": 15372,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 15349,
											"end": 15389,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 15349,
											"end": 15389,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "512"
										},
										{
											"begin": 15349,
											"end": 15389,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 15385,
											"end": 15386,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15382,
											"end": 15383,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 15375,
											"end": 15387,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 15349,
											"end": 15389,
											"name": "tag",
											"source": 22,
											"value": "512"
										},
										{
											"begin": 15349,
											"end": 15389,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15411,
											"end": 15434,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15411,
											"end": 15434,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15411,
											"end": 15434,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 15456,
											"end": 15481,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 15456,
											"end": 15481,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 15456,
											"end": 15481,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 15456,
											"end": 15481,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 15456,
											"end": 15481,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15156,
											"end": 15487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15492,
											"end": 15617,
											"name": "tag",
											"source": 22,
											"value": "211"
										},
										{
											"begin": 15492,
											"end": 15617,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15557,
											"end": 15566,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 15557,
											"end": 15566,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15557,
											"end": 15566,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15578,
											"end": 15588,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 15578,
											"end": 15588,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15578,
											"end": 15588,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 15575,
											"end": 15611,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 15575,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 15575,
											"end": 15611,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 15591,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 15591,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "406"
										},
										{
											"begin": 15591,
											"end": 15609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15622,
											"end": 16014,
											"name": "tag",
											"source": 22,
											"value": "217"
										},
										{
											"begin": 15622,
											"end": 16014,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15841,
											"end": 15843,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 15830,
											"end": 15839,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15823,
											"end": 15844,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 15804,
											"end": 15808,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15861,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "517"
										},
										{
											"begin": 15918,
											"end": 15920,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 15907,
											"end": 15916,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15895,
											"end": 15901,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 15887,
											"end": 15893,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 15861,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 15861,
											"end": 15922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15861,
											"end": 15922,
											"name": "tag",
											"source": 22,
											"value": "517"
										},
										{
											"begin": 15861,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15953,
											"end": 15955,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15931,
											"end": 15965,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 15931,
											"end": 15965,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 15931,
											"end": 15965,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 15931,
											"end": 15965,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15996,
											"end": 15998,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15974,
											"end": 16008,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 15853,
											"end": 15922,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 15622,
											"end": 16014,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15622,
											"end": 16014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16525,
											"end": 16813,
											"name": "tag",
											"source": 22,
											"value": "246"
										},
										{
											"begin": 16525,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16700,
											"end": 16706,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16689,
											"end": 16698,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 16682,
											"end": 16707,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 16743,
											"end": 16745,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 16738,
											"end": 16740,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 16727,
											"end": 16736,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16716,
											"end": 16746,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 16663,
											"end": 16667,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 16763,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "86"
										},
										{
											"begin": 16803,
											"end": 16805,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 16792,
											"end": 16801,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 16788,
											"end": 16806,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16780,
											"end": 16786,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 16763,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "405"
										},
										{
											"begin": 16763,
											"end": 16807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16818,
											"end": 17259,
											"name": "tag",
											"source": 22,
											"value": "278"
										},
										{
											"begin": 16818,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17037,
											"end": 17043,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17026,
											"end": 17035,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17019,
											"end": 17044,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17092,
											"end": 17134,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17084,
											"end": 17090,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17080,
											"end": 17135,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 17075,
											"end": 17077,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17064,
											"end": 17073,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17053,
											"end": 17136,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 17167,
											"end": 17169,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 17156,
											"end": 17165,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17152,
											"end": 17170,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17145,
											"end": 17175,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17000,
											"end": 17004,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 17192,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "523"
										},
										{
											"begin": 17249,
											"end": 17251,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 17238,
											"end": 17247,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17234,
											"end": 17252,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17226,
											"end": 17232,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17218,
											"end": 17224,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 17192,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 17192,
											"end": 17253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17192,
											"end": 17253,
											"name": "tag",
											"source": 22,
											"value": "523"
										},
										{
											"begin": 17192,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17184,
											"end": 17253,
											"name": "SWAP7",
											"source": 22
										},
										{
											"begin": 16818,
											"end": 17259,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16818,
											"end": 17259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17264,
											"end": 17508,
											"name": "tag",
											"source": 22,
											"value": "333"
										},
										{
											"begin": 17264,
											"end": 17508,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17421,
											"end": 17423,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17410,
											"end": 17419,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17403,
											"end": 17424,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17384,
											"end": 17388,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 17441,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "86"
										},
										{
											"begin": 17498,
											"end": 17500,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17487,
											"end": 17496,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17483,
											"end": 17501,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17475,
											"end": 17481,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17467,
											"end": 17473,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 17441,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 17441,
											"end": 17502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17513,
											"end": 17641,
											"name": "tag",
											"source": 22,
											"value": "336"
										},
										{
											"begin": 17513,
											"end": 17641,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 17601,
											"end": 17612,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17601,
											"end": 17612,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17601,
											"end": 17612,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 17598,
											"end": 17635,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 17598,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 17598,
											"end": 17635,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 17615,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 17615,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "406"
										},
										{
											"begin": 17615,
											"end": 17633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "tag",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17831,
											"end": 17833,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 17820,
											"end": 17829,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17813,
											"end": 17834,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17794,
											"end": 17798,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 17851,
											"end": 17912,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "530"
										},
										{
											"begin": 17908,
											"end": 17910,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 17897,
											"end": 17906,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17893,
											"end": 17911,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17885,
											"end": 17891,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 17877,
											"end": 17883,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 17851,
											"end": 17912,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 17851,
											"end": 17912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17851,
											"end": 17912,
											"name": "tag",
											"source": 22,
											"value": "530"
										},
										{
											"begin": 17851,
											"end": 17912,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17843,
											"end": 17912,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 17843,
											"end": 17912,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17948,
											"end": 17954,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17943,
											"end": 17945,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17932,
											"end": 17941,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17928,
											"end": 17946,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17921,
											"end": 17955,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17646,
											"end": 17961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "tag",
											"source": 22,
											"value": "348"
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18149,
											"end": 18151,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 18138,
											"end": 18147,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18131,
											"end": 18152,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18112,
											"end": 18116,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18230,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "532"
										},
										{
											"begin": 18226,
											"end": 18228,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 18215,
											"end": 18224,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 18211,
											"end": 18229,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18203,
											"end": 18209,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 18195,
											"end": 18201,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 18169,
											"end": 18230,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 18169,
											"end": 18230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18169,
											"end": 18230,
											"name": "tag",
											"source": 22,
											"value": "532"
										},
										{
											"begin": 18169,
											"end": 18230,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18161,
											"end": 18230,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18161,
											"end": 18230,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18278,
											"end": 18282,
											"name": "PUSH",
											"source": 22,
											"value": "FF"
										},
										{
											"begin": 18270,
											"end": 18276,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 18266,
											"end": 18283,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 18261,
											"end": 18263,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 18250,
											"end": 18259,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 18246,
											"end": 18264,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18239,
											"end": 18284,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17966,
											"end": 18290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19083,
											"end": 19479,
											"name": "tag",
											"source": 22,
											"value": "363"
										},
										{
											"begin": 19083,
											"end": 19479,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19290,
											"end": 19292,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 19279,
											"end": 19288,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19272,
											"end": 19293,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 19253,
											"end": 19257,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19310,
											"end": 19371,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "536"
										},
										{
											"begin": 19367,
											"end": 19369,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 19356,
											"end": 19365,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19352,
											"end": 19370,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19344,
											"end": 19350,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 19336,
											"end": 19342,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 19310,
											"end": 19371,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 19310,
											"end": 19371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19310,
											"end": 19371,
											"name": "tag",
											"source": 22,
											"value": "536"
										},
										{
											"begin": 19310,
											"end": 19371,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19402,
											"end": 19404,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 19387,
											"end": 19405,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19387,
											"end": 19405,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19380,
											"end": 19414,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 19380,
											"end": 19414,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19380,
											"end": 19414,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 19380,
											"end": 19414,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19457,
											"end": 19471,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19457,
											"end": 19471,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 19450,
											"end": 19472,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 19445,
											"end": 19447,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 19430,
											"end": 19448,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19430,
											"end": 19448,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 19430,
											"end": 19448,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19423,
											"end": 19473,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 19302,
											"end": 19371,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 19083,
											"end": 19479,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19083,
											"end": 19479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19484,
											"end": 19805,
											"name": "tag",
											"source": 22,
											"value": "379"
										},
										{
											"begin": 19484,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19675,
											"end": 19681,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19664,
											"end": 19673,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19657,
											"end": 19682,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 19718,
											"end": 19720,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 19713,
											"end": 19715,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 19702,
											"end": 19711,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 19698,
											"end": 19716,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19691,
											"end": 19721,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 19638,
											"end": 19642,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19738,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "538"
										},
										{
											"begin": 19795,
											"end": 19797,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 19784,
											"end": 19793,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19780,
											"end": 19798,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19772,
											"end": 19778,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 19764,
											"end": 19770,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 19738,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "403"
										},
										{
											"begin": 19738,
											"end": 19799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19738,
											"end": 19799,
											"name": "tag",
											"source": 22,
											"value": "538"
										},
										{
											"begin": 19738,
											"end": 19799,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19730,
											"end": 19799,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 19484,
											"end": 19805,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19484,
											"end": 19805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19810,
											"end": 20059,
											"name": "tag",
											"source": 22,
											"value": "383"
										},
										{
											"begin": 19810,
											"end": 20059,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19879,
											"end": 19885,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19932,
											"end": 19934,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 19920,
											"end": 19929,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 19911,
											"end": 19918,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 19907,
											"end": 19930,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 19903,
											"end": 19935,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 19900,
											"end": 19952,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 19900,
											"end": 19952,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "540"
										},
										{
											"begin": 19900,
											"end": 19952,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 19948,
											"end": 19949,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19945,
											"end": 19946,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 19938,
											"end": 19950,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 19900,
											"end": 19952,
											"name": "tag",
											"source": 22,
											"value": "540"
										},
										{
											"begin": 19900,
											"end": 19952,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19980,
											"end": 19989,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19974,
											"end": 19990,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 19999,
											"end": 20029,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "82"
										},
										{
											"begin": 20023,
											"end": 20028,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19999,
											"end": 20029,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "397"
										},
										{
											"begin": 19999,
											"end": 20029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"SET_IMAGE_HASH_TYPE_HASH()": "57c56d6b",
							"createContract(bytes)": "90042baf",
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": "7a9a1628",
							"isValidSignature(bytes,bytes)": "20c13b0b",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"nonce()": "affed0e0",
							"readNonce(uint256)": "8c3f5563",
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": "61c2926c",
							"signatureRecovery(bytes32,bytes)": "853c5068",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updateImageHash(bytes32)": "29561426"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"DelegateCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"CreatedContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}},\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"params\":{\"_txs\":\"Transactions to process\"}},\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to process\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"},\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow any caller to execute an action\"},\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow any caller to execute an action\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"notice\":\"GuestModule implements a Sequence wallet without signatures, nonce or replay protection. executing transactions using this wallet is not an authenticated process, and can be done by any address.This contract is completely public with no security, designed to execute pre-signed transactions   and use Sequence tools without using the wallets.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":\"GuestModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol\":{\"keccak256\":\"0x14c92b44eac100edbfea10d0d02728752a6be277c267c3776dc563ff963271b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e440eb91039118ce26bb66fd549d5e6b59863983efbe6c2617b92e2c4f0aab66\",\"dweb:/ipfs/QmeTd2xBKEv4S4Rp9S4TSY4WwUUDjtA7xiJYiJqkVUio7d\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":{\"keccak256\":\"0x80c0151dbd444f96c2f935e70a6d3cc57e307588fa21d7eace67e568dd3d35c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39a856555a5eb900e67d351e667135f245ccebd304d692b35fc8bdc83aec1b53\",\"dweb:/ipfs/QmUdWfa7GcTGM5gk7qYbNCHtsxF4o8dXHzr6HbdFng5sQm\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":{\"keccak256\":\"0x16b1400988f6b7bd4d32bdcb36ee2fbd644fb2c8ca571becc0c32e03602bd303\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd4681fb4cff10f4e98e45618fbc52ed0a4c7d4fcf614f34a587ad20cd16855\",\"dweb:/ipfs/QmbA2LYBH1x8WX8CaeiFYMU5rjyLGgNCF32r9fQbXuoqwJ\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							},
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow any caller to execute an action"
							},
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow any caller to execute an action"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"notice": "GuestModule implements a Sequence wallet without signatures, nonce or replay protection. executing transactions using this wallet is not an authenticated process, and can be done by any address.This contract is completely public with no security, designed to execute pre-signed transactions   and use Sequence tools without using the wallets.",
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol": {
				"ModuleAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"SET_IMAGE_HASH_TYPE_HASH()": "57c56d6b",
							"isValidSignature(bytes,bytes)": "20c13b0b",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"signatureRecovery(bytes32,bytes)": "853c5068",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updateImageHash(bytes32)": "29561426"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":\"ModuleAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol": {
				"ModuleCalls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"details": "Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.",
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": "7a9a1628",
							"nonce()": "affed0e0",
							"readNonce(uint256)": "8c3f5563",
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": "61c2926c",
							"signatureRecovery(bytes32,bytes)": "853c5068",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updateImageHash(bytes32)": "29561426"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"details\":\"Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.\",\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":\"ModuleCalls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol\":{\"keccak256\":\"0x80c0151dbd444f96c2f935e70a6d3cc57e307588fa21d7eace67e568dd3d35c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39a856555a5eb900e67d351e667135f245ccebd304d692b35fc8bdc83aec1b53\",\"dweb:/ipfs/QmUdWfa7GcTGM5gk7qYbNCHtsxF4o8dXHzr6HbdFng5sQm\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol": {
				"ModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":169:1177  contract ModuleCreator is IModuleCreator, ModuleERC165, ModuleSelfAuth {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":169:1177  contract ModuleCreator is IModuleCreator, ModuleERC165, ModuleSelfAuth {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x90042baf\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":516:530   */\n      swap1\n      iszero\n        /* \"#utility.yul\":509:531   */\n      iszero\n        /* \"#utility.yul\":491:532   */\n      dup2\n      mstore\n        /* \"#utility.yul\":479:481   */\n      0x20\n        /* \"#utility.yul\":464:482   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":1893:1935   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1881:1936   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1863:1937   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1851:1853   */\n      0x20\n        /* \"#utility.yul\":1836:1854   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n      tag_9\n        /* \"#utility.yul\":1717:1943   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n    tag_8:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1028:1032  bool */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1044:1092  _interfaceID == type(IModuleCreator).interfaceId */\n      0x6ffbd45100000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1040:1120  if (_interfaceID == type(IModuleCreator).interfaceId) {... */\n      tag_18\n      jumpi\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1109:1113  true */\n      0x01\n      swap2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":1040:1120  if (_interfaceID == type(IModuleCreator).interfaceId) {... */\n    tag_18:\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":709:756  _interfaceID == this.supportsInterface.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":725:756  this.supportsInterface.selector */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":709:756  _interfaceID == this.supportsInterface.selector */\n      eq\n      swap1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":942:1175  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {... */\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n    tag_14:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":550:562  address addr */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":178:188  msg.sender */\n      caller\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":200:204  this */\n      address\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":178:205  msg.sender != address(this) */\n      eq\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":174:268  if (msg.sender != address(this)) {... */\n      tag_22\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      mload(0x40)\n      0xe125889400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":235:245  msg.sender */\n      caller\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2183:2217   */\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":255:259  this */\n      address\n        /* \"#utility.yul\":2233:2251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2226:2269   */\n      mstore\n        /* \"#utility.yul\":2095:2113   */\n      0x44\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":222:261  OnlySelfAuth(msg.sender, address(this)) */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":174:268  if (msg.sender != address(this)) {... */\n    tag_22:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":631:636  _code */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":625:637  mload(_code) */\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":620:622  32 */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":613:618  _code */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":609:623  add(_code, 32) */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":596:607  callvalue() */\n      callvalue\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":589:638  create(callvalue(), add(_code, 32), mload(_code)) */\n      create\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":581:638  addr := create(callvalue(), add(_code, 32), mload(_code)) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":649:667  addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":645:695  if (addr == address(0)) revert CreateFailed(_code) */\n      tag_26\n      jumpi\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":689:694  _code */\n      dup2\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":676:695  CreateFailed(_code) */\n      mload(0x40)\n      0x0d25719100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":645:695  if (addr == address(0)) revert CreateFailed(_code) */\n    tag_26:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":706:727  CreatedContract(addr) */\n      mload(0x40)\n        /* \"#utility.yul\":1893:1935   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1881:1936   */\n      dup3\n      and\n        /* \"#utility.yul\":1863:1937   */\n      dup2\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":706:727  CreatedContract(addr) */\n      0xa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c\n      swap1\n        /* \"#utility.yul\":1851:1853   */\n      0x20\n        /* \"#utility.yul\":1836:1854   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":706:727  CreatedContract(addr) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":456:732  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:346   */\n    tag_7:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_34:\n        /* \"#utility.yul\":180:189   */\n      dup2\n        /* \"#utility.yul\":167:190   */\n      calldataload\n        /* \"#utility.yul\":230:296   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":223:228   */\n      dup2\n        /* \"#utility.yul\":219:297   */\n      and\n        /* \"#utility.yul\":212:217   */\n      dup2\n        /* \"#utility.yul\":209:298   */\n      eq\n        /* \"#utility.yul\":199:316   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":312:313   */\n      0x00\n        /* \"#utility.yul\":309:310   */\n      dup1\n        /* \"#utility.yul\":302:314   */\n      revert\n        /* \"#utility.yul\":199:316   */\n    tag_35:\n        /* \"#utility.yul\":335:340   */\n      swap4\n        /* \"#utility.yul\":14:346   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":543:727   */\n    tag_31:\n        /* \"#utility.yul\":595:672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":592:593   */\n      0x00\n        /* \"#utility.yul\":585:673   */\n      mstore\n        /* \"#utility.yul\":692:696   */\n      0x41\n        /* \"#utility.yul\":689:690   */\n      0x04\n        /* \"#utility.yul\":682:697   */\n      mstore\n        /* \"#utility.yul\":716:720   */\n      0x24\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":706:721   */\n      revert\n        /* \"#utility.yul\":732:1712   */\n    tag_13:\n        /* \"#utility.yul\":800:806   */\n      0x00\n        /* \"#utility.yul\":853:855   */\n      0x20\n        /* \"#utility.yul\":841:850   */\n      dup3\n        /* \"#utility.yul\":832:839   */\n      dup5\n        /* \"#utility.yul\":828:851   */\n      sub\n        /* \"#utility.yul\":824:856   */\n      slt\n        /* \"#utility.yul\":821:873   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":821:873   */\n    tag_39:\n        /* \"#utility.yul\":909:918   */\n      dup2\n        /* \"#utility.yul\":896:919   */\n      calldataload\n        /* \"#utility.yul\":938:956   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":979:981   */\n      dup1\n        /* \"#utility.yul\":971:977   */\n      dup3\n        /* \"#utility.yul\":968:982   */\n      gt\n        /* \"#utility.yul\":965:999   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":995:996   */\n      0x00\n        /* \"#utility.yul\":992:993   */\n      dup1\n        /* \"#utility.yul\":985:997   */\n      revert\n        /* \"#utility.yul\":965:999   */\n    tag_40:\n        /* \"#utility.yul\":1033:1039   */\n      dup2\n        /* \"#utility.yul\":1022:1031   */\n      dup5\n        /* \"#utility.yul\":1018:1040   */\n      add\n        /* \"#utility.yul\":1008:1040   */\n      swap2\n      pop\n        /* \"#utility.yul\":1078:1085   */\n      dup5\n        /* \"#utility.yul\":1071:1075   */\n      0x1f\n        /* \"#utility.yul\":1067:1069   */\n      dup4\n        /* \"#utility.yul\":1063:1076   */\n      add\n        /* \"#utility.yul\":1059:1086   */\n      slt\n        /* \"#utility.yul\":1049:1104   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":1100:1101   */\n      0x00\n        /* \"#utility.yul\":1097:1098   */\n      dup1\n        /* \"#utility.yul\":1090:1102   */\n      revert\n        /* \"#utility.yul\":1049:1104   */\n    tag_41:\n        /* \"#utility.yul\":1136:1138   */\n      dup2\n        /* \"#utility.yul\":1123:1139   */\n      calldataload\n        /* \"#utility.yul\":1158:1160   */\n      dup2\n        /* \"#utility.yul\":1154:1156   */\n      dup2\n        /* \"#utility.yul\":1151:1161   */\n      gt\n        /* \"#utility.yul\":1148:1184   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":1164:1182   */\n      tag_43\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1298:1300   */\n      0x40\n        /* \"#utility.yul\":1292:1301   */\n      mload\n        /* \"#utility.yul\":1360:1364   */\n      0x1f\n        /* \"#utility.yul\":1352:1365   */\n      dup3\n      add\n        /* \"#utility.yul\":1203:1269   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1348:1370   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1372:1374   */\n      0x3f\n        /* \"#utility.yul\":1344:1375   */\n      add\n        /* \"#utility.yul\":1340:1380   */\n      and\n        /* \"#utility.yul\":1328:1381   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1396:1414   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1416:1438   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1393:1439   */\n      or\n        /* \"#utility.yul\":1390:1462   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1442:1460   */\n      tag_45\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1482:1492   */\n      dup2\n        /* \"#utility.yul\":1478:1480   */\n      0x40\n        /* \"#utility.yul\":1471:1493   */\n      mstore\n        /* \"#utility.yul\":1517:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1515   */\n      dup2\n        /* \"#utility.yul\":1502:1520   */\n      mstore\n        /* \"#utility.yul\":1557:1564   */\n      dup8\n        /* \"#utility.yul\":1552:1554   */\n      0x20\n        /* \"#utility.yul\":1547:1549   */\n      dup5\n        /* \"#utility.yul\":1543:1545   */\n      dup8\n        /* \"#utility.yul\":1539:1550   */\n      add\n        /* \"#utility.yul\":1535:1555   */\n      add\n        /* \"#utility.yul\":1532:1565   */\n      gt\n        /* \"#utility.yul\":1529:1582   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1578:1579   */\n      0x00\n        /* \"#utility.yul\":1575:1576   */\n      dup1\n        /* \"#utility.yul\":1568:1580   */\n      revert\n        /* \"#utility.yul\":1529:1582   */\n    tag_46:\n        /* \"#utility.yul\":1634:1636   */\n      dup3\n        /* \"#utility.yul\":1629:1631   */\n      0x20\n        /* \"#utility.yul\":1625:1627   */\n      dup7\n        /* \"#utility.yul\":1621:1632   */\n      add\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1608:1614   */\n      dup4\n        /* \"#utility.yul\":1604:1619   */\n      add\n        /* \"#utility.yul\":1591:1637   */\n      calldatacopy\n        /* \"#utility.yul\":1679:1680   */\n      0x00\n        /* \"#utility.yul\":1657:1672   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1674:1676   */\n      0x20\n        /* \"#utility.yul\":1653:1677   */\n      add\n        /* \"#utility.yul\":1646:1681   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1661:1667   */\n      swap6\n        /* \"#utility.yul\":732:1712   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2280:2885   */\n    tag_28:\n        /* \"#utility.yul\":2390:2394   */\n      0x00\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2448:2450   */\n      dup1\n        /* \"#utility.yul\":2437:2446   */\n      dup4\n        /* \"#utility.yul\":2430:2451   */\n      mstore\n        /* \"#utility.yul\":2480:2486   */\n      dup4\n        /* \"#utility.yul\":2474:2487   */\n      mload\n        /* \"#utility.yul\":2523:2529   */\n      dup1\n        /* \"#utility.yul\":2518:2520   */\n      dup3\n        /* \"#utility.yul\":2507:2516   */\n      dup6\n        /* \"#utility.yul\":2503:2521   */\n      add\n        /* \"#utility.yul\":2496:2530   */\n      mstore\n        /* \"#utility.yul\":2548:2549   */\n      0x00\n        /* \"#utility.yul\":2558:2698   */\n    tag_50:\n        /* \"#utility.yul\":2572:2578   */\n      dup2\n        /* \"#utility.yul\":2569:2570   */\n      dup2\n        /* \"#utility.yul\":2566:2579   */\n      lt\n        /* \"#utility.yul\":2558:2698   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":2667:2681   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2663:2686   */\n      dup4\n      add\n        /* \"#utility.yul\":2657:2687   */\n      mload\n        /* \"#utility.yul\":2633:2650   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2652:2654   */\n      0x40\n        /* \"#utility.yul\":2629:2655   */\n      add\n        /* \"#utility.yul\":2622:2688   */\n      mstore\n        /* \"#utility.yul\":2587:2597   */\n      dup3\n      add\n        /* \"#utility.yul\":2558:2698   */\n      jump(tag_50)\n    tag_52:\n        /* \"#utility.yul\":2562:2565   */\n      pop\n        /* \"#utility.yul\":2747:2748   */\n      0x00\n        /* \"#utility.yul\":2742:2744   */\n      0x40\n        /* \"#utility.yul\":2733:2739   */\n      dup3\n        /* \"#utility.yul\":2722:2731   */\n      dup7\n        /* \"#utility.yul\":2718:2740   */\n      add\n        /* \"#utility.yul\":2714:2745   */\n      add\n        /* \"#utility.yul\":2707:2749   */\n      mstore\n        /* \"#utility.yul\":2876:2878   */\n      0x40\n        /* \"#utility.yul\":2806:2872   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2801:2803   */\n      0x1f\n        /* \"#utility.yul\":2793:2799   */\n      dup4\n        /* \"#utility.yul\":2789:2804   */\n      add\n        /* \"#utility.yul\":2785:2873   */\n      and\n        /* \"#utility.yul\":2774:2783   */\n      dup6\n        /* \"#utility.yul\":2770:2874   */\n      add\n        /* \"#utility.yul\":2766:2879   */\n      add\n        /* \"#utility.yul\":2758:2879   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2280:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122001c76a69e8b3fef98970ac002bb7976078d0e17b12897e7965b9442691a3a58464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061040e806100206000396000f3fe6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf14610063575b600080fd5b34801561003a57600080fd5b5061004e610049366004610225565b61009b565b60405190151581526020015b60405180910390f35b61007661007136600461029d565b610136565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005a565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ee57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b600033301461017e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166101d757816040517f0d257191000000000000000000000000000000000000000000000000000000008152600401610175919061036c565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006020828403121561023757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102af57600080fd5b813567ffffffffffffffff808211156102c757600080fd5b818401915084601f8301126102db57600080fd5b8135818111156102ed576102ed61026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103335761033361026e565b8160405282815287602084870101111561034c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103995785810183015185820160400152820161037d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea264697066735822122001c76a69e8b3fef98970ac002bb7976078d0e17b12897e7965b9442691a3a58464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xEE JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x26E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC7 PUSH11 0x69E8B3FEF98970AC002BB7 SWAP8 PUSH1 0x78 0xD0 0xE1 PUSH28 0x12897E7965B9442691A3A58464736F6C634300081200330000000000 ",
							"sourceMap": "169:1008:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createContract_876": {
									"entryPoint": 310,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_901": {
									"entryPoint": 155,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_919": {
									"entryPoint": null,
									"id": 919,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2887:22",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:22",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:263:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:22"
															},
															"nodeType": "YulIf",
															"src": "93:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:22"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "230:66:22",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:78:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:89:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:97:22"
															},
															"nodeType": "YulIf",
															"src": "199:117:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "325:15:22",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "335:5:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:22",
														"type": ""
													}
												],
												"src": "14:332:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "446:92:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "456:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:22"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "516:6:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "516:14:22"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "509:6:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:22:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:41:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "491:41:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "415:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "426:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "437:4:22",
														"type": ""
													}
												],
												"src": "351:187:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:88:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "585:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "689:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:4:22",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "682:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "713:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "716:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "706:15:22"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "543:184:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:901:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "857:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "869:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "853:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:32:22"
															},
															"nodeType": "YulIf",
															"src": "821:52:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "896:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "886:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "928:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "938:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "932:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "983:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "992:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "995:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "985:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "985:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "979:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "968:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:14:22"
															},
															"nodeType": "YulIf",
															"src": "965:34:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1008:32:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1022:9:22"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1033:6:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1018:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:22:22"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1012:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1088:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1090:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1090:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1090:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1067:2:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1071:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1063:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1063:13:22"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1078:7:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:35:22"
															},
															"nodeType": "YulIf",
															"src": "1049:55:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1113:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:2:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:16:22"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1117:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1162:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1164:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1164:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1164:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1154:2:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1158:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1151:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:10:22"
															},
															"nodeType": "YulIf",
															"src": "1148:36:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1193:76:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1203:66:22",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1197:2:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:23:22",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1292:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:9:22"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1282:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:71:22",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1356:2:22"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1360:4:22",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1352:3:22"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1352:13:22"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1367:2:22"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1348:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1348:22:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1372:2:22",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1344:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1344:31:22"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1377:2:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1340:40:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1328:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:53:22"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1314:10:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1440:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1442:16:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1442:18:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1399:10:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1411:2:22"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1396:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1419:10:22"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:22"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1416:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:22:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1393:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:46:22"
															},
															"nodeType": "YulIf",
															"src": "1390:72:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:2:22",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1482:10:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:22:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1471:22:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:22"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1517:2:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:18:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1502:18:22"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1543:2:22"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1547:2:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:11:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:20:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1557:7:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1532:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:33:22"
															},
															"nodeType": "YulIf",
															"src": "1529:53:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1616:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:15:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1625:2:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1629:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1621:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1621:11:22"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1634:2:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1591:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:46:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1591:46:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1661:6:22"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1669:2:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1657:15:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1674:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:24:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:35:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:35:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1690:16:22",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1700:6:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "777:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "788:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:22",
														"type": ""
													}
												],
												"src": "732:980:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1818:125:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1828:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1840:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1836:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1828:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:42:22",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1881:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:55:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:74:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1863:74:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1787:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1798:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1809:4:22",
														"type": ""
													}
												],
												"src": "1717:226:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:198:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2087:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2099:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2087:4:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2122:52:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2132:42:22",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2126:2:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2190:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2213:2:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2201:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2201:15:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:34:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2237:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2248:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2265:2:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2253:15:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:43:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2226:43:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2038:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2049:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2057:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2068:4:22",
														"type": ""
													}
												],
												"src": "1948:327:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2399:486:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2409:12:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2419:2:22",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2413:2:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2448:2:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:21:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2460:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2474:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:13:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2464:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2507:9:22"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2518:2:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:18:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:34:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2539:10:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2548:1:22",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2543:1:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:90:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2637:9:22"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2648:1:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2633:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2633:17:22"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:2:22",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2629:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2629:26:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2671:6:22"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2679:1:22"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2667:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2667:14:22"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2683:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2663:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2663:23:22"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2657:5:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2657:30:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2622:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2622:66:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2622:66:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2569:1:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2572:6:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:13:22"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2580:19:22",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2582:15:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2591:1:22"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2594:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2587:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2587:10:22"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2582:1:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2562:3:22",
																"statements": []
															},
															"src": "2558:140:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2722:9:22"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2733:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2718:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2718:22:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:31:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:42:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:42:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2758:121:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2793:6:22"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2801:2:22",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2789:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2789:15:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2806:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2785:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2785:88:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:104:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2876:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:113:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2758:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2379:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2390:4:22",
														"type": ""
													}
												],
												"src": "2280:605:22"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
									"id": 22,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf14610063575b600080fd5b34801561003a57600080fd5b5061004e610049366004610225565b61009b565b60405190151581526020015b60405180910390f35b61007661007136600461029d565b610136565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005a565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ee57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b600033301461017e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166101d757816040517f0d257191000000000000000000000000000000000000000000000000000000008152600401610175919061036c565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006020828403121561023757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102af57600080fd5b813567ffffffffffffffff808211156102c757600080fd5b818401915084601f8301126102db57600080fd5b8135818111156102ed576102ed61026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103335761033361026e565b8160405282815287602084870101111561034c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103995785810183015185820160400152820161037d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea264697066735822122001c76a69e8b3fef98970ac002bb7976078d0e17b12897e7965b9442691a3a58464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xEE JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x26E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC7 PUSH11 0x69E8B3FEF98970AC002BB7 SWAP8 PUSH1 0x78 0xD0 0xE1 PUSH28 0x12897E7965B9442691A3A58464736F6C634300081200330000000000 ",
							"sourceMap": "169:1008:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;942:233;;;;;;;;;;-1:-1:-1;942:233:4;;;;;:::i;:::-;;:::i;:::-;;;516:14:22;;509:22;491:41;;479:2;464:18;942:233:4;;;;;;;;456:276;;;;;;:::i;:::-;;:::i;:::-;;;1893:42:22;1881:55;;;1863:74;;1851:2;1836:18;456:276:4;1717:226:22;942:233:4;1028:4;1044:48;;;;;1040:80;;-1:-1:-1;1109:4:4;;942:233;-1:-1:-1;942:233:4:o;1040:80::-;-1:-1:-1;709:47:5;;725:31;709:47;;942:233:4:o;456:276::-;550:12;178:10:8;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;2183:34:22;255:4:8;2233:18:22;;;2226:43;2095:18;;222:39:8;;;;;;;;174:94;631:5:4::1;625:12;620:2;613:5;609:14;596:11;589:49;581:57:::0;-1:-1:-1;649:18:4::1;::::0;::::1;645:50;;689:5;676:19;;;;;;;;;;;:::i;645:50::-;706:21;::::0;1893:42:22;1881:55;;1863:74;;706:21:4::1;::::0;1851:2:22;1836:18;706:21:4::1;;;;;;;456:276:::0;;;:::o;14:332:22:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:22:o;543:184::-;595:77;592:1;585:88;692:4;689:1;682:15;716:4;713:1;706:15;732:980;800:6;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;909:9;896:23;938:18;979:2;971:6;968:14;965:34;;;995:1;992;985:12;965:34;1033:6;1022:9;1018:22;1008:32;;1078:7;1071:4;1067:2;1063:13;1059:27;1049:55;;1100:1;1097;1090:12;1049:55;1136:2;1123:16;1158:2;1154;1151:10;1148:36;;;1164:18;;:::i;:::-;1298:2;1292:9;1360:4;1352:13;;1203:66;1348:22;;;1372:2;1344:31;1340:40;1328:53;;;1396:18;;;1416:22;;;1393:46;1390:72;;;1442:18;;:::i;:::-;1482:10;1478:2;1471:22;1517:2;1509:6;1502:18;1557:7;1552:2;1547;1543;1539:11;1535:20;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1634:2;1629;1625;1621:11;1616:2;1608:6;1604:15;1591:46;1679:1;1657:15;;;1674:2;1653:24;1646:35;;;;-1:-1:-1;1661:6:22;732:980;-1:-1:-1;;;;;732:980:22:o;2280:605::-;2390:4;2419:2;2448;2437:9;2430:21;2480:6;2474:13;2523:6;2518:2;2507:9;2503:18;2496:34;2548:1;2558:140;2572:6;2569:1;2566:13;2558:140;;;2667:14;;;2663:23;;2657:30;2633:17;;;2652:2;2629:26;2622:66;2587:10;;2558:140;;;2562:3;2747:1;2742:2;2733:6;2722:9;2718:22;2714:31;2707:42;2876:2;2806:66;2801:2;2793:6;2789:15;2785:88;2774:9;2770:104;2766:113;2758:121;;;;2280:605;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "207600",
								"executionCost": "251",
								"totalCost": "207851"
							},
							"external": {
								"createContract(bytes)": "infinite",
								"supportsInterface(bytes4)": "334"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1177,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001c76a69e8b3fef98970ac002bb7976078d0e17b12897e7965b9442691a3a58464736f6c63430008120033",
									".code": [
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "90042BAF"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 169,
											"end": 1177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 942,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 942,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 516,
											"end": 530,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 516,
											"end": 530,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 509,
											"end": 531,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 491,
											"end": 532,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 491,
											"end": 532,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 479,
											"end": 481,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 456,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1935,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1936,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1881,
											"end": 1936,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1881,
											"end": 1936,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1863,
											"end": 1937,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1863,
											"end": 1937,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 456,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1717,
											"end": 1943,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "6FFBD45100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 942,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1040,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 709,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 709,
											"end": 756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 725,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 709,
											"end": 756,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 709,
											"end": 756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 188,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 200,
											"end": 204,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 178,
											"end": 205,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 174,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "E125889400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 235,
											"end": 245,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2217,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 255,
											"end": 259,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2251,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 2233,
											"end": 2251,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2233,
											"end": 2251,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2226,
											"end": 2269,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "PUSH",
											"source": 22,
											"value": "44"
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 222,
											"end": 261,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 261,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 174,
											"end": 268,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 631,
											"end": 636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 625,
											"end": 637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 618,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 596,
											"end": 607,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 589,
											"end": 638,
											"modifierDepth": 1,
											"name": "CREATE",
											"source": 4
										},
										{
											"begin": 581,
											"end": 638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 649,
											"end": 667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 649,
											"end": 667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 649,
											"end": 667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 689,
											"end": 694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D25719100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 676,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 676,
											"end": 695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 645,
											"end": 695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 727,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1935,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1936,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1881,
											"end": 1936,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1863,
											"end": 1937,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1863,
											"end": 1937,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C"
										},
										{
											"begin": 706,
											"end": 727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 346,
											"name": "tag",
											"source": 22,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 346,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "34"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 22,
											"value": "34"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 180,
											"end": 189,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 230,
											"end": 296,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 219,
											"end": 297,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 212,
											"end": 217,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 209,
											"end": 298,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 199,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "35"
										},
										{
											"begin": 199,
											"end": 316,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 314,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 199,
											"end": 316,
											"name": "tag",
											"source": 22,
											"value": "35"
										},
										{
											"begin": 199,
											"end": 316,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 335,
											"end": 340,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 14,
											"end": 346,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 543,
											"end": 727,
											"name": "tag",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 543,
											"end": 727,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 595,
											"end": 672,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 673,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 692,
											"end": 696,
											"name": "PUSH",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 716,
											"end": 720,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 721,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 732,
											"end": 1712,
											"name": "tag",
											"source": 22,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 800,
											"end": 806,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 832,
											"end": 839,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 828,
											"end": 851,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 824,
											"end": 856,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 821,
											"end": 873,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 821,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "39"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 821,
											"end": 873,
											"name": "tag",
											"source": 22,
											"value": "39"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 909,
											"end": 918,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 896,
											"end": 919,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 938,
											"end": 956,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 971,
											"end": 977,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 968,
											"end": 982,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 965,
											"end": 999,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 995,
											"end": 996,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 993,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 985,
											"end": 997,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 965,
											"end": 999,
											"name": "tag",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1022,
											"end": 1031,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1018,
											"end": 1040,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1008,
											"end": 1040,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1008,
											"end": 1040,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1071,
											"end": 1075,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 1067,
											"end": 1069,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1059,
											"end": 1086,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 1049,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 1049,
											"end": 1104,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1090,
											"end": 1102,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1049,
											"end": 1104,
											"name": "tag",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 1049,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1123,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1154,
											"end": 1156,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 1148,
											"end": 1184,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1148,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "43"
										},
										{
											"begin": 1148,
											"end": 1184,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 1164,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "tag",
											"source": 22,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1360,
											"end": 1364,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1203,
											"end": 1269,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 22,
											"value": "3F"
										},
										{
											"begin": 1344,
											"end": 1375,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1340,
											"end": 1380,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 1416,
											"end": 1438,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1416,
											"end": 1438,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1416,
											"end": 1438,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 1393,
											"end": 1439,
											"name": "OR",
											"source": 22
										},
										{
											"begin": 1390,
											"end": 1462,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1390,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "45"
										},
										{
											"begin": 1390,
											"end": 1462,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "45"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 1442,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "tag",
											"source": 22,
											"value": "45"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1482,
											"end": 1492,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1478,
											"end": 1480,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1493,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1517,
											"end": 1519,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1535,
											"end": 1555,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1532,
											"end": 1565,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "46"
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1568,
											"end": 1580,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "tag",
											"source": 22,
											"value": "46"
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1591,
											"end": 1637,
											"name": "CALLDATACOPY",
											"source": 22
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1646,
											"end": 1681,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1646,
											"end": 1681,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1646,
											"end": 1681,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1646,
											"end": 1681,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 732,
											"end": 1712,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 732,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2280,
											"end": 2885,
											"name": "tag",
											"source": 22,
											"value": "28"
										},
										{
											"begin": 2280,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2474,
											"end": 2487,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2507,
											"end": 2516,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2496,
											"end": 2530,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "tag",
											"source": 22,
											"value": "50"
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2566,
											"end": 2579,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "52"
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2663,
											"end": 2686,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2663,
											"end": 2686,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2657,
											"end": 2687,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 2633,
											"end": 2650,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 2633,
											"end": 2650,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2633,
											"end": 2650,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2652,
											"end": 2654,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2655,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2622,
											"end": 2688,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "50"
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "tag",
											"source": 22,
											"value": "52"
										},
										{
											"begin": 2558,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 2718,
											"end": 2740,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2714,
											"end": 2745,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2876,
											"end": 2878,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2872,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2789,
											"end": 2804,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2785,
											"end": 2873,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 2770,
											"end": 2874,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2766,
											"end": 2879,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2758,
											"end": 2879,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 2758,
											"end": 2879,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2758,
											"end": 2879,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2758,
											"end": 2879,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2280,
											"end": 2885,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 2280,
											"end": 2885,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2280,
											"end": 2885,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2280,
											"end": 2885,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2280,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createContract(bytes)": "90042baf",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"CreatedContract\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":\"ModuleCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol\":{\"keccak256\":\"0x16b1400988f6b7bd4d32bdcb36ee2fbd644fb2c8ca571becc0c32e03602bd303\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd4681fb4cff10f4e98e45618fbc52ed0a4c7d4fcf614f34a587ad20cd16855\",\"dweb:/ipfs/QmbA2LYBH1x8WX8CaeiFYMU5rjyLGgNCF32r9fQbXuoqwJ\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol": {
				"ModuleERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Adding new hooks will not lead to them being reported by this function      without upgrading the wallet. In addition, developers must ensure that      all inherited contracts by the main module don't conflict and are accounted      to be supported by the supportsInterface method.",
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Adding new hooks will not lead to them being reported by this function      without upgrading the wallet. In addition, developers must ensure that      all inherited contracts by the main module don't conflict and are accounted      to be supported by the supportsInterface method.\",\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":\"ModuleERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol": {
				"ModuleNonce": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":145:2076  contract ModuleNonce {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":145:2076  contract ModuleNonce {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c3f5563\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xaffed0e0\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":938:1094  function readNonce(uint256 _space) public virtual view returns (uint256) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":938:1094  function readNonce(uint256 _space) public virtual view returns (uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":670:757  function nonce() external virtual view returns (uint256) {... */\n    tag_4:\n      tag_5\n      tag_12\n      jump\t// in\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":938:1094  function readNonce(uint256 _space) public virtual view returns (uint256) {... */\n    tag_8:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1002:1009  uint256 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1032:1088  ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)) */\n      tag_15\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":453:519  0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e */\n      0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1080:1086  _space */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1032:1060  ModuleStorage.readBytes32Map */\n      tag_16\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1032:1088  ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)) */\n      jump\t// in\n    tag_15:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":1024:1089  uint256(ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space))) */\n      swap3\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":938:1094  function readNonce(uint256 _space) public virtual view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":670:757  function nonce() external virtual view returns (uint256) {... */\n    tag_12:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":718:725  uint256 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":740:752  readNonce(0) */\n      tag_18\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":750:751  0 */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":740:749  readNonce */\n      tag_8\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":740:752  readNonce(0) */\n      jump\t// in\n    tag_18:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":733:752  return readNonce(0) */\n      swap1\n      pop\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":670:757  function nonce() external virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":490:677  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {... */\n    tag_16:\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":568:579  bytes32 val */\n      0x00\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":587:598  bytes32 key */\n      dup1\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":622:626  _key */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":628:635  _subKey */\n      dup4\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":611:636  abi.encode(_key, _subKey) */\n      add(0x20, mload(0x40))\n      tag_20\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":555:580   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":611:613   */\n      0x20\n        /* \"#utility.yul\":596:614   */\n      dup3\n      add\n        /* \"#utility.yul\":589:623   */\n      mstore\n        /* \"#utility.yul\":543:545   */\n      0x40\n        /* \"#utility.yul\":528:546   */\n      add\n      swap1\n        /* \"#utility.yul\":381:629   */\n      jump\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":611:636  abi.encode(_key, _subKey) */\n    tag_20:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":601:637  keccak256(abi.encode(_key, _subKey)) */\n      dup1\n      mload\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":611:636  abi.encode(_key, _subKey) */\n      0x20\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":601:637  keccak256(abi.encode(_key, _subKey)) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":661:671  sload(key) */\n      sload\n      swap5\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":490:677  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_24:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122096307c37b71eb1ad75d89220df55103f539339b39b69638a2d573cf67d84ea6164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610158806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638c3f55631461003b578063affed0e014610060575b600080fd5b61004e610049366004610109565b610068565b60405190815260200160405180910390f35b61004e61009a565b60006100947f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836100ab565b92915050565b60006100a66000610068565b905090565b60008083836040516020016100ca929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60006020828403121561011b57600080fd5b503591905056fea264697066735822122096307c37b71eb1ad75d89220df55103f539339b39b69638a2d573cf67d84ea6164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 PUSH1 0x0 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 ADDRESS PUSH29 0x37B71EB1AD75D89220DF55103F539339B39B69638A2D573CF67D84EA61 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "145:1931:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@nonce_955": {
									"entryPoint": 154,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@readBytes32Map_1178": {
									"entryPoint": 171,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readNonce_976": {
									"entryPoint": 104,
									"id": 976,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:631:22",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:22",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:22"
															},
															"nodeType": "YulIf",
															"src": "94:52:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:22",
														"type": ""
													}
												],
												"src": "14:180:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:22",
														"type": ""
													}
												],
												"src": "199:177:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "510:119:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "520:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "528:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "520:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "562:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "573:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "555:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "611:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:18:22"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "616:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:34:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "471:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "490:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "501:4:22",
														"type": ""
													}
												],
												"src": "381:248:22"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 22,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638c3f55631461003b578063affed0e014610060575b600080fd5b61004e610049366004610109565b610068565b60405190815260200160405180910390f35b61004e61009a565b60006100947f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836100ab565b92915050565b60006100a66000610068565b905090565b60008083836040516020016100ca929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60006020828403121561011b57600080fd5b503591905056fea264697066735822122096307c37b71eb1ad75d89220df55103f539339b39b69638a2d573cf67d84ea6164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 PUSH1 0x0 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 ADDRESS PUSH29 0x37B71EB1AD75D89220DF55103F539339B39B69638A2D573CF67D84EA61 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "145:1931:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:156;;;;;;:::i;:::-;;:::i;:::-;;;345:25:22;;;333:2;318:18;938:156:6;;;;;;;670:87;;;:::i;938:156::-;1002:7;1032:56;453:66;1080:6;1032:28;:56::i;:::-;1024:65;938:156;-1:-1:-1;;938:156:6:o;670:87::-;718:7;740:12;750:1;740:9;:12::i;:::-;733:19;;670:87;:::o;490:187:9:-;568:11;587;622:4;628:7;611:25;;;;;;;;555::22;;;611:2;596:18;;589:34;543:2;528:18;;381:248;611:25:9;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:9:o;14:180:22:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:22;;14:180;-1:-1:-1;14:180:22:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "68800",
								"executionCost": "117",
								"totalCost": "68917"
							},
							"external": {
								"nonce()": "2567",
								"readNonce(uint256)": "2584"
							},
							"internal": {
								"_validateNonce(uint256)": "infinite",
								"_writeNonce(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 2076,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096307c37b71eb1ad75d89220df55103f539339b39b69638a2d573cf67d84ea6164736f6c63430008120033",
									".code": [
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "8C3F5563"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "AFFED0E0"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 2076,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 938,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 938,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 670,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 453,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1032,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1032,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1089,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 938,
											"end": 1094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 670,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 718,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 740,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 740,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 733,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 733,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 677,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 490,
											"end": 677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 626,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 628,
											"end": 635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 555,
											"end": 580,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 555,
											"end": 580,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 555,
											"end": 580,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 611,
											"end": 613,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 614,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 596,
											"end": 614,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 589,
											"end": 623,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 546,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 528,
											"end": 546,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 381,
											"end": 629,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 611,
											"end": 636,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 637,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 661,
											"end": 671,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 661,
											"end": 671,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 490,
											"end": 677,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 490,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 22,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"nonce()": "affed0e0",
							"readNonce(uint256)": "8c3f5563"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":\"ModuleNonce\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"ModuleOnlyDelegatecall": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":65:420  contract ModuleOnlyDelegatecall {... */\n  mstore(0x40, 0xa0)\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":165:210  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":200:204  this */\n  address\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":185:205  self = address(this) */\n  0x80\n  mstore\n    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":65:420  contract ModuleOnlyDelegatecall {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ffc9d227228e624d76834105f24ceb5cb9c5a8675150ad2031c88a10259e303\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":65:420  contract ModuleOnlyDelegatecall {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201515345980b9c882b79d269c45fcfe8e69bce35d66d1c0de8bfe8dba0fe333fc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1068": {
									"entryPoint": null,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600f57600080fd5b5030608052608051603f602960003960005050603f6000f3fe6080604052600080fdfea26469706673582212201515345980b9c882b79d269c45fcfe8e69bce35d66d1c0de8bfe8dba0fe333fc64736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH1 0x3F PUSH1 0x29 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ISZERO CALLVALUE MSIZE DUP1 0xB9 0xC8 DUP3 0xB7 SWAP14 0x26 SWAP13 GASLIMIT 0xFC INVALID DUP15 PUSH10 0xBCE35D66D1C0DE8BFE8D 0xBA 0xF 0xE3 CALLER 0xFC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:355:7:-:0;;;165:45;;;;;;;;;-1:-1:-1;200:4:7;185:20;;65:355;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201515345980b9c882b79d269c45fcfe8e69bce35d66d1c0de8bfe8dba0fe333fc64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ISZERO CALLVALUE MSIZE DUP1 0xB9 0xC8 DUP3 0xB7 SWAP14 0x26 SWAP13 GASLIMIT 0xFC INVALID DUP15 PUSH10 0xBCE35D66D1C0DE8BFE8D 0xBA 0xF 0xE3 CALLER 0xFC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:355:7:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 210,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 210,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 165,
									"end": 210,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 210,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 200,
									"end": 204,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 185,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 185,
									"end": 205,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1055"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 420,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201515345980b9c882b79d269c45fcfe8e69bce35d66d1c0de8bfe8dba0fe333fc64736f6c63430008120033",
									".code": [
										{
											"begin": 65,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 420,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 65,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 420,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 65,
											"end": 420,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":\"ModuleOnlyDelegatecall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol": {
				"ModuleSelfAuth": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":65:281  contract ModuleSelfAuth {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":65:281  contract ModuleSelfAuth {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220396fc0aa947578a12e6d47ac958aa78118e45e6db5b5f8680d4fcb2019dc056664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220396fc0aa947578a12e6d47ac958aa78118e45e6db5b5f8680d4fcb2019dc056664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH16 0xC0AA947578A12E6D47AC958AA78118E4 0x5E PUSH14 0xB5B5F8680D4FCB2019DC05666473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "65:216:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220396fc0aa947578a12e6d47ac958aa78118e45e6db5b5f8680d4fcb2019dc056664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH16 0xC0AA947578A12E6D47AC958AA78118E4 0x5E PUSH14 0xB5B5F8680D4FCB2019DC05666473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "65:216:8:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 65,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 281,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220396fc0aa947578a12e6d47ac958aa78118e45e6db5b5f8680d4fcb2019dc056664736f6c63430008120033",
									".code": [
										{
											"begin": 65,
											"end": 281,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 281,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 65,
											"end": 281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 281,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 65,
											"end": 281,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":\"ModuleSelfAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol": {
				"ModuleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":65:679  library ModuleStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":65:679  library ModuleStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122055b5e58f321540dc1eb3c539fbeff9918a32f6db2cb889e0c660fd49a99fd80d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055b5e58f321540dc1eb3c539fbeff9918a32f6db2cb889e0c660fd49a99fd80d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xB5 0xE5 DUP16 ORIGIN ISZERO BLOCKHASH 0xDC 0x1E 0xB3 0xC5 CODECOPY 0xFB 0xEF 0xF9 SWAP2 DUP11 ORIGIN 0xF6 0xDB 0x2C 0xB8 DUP10 0xE0 0xC6 PUSH1 0xFD 0x49 0xA9 SWAP16 0xD8 0xD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:614:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:614:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055b5e58f321540dc1eb3c539fbeff9918a32f6db2cb889e0c660fd49a99fd80d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xB5 0xE5 DUP16 ORIGIN ISZERO BLOCKHASH 0xDC 0x1E 0xB3 0xC5 CODECOPY 0xFB 0xEF 0xF9 SWAP2 DUP11 ORIGIN 0xF6 0xDB 0x2C 0xB8 DUP10 0xE0 0xC6 PUSH1 0xFD 0x49 0xA9 SWAP16 0xD8 0xD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:614:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"readBytes32(bytes32)": "infinite",
								"readBytes32Map(bytes32,bytes32)": "infinite",
								"writeBytes32(bytes32,bytes32)": "infinite",
								"writeBytes32Map(bytes32,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 65,
									"end": 679,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055b5e58f321540dc1eb3c539fbeff9918a32f6db2cb889e0c660fd49a99fd80d64736f6c63430008120033",
									".code": [
										{
											"begin": 65,
											"end": 679,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 65,
											"end": 679,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 65,
											"end": 679,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 65,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 65,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 65,
											"end": 679,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":\"ModuleStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"IModuleAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"signatureRecovery(bytes32,bytes)": "853c5068",
							"updateImageHash(bytes32)": "29561426"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol\":\"IModuleAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"IModuleCalls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": "7a9a1628",
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": "61c2926c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol\":\"IModuleCalls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"IModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createContract(bytes)": "90042baf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol\":\"IModuleCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							}
						},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"SequenceBaseSig": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"kind": "dev",
						"methods": {},
						"title": "SequenceBaseSig Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":419:9536  library SequenceBaseSig {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":419:9536  library SequenceBaseSig {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208df7fadefb88448ef7f4d3ade6c9b119a5809f9dda955b39d53d545dfcdfed0a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208df7fadefb88448ef7f4d3ade6c9b119a5809f9dda955b39d53d545dfcdfed0a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xF7 STATICCALL 0xDE 0xFB DUP9 PREVRANDAO DUP15 0xF7 DELEGATECALL 0xD3 0xAD 0xE6 0xC9 0xB1 NOT 0xA5 DUP1 SWAP16 SWAP14 0xDA SWAP6 JUMPDEST CODECOPY 0xD5 RETURNDATASIZE SLOAD 0x5D 0xFC 0xDF 0xED EXP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "419:9117:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;419:9117:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208df7fadefb88448ef7f4d3ade6c9b119a5809f9dda955b39d53d545dfcdfed0a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xF7 STATICCALL 0xDE 0xFB DUP9 PREVRANDAO DUP15 0xF7 DELEGATECALL 0xD3 0xAD 0xE6 0xC9 0xB1 NOT 0xA5 DUP1 SWAP16 SWAP14 0xDA SWAP6 JUMPDEST CODECOPY 0xD5 RETURNDATASIZE SLOAD 0x5D 0xFC 0xDF 0xED EXP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "419:9117:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_leafForAddressAndWeight(address,uint96)": "infinite",
								"_leafForHardcodedSubdigest(bytes32)": "infinite",
								"_leafForNested(bytes32,uint256,uint256)": "infinite",
								"recover(bytes32,bytes calldata)": "infinite",
								"recoverBranch(bytes32,bytes calldata)": "infinite",
								"subdigest(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 419,
									"end": 9536,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208df7fadefb88448ef7f4d3ade6c9b119a5809f9dda955b39d53d545dfcdfed0a64736f6c63430008120033",
									".code": [
										{
											"begin": 419,
											"end": 9536,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 419,
											"end": 9536,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SequenceBaseSig Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A Solidity implementation for handling signatures in the Sequence protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":\"SequenceBaseSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A Solidity implementation for handling signatures in the Sequence protocol.",
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"SequenceChainedSig": {
					"abi": [
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "The delegations can be chained together, the first signature is the one that is used to validate      the message, the last signature must match the current on-chain configuration of the wallet.",
						"kind": "dev",
						"methods": {
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"title": "Sequence chained auth recovery submodule",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"SET_IMAGE_HASH_TYPE_HASH()": "57c56d6b",
							"signatureRecovery(bytes32,bytes)": "853c5068",
							"updateImageHash(bytes32)": "29561426"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"The delegations can be chained together, the first signature is the one that is used to validate      the message, the last signature must match the current on-chain configuration of the wallet.\",\"kind\":\"dev\",\"methods\":{\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"title\":\"Sequence chained auth recovery submodule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"notice\":\"Defines Sequence signatures that work by delegating control to new configurations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":\"SequenceChainedSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"notice": "Defines Sequence signatures that work by delegating control to new configurations.",
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"SequenceDynamicSig": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":98:912  library SequenceDynamicSig {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":98:912  library SequenceDynamicSig {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220988e7a0efd834caf932b23f5964fd75fc66e99c5c9a0302666625fa77c52b63864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220988e7a0efd834caf932b23f5964fd75fc66e99c5c9a0302666625fa77c52b63864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP15 PUSH27 0xEFD834CAF932B23F5964FD75FC66E99C5C9A0302666625FA77C52 0xB6 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "98:814:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:814:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220988e7a0efd834caf932b23f5964fd75fc66e99c5c9a0302666625fa77c52b63864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP15 PUSH27 0xEFD834CAF932B23F5964FD75FC66E99C5C9A0302666625FA77C52 0xB6 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "98:814:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"recover(bytes32,bytes calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 98,
									"end": 912,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220988e7a0efd834caf932b23f5964fd75fc66e99c5c9a0302666625fa77c52b63864736f6c63430008120033",
									".code": [
										{
											"begin": 98,
											"end": 912,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 98,
											"end": 912,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 98,
											"end": 912,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 98,
											"end": 912,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 912,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 912,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 98,
											"end": 912,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 912,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 98,
											"end": 912,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":\"SequenceDynamicSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"SequenceNoChainIdSig": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":65:619  library SequenceNoChainIdSig {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":65:619  library SequenceNoChainIdSig {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017d1b2b94cb2d25bb2c8abe419506b6917bfa14841e22660d017f50ee442141b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017d1b2b94cb2d25bb2c8abe419506b6917bfa14841e22660d017f50ee442141b64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xD1 0xB2 0xB9 0x4C 0xB2 0xD2 JUMPDEST 0xB2 0xC8 0xAB 0xE4 NOT POP PUSH12 0x6917BFA14841E22660D017F5 0xE 0xE4 TIMESTAMP EQ SHL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:554:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:554:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017d1b2b94cb2d25bb2c8abe419506b6917bfa14841e22660d017f50ee442141b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xD1 0xB2 0xB9 0x4C 0xB2 0xD2 JUMPDEST 0xB2 0xC8 0xAB 0xE4 NOT POP PUSH12 0x6917BFA14841E22660D017F5 0xE 0xE4 TIMESTAMP EQ SHL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:554:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"subdigest(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 65,
									"end": 619,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017d1b2b94cb2d25bb2c8abe419506b6917bfa14841e22660d017f50ee442141b64736f6c63430008120033",
									".code": [
										{
											"begin": 65,
											"end": 619,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 65,
											"end": 619,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 65,
											"end": 619,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 65,
											"end": 619,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 619,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 619,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 65,
											"end": 619,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 619,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 65,
											"end": 619,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":\"SequenceNoChainIdSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"SubModuleNonce": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":65:751  library SubModuleNonce {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":65:751  library SubModuleNonce {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208609e09d11153aed5ba8eb4ae9c6915a536fd4523605bce53bc4a2f1e304f84264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208609e09d11153aed5ba8eb4ae9c6915a536fd4523605bce53bc4a2f1e304f84264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 MULMOD 0xE0 SWAP14 GT ISZERO GASPRICE 0xED JUMPDEST 0xA8 0xEB 0x4A 0xE9 0xC6 SWAP2 GAS MSTORE8 PUSH16 0xD4523605BCE53BC4A2F1E304F8426473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "65:686:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:686:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208609e09d11153aed5ba8eb4ae9c6915a536fd4523605bce53bc4a2f1e304f84264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 MULMOD 0xE0 SWAP14 GT ISZERO GASPRICE 0xED JUMPDEST 0xA8 0xEB 0x4A 0xE9 0xC6 SWAP2 GAS MSTORE8 PUSH16 0xD4523605BCE53BC4A2F1E304F8426473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "65:686:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"decodeNonce(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 65,
									"end": 751,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208609e09d11153aed5ba8eb4ae9c6915a536fd4523605bce53bc4a2f1e304f84264736f6c63430008120033",
									".code": [
										{
											"begin": 65,
											"end": 751,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 65,
											"end": 751,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 65,
											"end": 751,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 65,
											"end": 751,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 751,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 751,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 65,
											"end": 751,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 751,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 65,
											"end": 751,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":\"SubModuleNonce\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol": {
				"LibBytes": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.",
						"kind": "dev",
						"methods": {},
						"title": "Library for reading data from bytes arrays",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":405:2096  library LibBytes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":405:2096  library LibBytes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b00d0cee4061dc303d853fadda969d1de6324d7d0f32be48bae08404d30b621f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b00d0cee4061dc303d853fadda969d1de6324d7d0f32be48bae08404d30b621f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xD 0xC 0xEE BLOCKHASH PUSH2 0xDC30 RETURNDATASIZE DUP6 EXTCODEHASH 0xAD 0xDA SWAP7 SWAP14 SAR 0xE6 ORIGIN 0x4D PUSH30 0xF32BE48BAE08404D30B621F64736F6C6343000812003300000000000000 ",
							"sourceMap": "405:1691:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;405:1691:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b00d0cee4061dc303d853fadda969d1de6324d7d0f32be48bae08404d30b621f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xD 0xC 0xEE BLOCKHASH PUSH2 0xDC30 RETURNDATASIZE DUP6 EXTCODEHASH 0xAD 0xDA SWAP7 SWAP14 SAR 0xE6 ORIGIN 0x4D PUSH30 0xF32BE48BAE08404D30B621F64736F6C6343000812003300000000000000 ",
							"sourceMap": "405:1691:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"readBytes32(bytes calldata,uint256)": "infinite",
								"readFirstUint16(bytes calldata)": "infinite",
								"readUint32(bytes calldata,uint256)": "infinite",
								"readUint8(bytes calldata,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 405,
									"end": 2096,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b00d0cee4061dc303d853fadda969d1de6324d7d0f32be48bae08404d30b621f64736f6c63430008120033",
									".code": [
										{
											"begin": 405,
											"end": 2096,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 405,
											"end": 2096,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reading data from bytes arrays\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for reading data from bytes arrays.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":\"LibBytes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for reading data from bytes arrays.",
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol": {
				"LibBytesPointer": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.",
						"kind": "dev",
						"methods": {},
						"title": "Library for reading data from bytes arrays with a pointer",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":435:4565  library LibBytesPointer {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":435:4565  library LibBytesPointer {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0f4a33b1bd37a24b174a2b3b0b481e96309d638af5db4e4de3ac1de1aa243ff64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0f4a33b1bd37a24b174a2b3b0b481e96309d638af5db4e4de3ac1de1aa243ff64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DELEGATECALL LOG3 EXTCODESIZE SHL 0xD3 PUSH27 0x24B174A2B3B0B481E96309D638AF5DB4E4DE3AC1DE1AA243FF6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "435:4130:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;435:4130:19;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0f4a33b1bd37a24b174a2b3b0b481e96309d638af5db4e4de3ac1de1aa243ff64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DELEGATECALL LOG3 EXTCODESIZE SHL 0xD3 PUSH27 0x24B174A2B3B0B481E96309D638AF5DB4E4DE3AC1DE1AA243FF6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "435:4130:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"readBytes32(bytes calldata,uint256)": "infinite",
								"readFirstUint16(bytes calldata)": "infinite",
								"readUint16(bytes calldata,uint256)": "infinite",
								"readUint24(bytes calldata,uint256)": "infinite",
								"readUint64(bytes calldata,uint256)": "infinite",
								"readUint8(bytes calldata,uint256)": "infinite",
								"readUint8Address(bytes calldata,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 435,
									"end": 4565,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0f4a33b1bd37a24b174a2b3b0b481e96309d638af5db4e4de3ac1de1aa243ff64736f6c63430008120033",
									".code": [
										{
											"begin": 435,
											"end": 4565,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 435,
											"end": 4565,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reading data from bytes arrays with a pointer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for reading data from bytes arrays with a pointer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":\"LibBytesPointer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for reading data from bytes arrays with a pointer.",
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol": {
				"LibOptim": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"kind": "dev",
						"methods": {},
						"title": "Library for optimized EVM operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":244:2587  library LibOptim {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":244:2587  library LibOptim {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f4f74640fb3a38d4d73f90f221f7f681ee2035d59f6b9d140c2e9aad1ae2bac64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f4f74640fb3a38d4d73f90f221f7f681ee2035d59f6b9d140c2e9aad1ae2bac64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x4F PUSH21 0x640FB3A38D4D73F90F221F7F681EE2035D59F6B9D1 BLOCKHASH 0xC2 0xE9 0xAA 0xD1 0xAE 0x2B 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "244:2343:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:2343:20;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f4f74640fb3a38d4d73f90f221f7f681ee2035d59f6b9d140c2e9aad1ae2bac64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x4F PUSH21 0x640FB3A38D4D73F90F221F7F681EE2035D59F6B9D1 BLOCKHASH 0xC2 0xE9 0xAA 0xD1 0xAE 0x2B 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "244:2343:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"call(address,uint256,uint256,bytes calldata)": "infinite",
								"delegatecall(address,uint256,bytes calldata)": "infinite",
								"fkeccak256(bytes32,bytes32)": "infinite",
								"returnData()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 244,
									"end": 2587,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f4f74640fb3a38d4d73f90f221f7f681ee2035d59f6b9d140c2e9aad1ae2bac64736f6c63430008120033",
									".code": [
										{
											"begin": 244,
											"end": 2587,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 244,
											"end": 2587,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for optimized EVM operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for optimizing certain EVM operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":\"LibOptim\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for optimizing certain EVM operations.",
						"version": 1
					}
				}
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol": {
				"SignatureValidator": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contains logic for signature validation. Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md) Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":430:5364  library SignatureValidator {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":430:5364  library SignatureValidator {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207a75fc4c1f66fe757bfffc4be7a9fe45a8e63a8665fbf6a76ca76ea37740ce0c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207a75fc4c1f66fe757bfffc4be7a9fe45a8e63a8665fbf6a76ca76ea37740ce0c64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x75FC4C1F66FE757BFFFC4BE7A9FE45A8E63A8665FBF6A76CA76EA3 PUSH24 0x40CE0C64736F6C6343000812003300000000000000000000 ",
							"sourceMap": "430:4934:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;430:4934:21;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207a75fc4c1f66fe757bfffc4be7a9fe45a8e63a8665fbf6a76ca76ea37740ce0c64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x75FC4C1F66FE757BFFFC4BE7A9FE45A8E63A8665FBF6A76CA76EA3 PUSH24 0x40CE0C64736F6C6343000812003300000000000000000000 ",
							"sourceMap": "430:4934:21:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"isValidSignature(bytes32,address,bytes calldata)": "infinite",
								"recoverSigner(bytes32,bytes calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "B"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "BYTE",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "ADDRESS",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "MSTORE8",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 430,
									"end": 5364,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a75fc4c1f66fe757bfffc4be7a9fe45a8e63a8665fbf6a76ca76ea37740ce0c64736f6c63430008120033",
									".code": [
										{
											"begin": 430,
											"end": 5364,
											"name": "PUSHDEPLOYADDRESS",
											"source": 21
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 430,
											"end": 5364,
											"name": "REVERT",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
								"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contains logic for signature validation. Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md) Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":\"SignatureValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						]
					},
					"id": 23,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271Wallet",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "IERC1271Wallet",
							"nameLocation": "75:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "95:633:0",
										"text": " @notice Verifies whether the provided signature is valid with respect to the provided data\n @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   > This function MAY modify Ethereum's state\n @param _data       Arbitrary length data signed on the behalf of address(this)\n @param _signature  Signature byte array associated with _data\n @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
									},
									"functionSelector": "20c13b0b",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "740:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "762:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "803:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "788:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "788:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:58:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "857:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "850:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 8,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "850:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:19:0"
									},
									"scope": 22,
									"src": "731:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "873:604:0",
										"text": " @notice Verifies whether the provided signature is valid with respect to the provided hash\n @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   > This function MAY modify Ethereum's state\n @param _hash       keccak256 hash that was signed\n @param _signature  Signature byte array associated with _data\n @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
									},
									"functionSelector": "1626ba7e",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "1489:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "1519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 13,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1545:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1530:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1530:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:51:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "1599:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 18,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:19:0"
									},
									"scope": 22,
									"src": "1480:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 23,
							"src": "65:1548:0",
							"usedErrors": []
						}
					],
					"src": "39:1574:0"
				},
				"id": 0
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/GuestModule.sol",
					"exportedSymbols": {
						"GuestModule": [
							241
						],
						"IERC1271Wallet": [
							22
						],
						"IModuleAuth": [
							1249
						],
						"IModuleCalls": [
							1313
						],
						"IModuleCreator": [
							1328
						],
						"LibBytes": [
							2374
						],
						"LibBytesPointer": [
							2476
						],
						"LibOptim": [
							2530
						],
						"ModuleAuth": [
							564
						],
						"ModuleCalls": [
							833
						],
						"ModuleCreator": [
							902
						],
						"ModuleERC165": [
							920
						],
						"ModuleNonce": [
							1051
						],
						"ModuleOnlyDelegatecall": [
							1085
						],
						"ModuleSelfAuth": [
							1116
						],
						"ModuleStorage": [
							1179
						],
						"SequenceBaseSig": [
							2021
						],
						"SequenceChainedSig": [
							2218
						],
						"SequenceDynamicSig": [
							2247
						],
						"SequenceNoChainIdSig": [
							2275
						],
						"SignatureValidator": [
							2798
						],
						"SubModuleNonce": [
							2324
						]
					},
					"id": 242,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
							"file": "../utils/LibOptim.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 2531,
							"src": "64:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
							"file": "./commons/submodules/auth/SequenceBaseSig.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 2022,
							"src": "97:55:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
							"file": "./commons/ModuleAuth.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 565,
							"src": "154:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
							"file": "./commons/ModuleCalls.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 834,
							"src": "189:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
							"file": "./commons/ModuleCreator.sol",
							"id": 29,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 903,
							"src": "225:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 31,
										"name": "ModuleAuth",
										"nameLocations": [
											"666:10:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 564,
										"src": "666:10:1"
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "666:10:1"
								},
								{
									"baseName": {
										"id": 33,
										"name": "ModuleCalls",
										"nameLocations": [
											"680:11:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "680:11:1"
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "680:11:1"
								},
								{
									"baseName": {
										"id": 35,
										"name": "ModuleCreator",
										"nameLocations": [
											"695:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "695:13:1"
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "695:13:1"
								}
							],
							"canonicalName": "GuestModule",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 30,
								"nodeType": "StructuredDocumentation",
								"src": "265:374:1",
								"text": " GuestModule implements a Sequence wallet without signatures, nonce or replay protection.\n executing transactions using this wallet is not an authenticated process, and can be done by any address.\n @notice This contract is completely public with no security, designed to execute pre-signed transactions\n   and use Sequence tools without using the wallets."
							},
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241,
								902,
								833,
								1051,
								564,
								2218,
								1116,
								1085,
								22,
								920,
								1328,
								1249,
								1313
							],
							"name": "GuestModule",
							"nameLocation": "649:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "230d1ccc",
									"id": 40,
									"name": "DelegateCallNotAllowed",
									"nameLocation": "719:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "750:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "742:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:16:1"
									},
									"src": "713:45:1"
								},
								{
									"errorSelector": "a0387940",
									"id": 42,
									"name": "NotSupported",
									"nameLocation": "767:12:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"src": "761:21:1"
								},
								{
									"baseFunctions": [
										637
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "993:189:1",
										"statements": [
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "txHash",
														"nameLocation": "1038:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "1030:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 55,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1030:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "67756573743a",
																			"id": 62,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1094:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682",
																				"typeString": "literal_string \"guest:\""
																			},
																			"value": "guest:"
																		},
																		{
																			"id": 63,
																			"name": "_txs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 47,
																			"src": "1104:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682",
																				"typeString": "literal_string \"guest:\""
																			},
																			{
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		],
																		"expression": {
																			"id": 60,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1083:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1087:6:1",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "1083:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1083:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 59,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1073:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1073:37:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 57,
															"name": "SequenceBaseSig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "1047:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																"typeString": "type(library SequenceBaseSig)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1063:9:1",
														"memberName": "subdigest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1394,
														"src": "1047:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1030:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1164:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 70,
															"name": "_txs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														],
														"id": 68,
														"name": "_executeGuest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1150:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (bytes32,struct IModuleCalls.Transaction calldata[] calldata)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1150:27:1"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "786:101:1",
										"text": " @notice Allow any caller to execute an action\n @param _txs Transactions to process"
									},
									"functionSelector": "7a9a1628",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "899:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 53,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "984:8:1"
									},
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "935:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "912:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 45,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 44,
															"name": "Transaction",
															"nameLocations": [
																"912:11:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "912:11:1"
														},
														"referencedDeclaration": 1292,
														"src": "912:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 46,
													"nodeType": "ArrayTypeName",
													"src": "912:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "945:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "958:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 50,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "958:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:70:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:1"
									},
									"scope": 241,
									"src": "890:292:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										667
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1364:188:1",
										"statements": [
											{
												"assignments": [
													84
												],
												"declarations": [
													{
														"constant": false,
														"id": 84,
														"mutability": "mutable",
														"name": "txHash",
														"nameLocation": "1409:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "1401:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 83,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1401:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "73656c663a",
																			"id": 90,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1465:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845",
																				"typeString": "literal_string \"self:\""
																			},
																			"value": "self:"
																		},
																		{
																			"id": 91,
																			"name": "_txs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "1474:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845",
																				"typeString": "literal_string \"self:\""
																			},
																			{
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		],
																		"expression": {
																			"id": 88,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1454:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1458:6:1",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "1454:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1454:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 87,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1444:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1444:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 85,
															"name": "SequenceBaseSig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "1418:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																"typeString": "type(library SequenceBaseSig)"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1434:9:1",
														"memberName": "subdigest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1394,
														"src": "1418:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1401:80:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 97,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1534:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 98,
															"name": "_txs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1542:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														],
														"id": 96,
														"name": "_executeGuest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1520:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (bytes32,struct IModuleCalls.Transaction calldata[] calldata)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1520:27:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1186:101:1",
										"text": " @notice Allow any caller to execute an action\n @param _txs Transactions to process"
									},
									"functionSelector": "61c2926c",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "selfExecute",
									"nameLocation": "1299:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1355:8:1"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "1339:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1316:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 77,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 76,
															"name": "Transaction",
															"nameLocations": [
																"1316:11:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "1316:11:1"
														},
														"referencedDeclaration": 1292,
														"src": "1316:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 78,
													"nodeType": "ArrayTypeName",
													"src": "1316:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:37:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:1"
									},
									"scope": 241,
									"src": "1290:262:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1799:745:1",
										"statements": [
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1840:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "1832:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1832:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"expression": {
														"id": 114,
														"name": "_txs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1847:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1852:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1847:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1832:26:1"
											},
											{
												"body": {
													"id": 196,
													"nodeType": "Block",
													"src": "1899:641:1",
													"statements": [
														{
															"assignments": [
																129
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 129,
																	"mutability": "mutable",
																	"name": "transaction",
																	"nameLocation": "1928:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 196,
																	"src": "1907:32:1",
																	"stateVariable": false,
																	"storageLocation": "calldata",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																		"typeString": "struct IModuleCalls.Transaction"
																	},
																	"typeName": {
																		"id": 128,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 127,
																			"name": "Transaction",
																			"nameLocations": [
																				"1907:11:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1292,
																			"src": "1907:11:1"
																		},
																		"referencedDeclaration": 1292,
																		"src": "1907:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
																			"typeString": "struct IModuleCalls.Transaction"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 133,
															"initialValue": {
																"baseExpression": {
																	"id": 130,
																	"name": "_txs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1942:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																	}
																},
																"id": 132,
																"indexExpression": {
																	"id": 131,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "1947:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1942:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																	"typeString": "struct IModuleCalls.Transaction calldata"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1907:42:1"
														},
														{
															"condition": {
																"expression": {
																	"id": 134,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1962:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																		"typeString": "struct IModuleCalls.Transaction calldata"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1974:12:1",
																"memberName": "delegateCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1281,
																"src": "1962:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 140,
															"nodeType": "IfStatement",
															"src": "1958:62:1",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 137,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 118,
																			"src": "2018:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 136,
																		"name": "DelegateCallNotAllowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "1995:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																			"typeString": "function (uint256) pure"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1995:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 139,
																"nodeType": "RevertStatement",
																"src": "1988:32:1"
															}
														},
														{
															"assignments": [
																142
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 142,
																	"mutability": "mutable",
																	"name": "gasLimit",
																	"nameLocation": "2037:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 196,
																	"src": "2029:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 141,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2029:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 145,
															"initialValue": {
																"expression": {
																	"id": 143,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "2048:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																		"typeString": "struct IModuleCalls.Transaction calldata"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2060:8:1",
																"memberName": "gasLimit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1285,
																"src": "2048:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2029:39:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 146,
																		"name": "gasleft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967289,
																		"src": "2080:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2080:9:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 148,
																	"name": "gasLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2092:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2080:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 157,
															"nodeType": "IfStatement",
															"src": "2076:69:1",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 151,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 118,
																			"src": "2122:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 152,
																			"name": "gasLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "2125:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 153,
																				"name": "gasleft",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967289,
																				"src": "2135:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2135:9:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 150,
																		"name": "NotEnoughGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "2109:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256,uint256) pure"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2109:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 156,
																"nodeType": "RevertStatement",
																"src": "2102:43:1"
															}
														},
														{
															"assignments": [
																159
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 159,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "2159:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 196,
																	"src": "2154:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 158,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2154:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 176,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 162,
																			"name": "transaction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "2192:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata"
																			}
																		},
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2204:6:1",
																		"memberName": "target",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1287,
																		"src": "2192:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 164,
																			"name": "transaction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "2220:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2232:5:1",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1289,
																		"src": "2220:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 166,
																				"name": "gasLimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 142,
																				"src": "2247:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2259:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2247:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 171,
																			"name": "gasLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "2275:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2247:36:1",
																		"trueExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 169,
																				"name": "gasleft",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967289,
																				"src": "2263:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2263:9:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 173,
																			"name": "transaction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "2293:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata"
																			}
																		},
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2305:4:1",
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1291,
																		"src": "2293:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 160,
																		"name": "LibOptim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "2169:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																			"typeString": "type(library LibOptim)"
																		}
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2178:4:1",
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2515,
																	"src": "2169:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
																		"typeString": "function (address,uint256,uint256,bytes calldata) returns (bool)"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2169:148:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2154:163:1"
														},
														{
															"condition": {
																"id": 177,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2330:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 194,
																"nodeType": "Block",
																"src": "2391:143:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 185,
																						"name": "transaction",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "2425:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																							"typeString": "struct IModuleCalls.Transaction calldata"
																						}
																					},
																					"id": 186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2437:13:1",
																					"memberName": "revertOnError",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1283,
																					"src": "2425:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"id": 187,
																					"name": "_txHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 105,
																					"src": "2462:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 188,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 118,
																					"src": "2481:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 189,
																							"name": "LibOptim",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2530,
																							"src": "2494:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																								"typeString": "type(library LibOptim)"
																							}
																						},
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2503:10:1",
																						"memberName": "returnData",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2499,
																						"src": "2494:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 191,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2494:21:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 184,
																				"name": "_revertBytes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "2401:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (bool,bytes32,uint256,bytes memory)"
																				}
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2401:124:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 193,
																		"nodeType": "ExpressionStatement",
																		"src": "2401:124:1"
																	}
																]
															},
															"id": 195,
															"nodeType": "IfStatement",
															"src": "2326:208:1",
															"trueBody": {
																"id": 183,
																"nodeType": "Block",
																"src": "2339:46:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 179,
																					"name": "_txHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 105,
																					"src": "2365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 180,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 118,
																					"src": "2374:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 178,
																				"name": "TxExecuted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "2354:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
																					"typeString": "function (bytes32,uint256)"
																				}
																			},
																			"id": 181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2354:22:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 182,
																		"nodeType": "EmitStatement",
																		"src": "2349:27:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 121,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1884:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 122,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1884:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 197,
												"initializationExpression": {
													"assignments": [
														118
													],
													"declarations": [
														{
															"constant": false,
															"id": 118,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1877:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 197,
															"src": "1869:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 117,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1869:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 120,
													"initialValue": {
														"hexValue": "30",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1881:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1869:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1894:3:1",
														"subExpression": {
															"id": 124,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1894:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ExpressionStatement",
													"src": "1894:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1864:676:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1556:151:1",
										"text": " @notice Executes a list of transactions\n @param _txHash  Hash of the batch of transactions\n @param _txs  Transactions to execute"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeGuest",
									"nameLocation": "1719:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_txHash",
												"nameLocation": "1746:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1738:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "1782:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1759:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 107,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 106,
															"name": "Transaction",
															"nameLocations": [
																"1759:11:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "1759:11:1"
														},
														"referencedDeclaration": 1292,
														"src": "1759:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 108,
													"nodeType": "ArrayTypeName",
													"src": "1759:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:58:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1799:0:1"
									},
									"scope": 241,
									"src": "1710:834:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1236
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "2766:22:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 207,
												"id": 209,
												"nodeType": "Return",
												"src": "2772:11:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "2548:145:1",
										"text": " @notice Validates any signature image, because the wallet is public and has no owner.\n @return true, all signatures are valid."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidImage",
									"nameLocation": "2705:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2737:8:1"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2719:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:9:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2760:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2760:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:6:1"
									},
									"scope": 241,
									"src": "2696:92:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2885:32:1",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 218,
														"name": "NotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2898:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "RevertStatement",
												"src": "2891:21:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "2792:29:1",
										"text": " Not supported."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateImageHash",
									"nameLocation": "2833:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 216,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2868:8:1"
									},
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2850:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2849:9:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2885:0:1"
									},
									"scope": 241,
									"src": "2824:93:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										549,
										832,
										901
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3276:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "_interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3313:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 234,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3289:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GuestModule_$241_$",
																"typeString": "type(contract super GuestModule)"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3295:17:1",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "3289:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) pure returns (bool)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 233,
												"id": 238,
												"nodeType": "Return",
												"src": "3282:44:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2921:203:1",
										"text": " @notice Query if a contract implements an interface\n @param _interfaceID The interface identifier, as specified in ERC-165\n @return `true` if the contract implements `_interfaceID`"
									},
									"functionSelector": "01ffc9a7",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3136:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 227,
												"name": "ModuleAuth",
												"nameLocations": [
													"3205:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 564,
												"src": "3205:10:1"
											},
											{
												"id": 228,
												"name": "ModuleCalls",
												"nameLocations": [
													"3221:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 833,
												"src": "3221:11:1"
											},
											{
												"id": 229,
												"name": "ModuleCreator",
												"nameLocations": [
													"3238:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "3238:13:1"
											}
										],
										"src": "3190:65:1"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "3166:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3159:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 224,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3159:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:29:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3270:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3270:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3269:6:1"
									},
									"scope": 241,
									"src": "3127:204:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 242,
							"src": "640:2693:1",
							"usedErrors": [
								40,
								42,
								938,
								1057,
								1093,
								1193,
								1197,
								1273,
								1279,
								1319,
								1367,
								1371,
								2050,
								2056,
								2539,
								2541,
								2547,
								2553,
								2561,
								2565
							]
						}
					],
					"src": "39:3295:1"
				},
				"id": 1
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleAuth.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						],
						"IModuleAuth": [
							1249
						],
						"LibBytes": [
							2374
						],
						"LibBytesPointer": [
							2476
						],
						"LibOptim": [
							2530
						],
						"ModuleAuth": [
							564
						],
						"ModuleERC165": [
							920
						],
						"ModuleSelfAuth": [
							1116
						],
						"ModuleStorage": [
							1179
						],
						"SequenceBaseSig": [
							2021
						],
						"SequenceChainedSig": [
							2218
						],
						"SequenceDynamicSig": [
							2247
						],
						"SequenceNoChainIdSig": [
							2275
						],
						"SignatureValidator": [
							2798
						]
					},
					"id": 565,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
							"file": "../../utils/LibBytes.sol",
							"id": 244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 2375,
							"src": "64:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
							"file": "../../interfaces/IERC1271Wallet.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 23,
							"src": "99:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
							"file": "./interfaces/IModuleAuth.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 1250,
							"src": "146:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
							"file": "./ModuleERC165.sol",
							"id": 247,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 921,
							"src": "186:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
							"file": "./submodules/auth/SequenceBaseSig.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 2022,
							"src": "216:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
							"file": "./submodules/auth/SequenceDynamicSig.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 2248,
							"src": "264:50:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
							"file": "./submodules/auth/SequenceNoChainIdSig.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 2276,
							"src": "315:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
							"file": "./submodules/auth/SequenceChainedSig.sol",
							"id": 251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 2219,
							"src": "368:50:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "IModuleAuth",
										"nameLocations": [
											"455:11:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "455:11:2"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "455:11:2"
								},
								{
									"baseName": {
										"id": 254,
										"name": "ModuleERC165",
										"nameLocations": [
											"470:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 920,
										"src": "470:12:2"
									},
									"id": 255,
									"nodeType": "InheritanceSpecifier",
									"src": "470:12:2"
								},
								{
									"baseName": {
										"id": 256,
										"name": "IERC1271Wallet",
										"nameLocations": [
											"486:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 22,
										"src": "486:14:2"
									},
									"id": 257,
									"nodeType": "InheritanceSpecifier",
									"src": "486:14:2"
								},
								{
									"baseName": {
										"id": 258,
										"name": "SequenceChainedSig",
										"nameLocations": [
											"504:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2218,
										"src": "504:18:2"
									},
									"id": 259,
									"nodeType": "InheritanceSpecifier",
									"src": "504:18:2"
								}
							],
							"canonicalName": "ModuleAuth",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 564,
							"linearizedBaseContracts": [
								564,
								2218,
								1116,
								22,
								920,
								1249
							],
							"name": "ModuleAuth",
							"nameLocation": "439:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 262,
									"libraryName": {
										"id": 260,
										"name": "LibBytes",
										"nameLocations": [
											"533:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2374,
										"src": "533:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "527:25:2",
									"typeName": {
										"id": 261,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "546:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"id": 265,
									"mutability": "constant",
									"name": "LEGACY_TYPE",
									"nameLocation": "581:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "556:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 263,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "556:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"hexValue": "00",
										"id": 264,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "hexString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "595:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a",
											"typeString": "literal_string hex\"00\""
										},
										"value": "\u0000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 268,
									"mutability": "constant",
									"name": "DYNAMIC_TYPE",
									"nameLocation": "631:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "606:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 266,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "606:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"hexValue": "01",
										"id": 267,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "hexString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "646:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2",
											"typeString": "literal_string hex\"01\""
										},
										"value": "\u0001"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 271,
									"mutability": "constant",
									"name": "NO_CHAIN_ID_TYPE",
									"nameLocation": "682:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "657:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 269,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "657:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"hexValue": "02",
										"id": 270,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "hexString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "701:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2",
											"typeString": "literal_string hex\"02\""
										},
										"value": "\u0002"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 274,
									"mutability": "constant",
									"name": "CHAINED_TYPE",
									"nameLocation": "737:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "712:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 272,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "712:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"hexValue": "03",
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "hexString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_69c322e3248a5dfc29d73c5b0553b0185a35cd5bb6386747517ef7e53b15e287",
											"typeString": "literal_string hex\"03\""
										},
										"value": "\u0003"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 277,
									"mutability": "constant",
									"name": "SELECTOR_ERC1271_BYTES_BYTES",
									"nameLocation": "789:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "764:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 275,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "764:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783230633133623062",
										"id": 276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "820:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_549534475_by_1",
											"typeString": "int_const 549534475"
										},
										"value": "0x20c13b0b"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 280,
									"mutability": "constant",
									"name": "SELECTOR_ERC1271_BYTES32_BYTES",
									"nameLocation": "859:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "834:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 278,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "834:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783136323662613765",
										"id": 279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "892:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_371636862_by_1",
											"typeString": "int_const 371636862"
										},
										"value": "0x1626ba7e"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1225
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1913:1248:2",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "signatureType",
														"nameLocation": "1926:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 412,
														"src": "1919:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"typeName": {
															"id": 299,
															"name": "bytes1",
															"nodeType": "ElementaryTypeName",
															"src": "1919:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"baseExpression": {
														"id": 301,
														"name": "_signature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1942:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"id": 303,
													"indexExpression": {
														"hexValue": "30",
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1953:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1942:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1919:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "signatureType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1966:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 306,
														"name": "LEGACY_TYPE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1983:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "1966:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "1962:303:2",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "1996:269:2",
													"statements": [
														{
															"expression": {
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 308,
																	"name": "subdigest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "2045:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 311,
																			"name": "_digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "2083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 309,
																			"name": "SequenceBaseSig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "2057:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																				"typeString": "type(library SequenceBaseSig)"
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2073:9:2",
																		"memberName": "subdigest",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1394,
																		"src": "2057:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32) view returns (bytes32)"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2057:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2045:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 314,
															"nodeType": "ExpressionStatement",
															"src": "2045:46:2"
														},
														{
															"expression": {
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 315,
																			"name": "threshold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "2100:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 316,
																			"name": "weight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2111:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 317,
																			"name": "imageHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "2119:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 318,
																			"name": "checkpoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 297,
																			"src": "2130:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 319,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "2099:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 322,
																			"name": "subdigest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "2168:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 323,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "2179:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 320,
																			"name": "SequenceBaseSig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "2144:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																				"typeString": "type(library SequenceBaseSig)"
																			}
																		},
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2160:7:2",
																		"memberName": "recover",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2020,
																		"src": "2144:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																			"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,uint256)"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2144:46:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,uint256)"
																	}
																},
																"src": "2099:91:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "ExpressionStatement",
															"src": "2099:91:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 327,
																		"name": "threshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "2206:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 328,
																		"name": "weight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "2217:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 329,
																		"name": "imageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "2225:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 330,
																		"name": "subdigest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2236:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 331,
																		"name": "checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "2247:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 332,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2205:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
																}
															},
															"functionReturnParameters": 298,
															"id": 333,
															"nodeType": "Return",
															"src": "2198:60:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 336,
														"name": "signatureType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2275:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 337,
														"name": "DYNAMIC_TYPE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2292:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "2275:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "2271:310:2",
												"trueBody": {
													"id": 365,
													"nodeType": "Block",
													"src": "2306:275:2",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 339,
																	"name": "subdigest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "2358:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 342,
																			"name": "_digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "2396:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 340,
																			"name": "SequenceBaseSig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "2370:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																				"typeString": "type(library SequenceBaseSig)"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2386:9:2",
																		"memberName": "subdigest",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1394,
																		"src": "2370:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32) view returns (bytes32)"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2370:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2358:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "2358:46:2"
														},
														{
															"expression": {
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 346,
																			"name": "threshold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "2413:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 347,
																			"name": "weight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2424:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 348,
																			"name": "imageHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "2432:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 349,
																			"name": "checkpoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 297,
																			"src": "2443:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 350,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "2412:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 353,
																			"name": "subdigest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "2484:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 354,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "2495:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 351,
																			"name": "SequenceDynamicSig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2247,
																			"src": "2457:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SequenceDynamicSig_$2247_$",
																				"typeString": "type(library SequenceDynamicSig)"
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2476:7:2",
																		"memberName": "recover",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2246,
																		"src": "2457:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																			"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,uint256)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2457:49:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,uint256)"
																	}
																},
																"src": "2412:94:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 357,
															"nodeType": "ExpressionStatement",
															"src": "2412:94:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 358,
																		"name": "threshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "2522:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 359,
																		"name": "weight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "2533:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 360,
																		"name": "imageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "2541:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 361,
																		"name": "subdigest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2552:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 362,
																		"name": "checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "2563:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 363,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2521:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
																}
															},
															"functionReturnParameters": 298,
															"id": 364,
															"nodeType": "Return",
															"src": "2514:60:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 367,
														"name": "signatureType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 368,
														"name": "NO_CHAIN_ID_TYPE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2608:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "2591:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "2587:319:2",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "2626:280:2",
													"statements": [
														{
															"expression": {
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 370,
																	"name": "subdigest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "2678:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "_digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "2721:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 371,
																			"name": "SequenceNoChainIdSig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "2690:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SequenceNoChainIdSig_$2275_$",
																				"typeString": "type(library SequenceNoChainIdSig)"
																			}
																		},
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2711:9:2",
																		"memberName": "subdigest",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2274,
																		"src": "2690:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32) view returns (bytes32)"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2690:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2678:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 376,
															"nodeType": "ExpressionStatement",
															"src": "2678:51:2"
														},
														{
															"expression": {
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 377,
																			"name": "threshold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "2738:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 378,
																			"name": "weight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2749:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 379,
																			"name": "imageHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "2757:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 380,
																			"name": "checkpoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 297,
																			"src": "2768:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 381,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "2737:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 384,
																			"name": "subdigest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "2809:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 385,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "2820:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 382,
																			"name": "SequenceDynamicSig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2247,
																			"src": "2782:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SequenceDynamicSig_$2247_$",
																				"typeString": "type(library SequenceDynamicSig)"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2801:7:2",
																		"memberName": "recover",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2246,
																		"src": "2782:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																			"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,uint256)"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2782:49:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,uint256)"
																	}
																},
																"src": "2737:94:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 388,
															"nodeType": "ExpressionStatement",
															"src": "2737:94:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 389,
																		"name": "threshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "2847:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 390,
																		"name": "weight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "2858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 391,
																		"name": "imageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "2866:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 392,
																		"name": "subdigest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2877:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 393,
																		"name": "checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "2888:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 394,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2846:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
																}
															},
															"functionReturnParameters": 298,
															"id": 395,
															"nodeType": "Return",
															"src": "2839:60:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 398,
														"name": "signatureType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2916:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 399,
														"name": "CHAINED_TYPE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "2933:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "2916:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2912:196:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2947:161:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 402,
																		"name": "_digest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "3081:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 403,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "3090:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 401,
																	"name": "chainedRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "3066:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																		"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,bytes32,uint256)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3066:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
																}
															},
															"functionReturnParameters": 298,
															"id": 405,
															"nodeType": "Return",
															"src": "3059:42:2"
														}
													]
												}
											},
											{
												"errorCall": {
													"arguments": [
														{
															"id": 409,
															"name": "signatureType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3142:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 408,
														"name": "InvalidSignatureType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "3121:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_bytes1_$returns$__$",
															"typeString": "function (bytes1) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3121:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "RevertStatement",
												"src": "3114:42:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "907:765:2",
										"text": " @notice Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\n @dev The signature must be prefixed with a type byte, which is used to determine the recovery method.\n @param _digest Digest of the signed data.\n @param _signature A Sequence signature.\n @return threshold The required number of signatures needed to consider the signature valid.\n @return weight The actual number of signatures collected in the signature.\n @return imageHash The imageHash of the configuration that signed the message.\n @return subdigest A modified version of the original digest, unique for each wallet/network.\n @return checkpoint A nonce that is incremented every time a new configuration is set."
									},
									"functionSelector": "853c5068",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signatureRecovery",
									"nameLocation": "1684:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1765:8:2"
									},
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "1715:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1707:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1743:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1728:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1728:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:56:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "1809:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1801:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1832:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1824:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "imageHash",
												"nameLocation": "1852:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1844:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "subdigest",
												"nameLocation": "1875:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1867:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "checkpoint",
												"nameLocation": "1898:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1890:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:117:2"
									},
									"scope": 564,
									"src": "1675:1486:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1208
									],
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3651:215:2",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "threshold",
														"nameLocation": "3665:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3657:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"nodeType": "VariableDeclarationStatement",
												"src": "3657:17:2"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "weight",
														"nameLocation": "3684:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3676:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3676:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"nodeType": "VariableDeclarationStatement",
												"src": "3676:14:2"
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "imageHash",
														"nameLocation": "3700:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3692:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 432,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3692:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"nodeType": "VariableDeclarationStatement",
												"src": "3692:17:2"
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 435,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3716:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 436,
																"name": "weight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "3727:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 437,
																"name": "imageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "3735:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 438,
																"name": "subdigest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3746:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															null
														],
														"id": 439,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3715:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$__$",
															"typeString": "tuple(uint256,uint256,bytes32,bytes32,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 441,
																"name": "_digest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3778:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 442,
																"name": "_signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "3787:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 440,
															"name": "signatureRecovery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																413
															],
															"referencedDeclaration": 413,
															"src": "3760:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,bytes32,uint256)"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3760:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
														}
													},
													"src": "3715:83:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "3715:83:2"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 446,
														"name": "isValid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "3804:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 447,
																"name": "weight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "3814:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 448,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3824:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3814:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"arguments": [
																{
																	"id": 451,
																	"name": "imageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3851:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 450,
																"name": "_isValidImage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "3837:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32) view returns (bool)"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3837:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3814:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3804:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3804:57:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "3165:312:2",
										"text": " @dev Validates a signature.\n @param _digest Digest of the signed data.\n @param _signature A Sequence signature.\n @return isValid Indicates whether the signature is valid or not.\n @return subdigest A modified version of the original digest, unique for each wallet/network."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_signatureValidation",
									"nameLocation": "3489:20:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3575:8:2"
									},
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "3523:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3515:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 415,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3515:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "3551:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3536:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3536:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:56:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "3616:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3611:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3611:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "subdigest",
												"nameLocation": "3637:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3629:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 423,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3605:45:2"
									},
									"scope": 564,
									"src": "3480:386:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										11
									],
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "4659:198:2",
										"statements": [
											{
												"assignments": [
													469,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "4698:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "4693:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 468,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4693:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 476,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 472,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "4741:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 471,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4731:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4731:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "_signatures",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "4749:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 470,
														"name": "_signatureValidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															457
														],
														"referencedDeclaration": 457,
														"src": "4710:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes calldata) view returns (bool,bytes32)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4710:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4692:69:2"
											},
											{
												"condition": {
													"id": 477,
													"name": "isValid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 469,
													"src": "4771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "4767:63:2",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "4780:50:2",
													"statements": [
														{
															"expression": {
																"id": 478,
																"name": "SELECTOR_ERC1271_BYTES_BYTES",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "4795:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"functionReturnParameters": 467,
															"id": 479,
															"nodeType": "Return",
															"src": "4788:35:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4850:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4843:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 482,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "4843:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4843:9:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 467,
												"id": 486,
												"nodeType": "Return",
												"src": "4836:16:2"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3870:652:2",
										"text": " @notice Verifies whether the provided signature is valid with respect to the provided data\n @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n @param _data       Arbitrary length data signed on the behalf of address(this)\n @param _signatures Signature byte array associated with _data.\n                    Encoded as abi.encode(Signature[], Configs)\n @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
									},
									"functionSelector": "20c13b0b",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "4534:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 464,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4620:8:2"
									},
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4571:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4556:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4556:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_signatures",
												"nameLocation": "4597:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4582:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4582:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4550:62:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4651:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 465,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:8:2"
									},
									"scope": 564,
									"src": "4525:332:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										21
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "5616:189:2",
										"statements": [
											{
												"assignments": [
													500,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "5655:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "5650:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 499,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5650:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"id": 502,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5688:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 503,
															"name": "_signatures",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5695:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 501,
														"name": "_signatureValidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															457
														],
														"referencedDeclaration": 457,
														"src": "5667:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes calldata) view returns (bool,bytes32)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5667:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5649:58:2"
											},
											{
												"condition": {
													"id": 506,
													"name": "isValid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 500,
													"src": "5717:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "5713:65:2",
												"trueBody": {
													"id": 509,
													"nodeType": "Block",
													"src": "5726:52:2",
													"statements": [
														{
															"expression": {
																"id": 507,
																"name": "SELECTOR_ERC1271_BYTES32_BYTES",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5741:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"functionReturnParameters": 498,
															"id": 508,
															"nodeType": "Return",
															"src": "5734:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5798:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5791:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 511,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "5791:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5791:9:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 498,
												"id": 515,
												"nodeType": "Return",
												"src": "5784:16:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "4861:625:2",
										"text": " @notice Verifies whether the provided signature is valid with respect to the provided hash\n @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n @param _hash       keccak256 hash that was signed\n @param _signatures Signature byte array associated with _data.\n                    Encoded as abi.encode(Signature[], Configs)\n @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
									},
									"functionSelector": "1626ba7e",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "5498:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5577:8:2"
									},
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "5528:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5520:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_signatures",
												"nameLocation": "5554:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5539:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5539:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:55:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5608:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5608:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5607:8:2"
									},
									"scope": 564,
									"src": "5489:316:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "6107:208:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "_interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6124:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 528,
																		"name": "IModuleAuth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "6145:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IModuleAuth_$1249_$",
																			"typeString": "type(contract IModuleAuth)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IModuleAuth_$1249_$",
																			"typeString": "type(contract IModuleAuth)"
																		}
																	],
																	"id": 527,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6140:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6140:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IModuleAuth_$1249",
																	"typeString": "type(contract IModuleAuth)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6158:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "6140:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "6124:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 532,
															"name": "_interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6179:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 534,
																		"name": "IERC1271Wallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "6200:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271Wallet_$22_$",
																			"typeString": "type(contract IERC1271Wallet)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1271Wallet_$22_$",
																			"typeString": "type(contract IERC1271Wallet)"
																		}
																	],
																	"id": 533,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6195:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6195:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1271Wallet_$22",
																	"typeString": "type(contract IERC1271Wallet)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6216:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "6195:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "6179:48:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6124:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "6113:147:2",
												"trueBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "6234:26:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6249:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 525,
															"id": 540,
															"nodeType": "Return",
															"src": "6242:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "_interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6297:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 543,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "6273:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ModuleAuth_$564_$",
																"typeString": "type(contract super ModuleAuth)"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6279:17:2",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "6273:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) pure returns (bool)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6273:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 525,
												"id": 547,
												"nodeType": "Return",
												"src": "6266:44:2"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "5809:203:2",
										"text": " @notice Query if a contract implements an interface\n @param _interfaceID The interface identifier, as specified in ERC-165\n @return `true` if the contract implements `_interfaceID`"
									},
									"functionSelector": "01ffc9a7",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6024:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 522,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6070:8:2"
									},
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "6049:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "6042:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6042:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6041:21:2"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "6101:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6101:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6100:6:2"
									},
									"scope": 564,
									"src": "6015:300:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1242
									],
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "6536:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "_imageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "6559:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 558,
														"name": "_updateImageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "6542:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6542:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "6542:28:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "6319:134:2",
										"text": " @notice Updates the signers configuration of the wallet\n @param _imageHash New required image hash of the signature"
									},
									"functionSelector": "29561426",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 556,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 555,
												"name": "onlySelf",
												"nameLocations": [
													"6527:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1115,
												"src": "6527:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6527:8:2"
										}
									],
									"name": "updateImageHash",
									"nameLocation": "6465:15:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 554,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6510:8:2"
									},
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_imageHash",
												"nameLocation": "6489:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "6481:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6481:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6480:20:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6536:0:2"
									},
									"scope": 564,
									"src": "6456:119:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 565,
							"src": "421:6156:2",
							"usedErrors": [
								1093,
								1193,
								1197,
								1367,
								1371,
								2050,
								2056,
								2539,
								2541,
								2547,
								2553,
								2561,
								2565
							]
						}
					],
					"src": "39:6539:2"
				},
				"id": 2
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCalls.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						],
						"IModuleAuth": [
							1249
						],
						"IModuleCalls": [
							1313
						],
						"LibBytes": [
							2374
						],
						"LibBytesPointer": [
							2476
						],
						"LibOptim": [
							2530
						],
						"ModuleCalls": [
							833
						],
						"ModuleERC165": [
							920
						],
						"ModuleNonce": [
							1051
						],
						"ModuleOnlyDelegatecall": [
							1085
						],
						"ModuleSelfAuth": [
							1116
						],
						"ModuleStorage": [
							1179
						],
						"SequenceBaseSig": [
							2021
						],
						"SignatureValidator": [
							2798
						],
						"SubModuleNonce": [
							2324
						]
					},
					"id": 834,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 566,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
							"file": "./ModuleSelfAuth.sol",
							"id": 567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 1117,
							"src": "64:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
							"file": "./ModuleStorage.sol",
							"id": 568,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 1180,
							"src": "95:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
							"file": "./ModuleERC165.sol",
							"id": 569,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 921,
							"src": "125:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
							"file": "./ModuleNonce.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 1052,
							"src": "154:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
							"file": "./ModuleOnlyDelegatecall.sol",
							"id": 571,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 1086,
							"src": "182:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
							"file": "./interfaces/IModuleCalls.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 1314,
							"src": "222:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
							"file": "./interfaces/IModuleAuth.sol",
							"id": 573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 1250,
							"src": "262:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
							"file": "./submodules/nonce/SubModuleNonce.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 2325,
							"src": "302:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
							"file": "./submodules/auth/SequenceBaseSig.sol",
							"id": 575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 2022,
							"src": "350:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
							"file": "../../utils/LibOptim.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 2531,
							"src": "399:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 577,
										"name": "IModuleCalls",
										"nameLocations": [
											"469:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1313,
										"src": "469:12:3"
									},
									"id": 578,
									"nodeType": "InheritanceSpecifier",
									"src": "469:12:3"
								},
								{
									"baseName": {
										"id": 579,
										"name": "IModuleAuth",
										"nameLocations": [
											"483:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "483:11:3"
									},
									"id": 580,
									"nodeType": "InheritanceSpecifier",
									"src": "483:11:3"
								},
								{
									"baseName": {
										"id": 581,
										"name": "ModuleERC165",
										"nameLocations": [
											"496:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 920,
										"src": "496:12:3"
									},
									"id": 582,
									"nodeType": "InheritanceSpecifier",
									"src": "496:12:3"
								},
								{
									"baseName": {
										"id": 583,
										"name": "ModuleOnlyDelegatecall",
										"nameLocations": [
											"510:22:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1085,
										"src": "510:22:3"
									},
									"id": 584,
									"nodeType": "InheritanceSpecifier",
									"src": "510:22:3"
								},
								{
									"baseName": {
										"id": 585,
										"name": "ModuleSelfAuth",
										"nameLocations": [
											"534:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "534:14:3"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "534:14:3"
								},
								{
									"baseName": {
										"id": 587,
										"name": "ModuleNonce",
										"nameLocations": [
											"550:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "550:11:3"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "550:11:3"
								}
							],
							"canonicalName": "ModuleCalls",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 833,
							"linearizedBaseContracts": [
								833,
								1051,
								1116,
								1085,
								920,
								1249,
								1313
							],
							"name": "ModuleCalls",
							"nameLocation": "454:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1304
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "1142:420:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "1196:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"name": "_validateNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1181:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "1181:22:3"
											},
											{
												"assignments": [
													608,
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "1258:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "1253:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 607,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1253:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "txHash",
														"nameLocation": "1275:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "1267:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 609,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1267:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 615,
																			"name": "_nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 595,
																			"src": "1354:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 616,
																			"name": "_txs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 593,
																			"src": "1372:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		],
																		"expression": {
																			"id": 613,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1332:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1336:6:3",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "1332:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1332:54:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 612,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1313:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1313:81:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 619,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "1402:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 611,
														"name": "_signatureValidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "1285:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes calldata) view returns (bool,bytes32)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:133:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1252:166:3"
											},
											{
												"condition": {
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1429:8:3",
													"subExpression": {
														"id": 622,
														"name": "isValid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "1430:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "1425:72:3",
												"trueBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "1439:58:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "txHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "1471:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 626,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "1479:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 624,
																	"name": "InvalidSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "1454:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes32,bytes memory) pure"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1454:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 628,
															"nodeType": "RevertStatement",
															"src": "1447:43:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "1544:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 633,
															"name": "_txs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1552:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														],
														"id": 631,
														"name": "_execute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1535:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (bytes32,struct IModuleCalls.Transaction calldata[] calldata)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1535:22:3"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "566:425:3",
										"text": " @notice Allow wallet owner to execute an action\n @dev Relayers must ensure that the gasLimit specified for each transaction\n      is acceptable to them. A user could specify large enough that it could\n      consume all the gas available.\n @param _txs        Transactions to process\n @param _nonce      Signature nonce (may contain an encoded space)\n @param _signature  Encoded signature"
									},
									"functionSelector": "7a9a1628",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 600,
												"name": "onlyDelegatecall",
												"nameLocations": [
													"1125:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1084,
												"src": "1125:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1125:16:3"
										}
									],
									"name": "execute",
									"nameLocation": "1003:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 599,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1108:8:3"
									},
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "1039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1016:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 591,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 590,
															"name": "Transaction",
															"nameLocations": [
																"1016:11:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "1016:11:3"
														},
														"referencedDeclaration": 1292,
														"src": "1016:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 592,
													"nodeType": "ArrayTypeName",
													"src": "1016:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "1057:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1049:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1084:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1069:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1069:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:88:3"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:3"
									},
									"scope": 833,
									"src": "994:568:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1312
									],
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1795:211:3",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "txHash",
														"nameLocation": "1840:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "1832:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 648,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1832:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "73656c663a",
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1912:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845",
																				"typeString": "literal_string \"self:\""
																			},
																			"value": "self:"
																		},
																		{
																			"id": 656,
																			"name": "_txs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "1921:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845",
																				"typeString": "literal_string \"self:\""
																			},
																			{
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		],
																		"expression": {
																			"id": 653,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1901:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1905:6:3",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "1901:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1901:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 652,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1882:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1882:52:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 650,
															"name": "SequenceBaseSig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "1849:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																"typeString": "type(library SequenceBaseSig)"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1865:9:3",
														"memberName": "subdigest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1394,
														"src": "1849:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:91:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1832:108:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "1988:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 663,
															"name": "_txs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "1996:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
															}
														],
														"id": 661,
														"name": "_execute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1979:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (bytes32,struct IModuleCalls.Transaction calldata[] calldata)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "1979:22:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "1566:133:3",
										"text": " @notice Allow wallet to execute an action\n   without signing the message\n @param _txs  Transactions to execute"
									},
									"functionSelector": "61c2926c",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 645,
												"name": "onlySelf",
												"nameLocations": [
													"1786:8:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1115,
												"src": "1786:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1786:8:3"
										}
									],
									"name": "selfExecute",
									"nameLocation": "1711:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 644,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1769:8:3"
									},
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "1751:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1728:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 640,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 639,
															"name": "Transaction",
															"nameLocations": [
																"1728:11:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "1728:11:3"
														},
														"referencedDeclaration": 1292,
														"src": "1728:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 641,
													"nodeType": "ArrayTypeName",
													"src": "1728:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:37:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:0:3"
									},
									"scope": 833,
									"src": "1702:304:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "2248:1060:3",
										"statements": [
											{
												"id": 781,
												"nodeType": "UncheckedBlock",
												"src": "2254:1050:3",
												"statements": [
													{
														"assignments": [
															678
														],
														"declarations": [
															{
																"constant": false,
																"id": 678,
																"mutability": "mutable",
																"name": "size",
																"nameLocation": "2309:4:3",
																"nodeType": "VariableDeclaration",
																"scope": 781,
																"src": "2301:12:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 677,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2301:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 681,
														"initialValue": {
															"expression": {
																"id": 679,
																"name": "_txs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "2316:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2321:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2316:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2301:26:3"
													},
													{
														"body": {
															"id": 779,
															"nodeType": "Block",
															"src": "2370:928:3",
															"statements": [
																{
																	"assignments": [
																		694
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 694,
																			"mutability": "mutable",
																			"name": "transaction",
																			"nameLocation": "2401:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 779,
																			"src": "2380:32:3",
																			"stateVariable": false,
																			"storageLocation": "calldata",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction"
																			},
																			"typeName": {
																				"id": 693,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 692,
																					"name": "Transaction",
																					"nameLocations": [
																						"2380:11:3"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 1292,
																					"src": "2380:11:3"
																				},
																				"referencedDeclaration": 1292,
																				"src": "2380:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
																					"typeString": "struct IModuleCalls.Transaction"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 698,
																	"initialValue": {
																		"baseExpression": {
																			"id": 695,
																			"name": "_txs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "2415:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata[] calldata"
																			}
																		},
																		"id": 697,
																		"indexExpression": {
																			"id": 696,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "2420:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2415:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																			"typeString": "struct IModuleCalls.Transaction calldata"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "2380:42:3"
																},
																{
																	"assignments": [
																		700
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 700,
																			"mutability": "mutable",
																			"name": "gasLimit",
																			"nameLocation": "2440:8:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 779,
																			"src": "2432:16:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2432:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 703,
																	"initialValue": {
																		"expression": {
																			"id": 701,
																			"name": "transaction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "2451:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2463:8:3",
																		"memberName": "gasLimit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1285,
																		"src": "2451:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "2432:39:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 704,
																				"name": "gasleft",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967289,
																				"src": "2486:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2486:9:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 706,
																			"name": "gasLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "2498:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2486:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 715,
																	"nodeType": "IfStatement",
																	"src": "2482:69:3",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 709,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 683,
																					"src": "2528:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 710,
																					"name": "gasLimit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 700,
																					"src": "2531:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 711,
																						"name": "gasleft",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967289,
																						"src": "2541:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2541:9:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 708,
																				"name": "NotEnoughGas",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1273,
																				"src": "2515:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256,uint256) pure"
																				}
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2515:36:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 714,
																		"nodeType": "RevertStatement",
																		"src": "2508:43:3"
																	}
																},
																{
																	"assignments": [
																		717
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 717,
																			"mutability": "mutable",
																			"name": "success",
																			"nameLocation": "2567:7:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 779,
																			"src": "2562:12:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 716,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "2562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 718,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "2562:12:3"
																},
																{
																	"condition": {
																		"expression": {
																			"id": 719,
																			"name": "transaction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "2588:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																				"typeString": "struct IModuleCalls.Transaction calldata"
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2600:12:3",
																		"memberName": "delegateCall",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1281,
																		"src": "2588:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 758,
																		"nodeType": "Block",
																		"src": "2798:201:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 756,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 739,
																						"name": "success",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 717,
																						"src": "2810:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 742,
																									"name": "transaction",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 694,
																									"src": "2847:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																										"typeString": "struct IModuleCalls.Transaction calldata"
																									}
																								},
																								"id": 743,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2859:6:3",
																								"memberName": "target",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1287,
																								"src": "2847:18:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"expression": {
																									"id": 744,
																									"name": "transaction",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 694,
																									"src": "2879:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																										"typeString": "struct IModuleCalls.Transaction calldata"
																									}
																								},
																								"id": 745,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2891:5:3",
																								"memberName": "value",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1289,
																								"src": "2879:17:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 748,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 746,
																										"name": "gasLimit",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 700,
																										"src": "2910:8:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 747,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2922:1:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "2910:13:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"falseExpression": {
																									"id": 751,
																									"name": "gasLimit",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 700,
																									"src": "2938:8:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 752,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "Conditional",
																								"src": "2910:36:3",
																								"trueExpression": {
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 749,
																										"name": "gasleft",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967289,
																										"src": "2926:7:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																											"typeString": "function () view returns (uint256)"
																										}
																									},
																									"id": 750,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "2926:9:3",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 753,
																									"name": "transaction",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 694,
																									"src": "2960:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																										"typeString": "struct IModuleCalls.Transaction calldata"
																									}
																								},
																								"id": 754,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2972:4:3",
																								"memberName": "data",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1291,
																								"src": "2960:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							],
																							"expression": {
																								"id": 740,
																								"name": "LibOptim",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2530,
																								"src": "2820:8:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																									"typeString": "type(library LibOptim)"
																								}
																							},
																							"id": 741,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2829:4:3",
																							"memberName": "call",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2515,
																							"src": "2820:13:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,uint256,uint256,bytes calldata) returns (bool)"
																							}
																						},
																						"id": 755,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2820:168:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2810:178:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 757,
																				"nodeType": "ExpressionStatement",
																				"src": "2810:178:3"
																			}
																		]
																	},
																	"id": 759,
																	"nodeType": "IfStatement",
																	"src": "2584:415:3",
																	"trueBody": {
																		"id": 738,
																		"nodeType": "Block",
																		"src": "2614:178:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 736,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 721,
																						"name": "success",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 717,
																						"src": "2626:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 724,
																									"name": "transaction",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 694,
																									"src": "2671:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																										"typeString": "struct IModuleCalls.Transaction calldata"
																									}
																								},
																								"id": 725,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2683:6:3",
																								"memberName": "target",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1287,
																								"src": "2671:18:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 728,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 726,
																										"name": "gasLimit",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 700,
																										"src": "2703:8:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 727,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2715:1:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "2703:13:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"falseExpression": {
																									"id": 731,
																									"name": "gasLimit",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 700,
																									"src": "2731:8:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 732,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "Conditional",
																								"src": "2703:36:3",
																								"trueExpression": {
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 729,
																										"name": "gasleft",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967289,
																										"src": "2719:7:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																											"typeString": "function () view returns (uint256)"
																										}
																									},
																									"id": 730,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "2719:9:3",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 733,
																									"name": "transaction",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 694,
																									"src": "2753:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																										"typeString": "struct IModuleCalls.Transaction calldata"
																									}
																								},
																								"id": 734,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2765:4:3",
																								"memberName": "data",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1291,
																								"src": "2753:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							],
																							"expression": {
																								"id": 722,
																								"name": "LibOptim",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2530,
																								"src": "2636:8:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																									"typeString": "type(library LibOptim)"
																								}
																							},
																							"id": 723,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2645:12:3",
																							"memberName": "delegatecall",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2529,
																							"src": "2636:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,uint256,bytes calldata) returns (bool)"
																							}
																						},
																						"id": 735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2636:145:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2626:155:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 737,
																				"nodeType": "ExpressionStatement",
																				"src": "2626:155:3"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"id": 760,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "3013:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 777,
																		"nodeType": "Block",
																		"src": "3078:212:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 768,
																								"name": "transaction",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 694,
																								"src": "3171:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Transaction_$1292_calldata_ptr",
																									"typeString": "struct IModuleCalls.Transaction calldata"
																								}
																							},
																							"id": 769,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3183:13:3",
																							"memberName": "revertOnError",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1283,
																							"src": "3171:25:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"id": 770,
																							"name": "_txHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 670,
																							"src": "3210:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						{
																							"id": 771,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "3231:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 772,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "3246:8:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 773,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3255:10:3",
																								"memberName": "returnData",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2499,
																								"src": "3246:19:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 774,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3246:21:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 767,
																						"name": "_revertBytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 807,
																						"src": "3145:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																							"typeString": "function (bool,bytes32,uint256,bytes memory)"
																						}
																					},
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3145:134:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 776,
																				"nodeType": "ExpressionStatement",
																				"src": "3145:134:3"
																			}
																		]
																	},
																	"id": 778,
																	"nodeType": "IfStatement",
																	"src": "3009:281:3",
																	"trueBody": {
																		"id": 766,
																		"nodeType": "Block",
																		"src": "3022:50:3",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"id": 762,
																							"name": "_txHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 670,
																							"src": "3050:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						{
																							"id": 763,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "3059:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 761,
																						"name": "TxExecuted",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1265,
																						"src": "3039:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
																							"typeString": "function (bytes32,uint256)"
																						}
																					},
																					"id": 764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3039:22:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 765,
																				"nodeType": "EmitStatement",
																				"src": "3034:27:3"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "2355:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 687,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "2359:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2355:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 780,
														"initializationExpression": {
															"assignments": [
																683
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 683,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "2348:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 780,
																	"src": "2340:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 682,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 685,
															"initialValue": {
																"hexValue": "30",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2352:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:13:3"
														},
														"loopExpression": {
															"expression": {
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2365:3:3",
																"subExpression": {
																	"id": 689,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "2365:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 691,
															"nodeType": "ExpressionStatement",
															"src": "2365:3:3"
														},
														"nodeType": "ForStatement",
														"src": "2335:963:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "2010:151:3",
										"text": " @notice Executes a list of transactions\n @param _txHash  Hash of the batch of transactions\n @param _txs  Transactions to execute"
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_execute",
									"nameLocation": "2173:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "_txHash",
												"nameLocation": "2195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "2231:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2208:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 672,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 671,
															"name": "Transaction",
															"nameLocations": [
																"2208:11:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "2208:11:3"
														},
														"referencedDeclaration": 1292,
														"src": "2208:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 673,
													"nodeType": "ArrayTypeName",
													"src": "2208:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:58:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:0:3"
									},
									"scope": 833,
									"src": "2164:1144:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "3771:159:3",
										"statements": [
											{
												"condition": {
													"id": 795,
													"name": "_revertOnError",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "3781:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "3872:54:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 799,
																		"name": "_txHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "3894:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 800,
																		"name": "_index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "3903:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 801,
																		"name": "_reason",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "3911:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 798,
																	"name": "TxFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "3885:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes32,uint256,bytes memory)"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3885:34:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 803,
															"nodeType": "EmitStatement",
															"src": "3880:39:3"
														}
													]
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "3777:149:3",
												"trueBody": {
													"id": 797,
													"nodeType": "Block",
													"src": "3797:69:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "3814:46:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_reason",
																							"nodeType": "YulIdentifier",
																							"src": "3827:7:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3836:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3823:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3823:18:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_reason",
																							"nodeType": "YulIdentifier",
																							"src": "3849:7:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3843:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3843:14:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3816:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3816:42:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3816:42:3"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 792,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3827:7:3",
																	"valueSize": 1
																},
																{
																	"declaration": 792,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3849:7:3",
																	"valueSize": 1
																}
															],
															"id": 796,
															"nodeType": "InlineAssembly",
															"src": "3805:55:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "3312:329:3",
										"text": " @notice Logs a failed transaction, reverts if the transaction is not optional\n @param _revertOnError  Signals if it should revert or just log\n @param _txHash         Hash of the transaction\n @param _index          Index of the transaction in the batch\n @param _reason         Encoded revert message"
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revertBytes",
									"nameLocation": "3653:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_revertOnError",
												"nameLocation": "3676:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3671:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3671:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_txHash",
												"nameLocation": "3704:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3696:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3725:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3717:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "_reason",
												"nameLocation": "3750:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3737:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3665:96:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:0:3"
									},
									"scope": 833,
									"src": "3644:286:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "4232:139:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "_interfaceID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4242:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 818,
																	"name": "IModuleCalls",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "4263:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IModuleCalls_$1313_$",
																		"typeString": "type(contract IModuleCalls)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IModuleCalls_$1313_$",
																		"typeString": "type(contract IModuleCalls)"
																	}
																],
																"id": 817,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4258:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4258:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IModuleCalls_$1313",
																"typeString": "type(contract IModuleCalls)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4277:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "4258:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "4242:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "4238:78:3",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "4290:26:3",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4305:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 815,
															"id": 823,
															"nodeType": "Return",
															"src": "4298:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 828,
															"name": "_interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4353:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 826,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4329:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ModuleCalls_$833_$",
																"typeString": "type(contract super ModuleCalls)"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4335:17:3",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "4329:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) pure returns (bool)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4329:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 815,
												"id": 830,
												"nodeType": "Return",
												"src": "4322:44:3"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "3934:203:3",
										"text": " @notice Query if a contract implements an interface\n @param _interfaceID The interface identifier, as specified in ERC-165\n @return `true` if the contract implements `_interfaceID`"
									},
									"functionSelector": "01ffc9a7",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4149:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 812,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4195:8:3"
									},
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "4174:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4167:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 809,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4167:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:21:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4226:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4226:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4225:6:3"
									},
									"scope": 833,
									"src": "4140:231:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 834,
							"src": "436:3937:3",
							"usedErrors": [
								938,
								1057,
								1093,
								1193,
								1197,
								1273,
								1279
							]
						}
					],
					"src": "39:4335:3"
				},
				"id": 3
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleCreator.sol",
					"exportedSymbols": {
						"IModuleCreator": [
							1328
						],
						"ModuleCreator": [
							902
						],
						"ModuleERC165": [
							920
						],
						"ModuleSelfAuth": [
							1116
						]
					},
					"id": 903,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 835,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
							"file": "./interfaces/IModuleCreator.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 1329,
							"src": "64:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
							"file": "./ModuleSelfAuth.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 1117,
							"src": "107:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
							"file": "./ModuleERC165.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 921,
							"src": "138:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "IModuleCreator",
										"nameLocations": [
											"195:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "195:14:4"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "195:14:4"
								},
								{
									"baseName": {
										"id": 841,
										"name": "ModuleERC165",
										"nameLocations": [
											"211:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 920,
										"src": "211:12:4"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "211:12:4"
								},
								{
									"baseName": {
										"id": 843,
										"name": "ModuleSelfAuth",
										"nameLocations": [
											"225:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "225:14:4"
									},
									"id": 844,
									"nodeType": "InheritanceSpecifier",
									"src": "225:14:4"
								}
							],
							"canonicalName": "ModuleCreator",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902,
								1116,
								920,
								1328
							],
							"name": "ModuleCreator",
							"nameLocation": "178:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "a506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c",
									"id": 848,
									"name": "CreatedContract",
									"nameLocation": "250:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"mutability": "mutable",
												"name": "_contract",
												"nameLocation": "274:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "266:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:19:4"
									},
									"src": "244:41:4"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "564:168:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "579:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "581:57:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "callvalue",
																			"nodeType": "YulIdentifier",
																			"src": "596:9:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:11:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_code",
																				"nodeType": "YulIdentifier",
																				"src": "613:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_code",
																				"nodeType": "YulIdentifier",
																				"src": "631:5:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "625:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "625:12:4"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:49:4"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "581:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 851,
														"isOffset": false,
														"isSlot": false,
														"src": "613:5:4",
														"valueSize": 1
													},
													{
														"declaration": 851,
														"isOffset": false,
														"isSlot": false,
														"src": "631:5:4",
														"valueSize": 1
													},
													{
														"declaration": 857,
														"isOffset": false,
														"isSlot": false,
														"src": "581:4:4",
														"valueSize": 1
													}
												],
												"id": 859,
												"nodeType": "InlineAssembly",
												"src": "570:70:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "649:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "665:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 861,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "657:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "657:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "649:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "645:50:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 867,
																"name": "_code",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "689:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 866,
															"name": "CreateFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "676:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (bytes memory) pure"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "676:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 869,
													"nodeType": "RevertStatement",
													"src": "669:26:4"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 872,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "722:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 871,
														"name": "CreatedContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "706:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "EmitStatement",
												"src": "701:26:4"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "289:164:4",
										"text": " @notice Creates a contract forwarding eth value\n @param _code Creation code of the contract\n @return addr The address of the created contract"
									},
									"functionSelector": "90042baf",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 855,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 854,
												"name": "onlySelf",
												"nameLocations": [
													"532:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1115,
												"src": "532:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "532:8:4"
										}
									],
									"name": "createContract",
									"nameLocation": "465:14:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 853,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "507:8:4"
									},
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "493:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "480:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "480:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:20:4"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "558:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "550:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:14:4"
									},
									"scope": 902,
									"src": "456:276:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "1034:141:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 885,
														"name": "_interfaceID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "1044:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 887,
																	"name": "IModuleCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "1065:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IModuleCreator_$1328_$",
																		"typeString": "type(contract IModuleCreator)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IModuleCreator_$1328_$",
																		"typeString": "type(contract IModuleCreator)"
																	}
																],
																"id": 886,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1060:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1060:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IModuleCreator_$1328",
																"typeString": "type(contract IModuleCreator)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1081:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1060:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1044:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "1040:80:4",
												"trueBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "1094:26:4",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1109:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 884,
															"id": 892,
															"nodeType": "Return",
															"src": "1102:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "_interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "1157:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 895,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1133:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ModuleCreator_$902_$",
																"typeString": "type(contract super ModuleCreator)"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1139:17:4",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "1133:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) pure returns (bool)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1133:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 884,
												"id": 899,
												"nodeType": "Return",
												"src": "1126:44:4"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "736:203:4",
										"text": " @notice Query if a contract implements an interface\n @param _interfaceID The interface identifier, as specified in ERC-165\n @return `true` if the contract implements `_interfaceID`"
									},
									"functionSelector": "01ffc9a7",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "951:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 881,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "997:8:4"
									},
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "976:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "969:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 878,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "969:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:21:4"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "1028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:6:4"
									},
									"scope": 902,
									"src": "942:233:4",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 903,
							"src": "169:1008:4",
							"usedErrors": [
								1093,
								1319
							]
						}
					],
					"src": "39:1139:4"
				},
				"id": 4
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleERC165.sol",
					"exportedSymbols": {
						"ModuleERC165": [
							920
						]
					},
					"id": 921,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ModuleERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 920,
							"linearizedBaseContracts": [
								920
							],
							"name": "ModuleERC165",
							"nameLocation": "83:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "696:65:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "_interfaceID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "709:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 913,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "725:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ModuleERC165_$920",
																	"typeString": "contract ModuleERC165"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "730:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 919,
															"src": "725:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) pure external returns (bool)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "748:8:5",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "725:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "709:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 911,
												"id": 917,
												"nodeType": "Return",
												"src": "702:54:5"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "100:510:5",
										"text": " @notice Query if a contract implements an interface\n @param _interfaceID The interface identifier, as specified in ERC-165\n @dev Adding new hooks will not lead to them being reported by this function\n      without upgrading the wallet. In addition, developers must ensure that\n      all inherited contracts by the main module don't conflict and are accounted\n      to be supported by the supportsInterface method.\n @return `true` if the contract implements `_interfaceID`"
									},
									"functionSelector": "01ffc9a7",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "622:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "647:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "640:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 906,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:21:5"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "690:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "690:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:6:5"
									},
									"scope": 920,
									"src": "613:148:5",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 921,
							"src": "65:698:5",
							"usedErrors": []
						}
					],
					"src": "39:725:5"
				},
				"id": 5
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleNonce.sol",
					"exportedSymbols": {
						"ModuleNonce": [
							1051
						],
						"ModuleStorage": [
							1179
						],
						"SubModuleNonce": [
							2324
						]
					},
					"id": 1052,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 922,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
							"file": "./ModuleStorage.sol",
							"id": 923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1180,
							"src": "64:29:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
							"file": "./submodules/nonce/SubModuleNonce.sol",
							"id": 924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 2325,
							"src": "95:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ModuleNonce",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "ModuleNonce",
							"nameLocation": "154:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881",
									"id": 930,
									"name": "NonceChange",
									"nameLocation": "188:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "_space",
												"nameLocation": "208:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "200:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newNonce",
												"nameLocation": "224:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "216:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:35:6"
									},
									"src": "182:53:6"
								},
								{
									"errorSelector": "9b6514f4",
									"id": 938,
									"name": "BadNonce",
									"nameLocation": "257:8:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "_space",
												"nameLocation": "274:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "266:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_provided",
												"nameLocation": "290:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "282:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_current",
												"nameLocation": "309:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "301:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:53:6"
									},
									"src": "251:68:6"
								},
								{
									"constant": true,
									"id": 944,
									"mutability": "constant",
									"name": "NONCE_KEY",
									"nameLocation": "433:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "408:112:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 939,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307838643062663166643632336436323863373431333632633132383939343865353762336532393035323138633637366433653639616265653336643661653265",
												"id": 942,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "453:66:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_63797217120035063192835264220719863994123296260065566452921212441289018486318_by_1",
													"typeString": "int_const 6379...(69 digits omitted)...6318"
												},
												"value": "0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_63797217120035063192835264220719863994123296260065566452921212441289018486318_by_1",
													"typeString": "int_const 6379...(69 digits omitted)...6318"
												}
											],
											"id": 941,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "445:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 940,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:6",
												"typeDescriptions": {}
											}
										},
										"id": 943,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "445:75:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "727:30:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "750:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 950,
														"name": "readNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "740:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "740:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "733:19:6"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "525:142:6",
										"text": " @notice Returns the next nonce of the default nonce space\n @dev The default nonce space is 0x00\n @return The next nonce"
									},
									"functionSelector": "affed0e0",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonce",
									"nameLocation": "679:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "718:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:9:6"
									},
									"scope": 1051,
									"src": "670:87:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "1011:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 967,
																	"name": "NONCE_KEY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "1061:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 970,
																			"name": "_space",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "1080:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1072:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 968,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "1072:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1072:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 965,
																	"name": "ModuleStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "1032:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ModuleStorage_$1179_$",
																		"typeString": "type(library ModuleStorage)"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1046:14:6",
																"memberName": "readBytes32Map",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1178,
																"src": "1032:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32,bytes32) view returns (bytes32)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1032:56:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1024:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1024:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 962,
												"id": 974,
												"nodeType": "Return",
												"src": "1017:72:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "761:174:6",
										"text": " @notice Returns the next nonce of the given nonce space\n @param _space Nonce space, each space keeps an independent nonce count\n @return The next nonce"
									},
									"functionSelector": "8c3f5563",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readNonce",
									"nameLocation": "947:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_space",
												"nameLocation": "965:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "957:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:16:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1002:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:6"
									},
									"scope": 1051,
									"src": "938:156:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "1356:85:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "NONCE_KEY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1392:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 990,
																	"name": "_space",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "1411:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1403:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 988,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1403:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1403:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 994,
																	"name": "_nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1428:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1420:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 992,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1420:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1420:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 984,
															"name": "ModuleStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "1362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ModuleStorage_$1179_$",
																"typeString": "type(library ModuleStorage)"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1376:15:6",
														"memberName": "writeBytes32Map",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "1362:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1362:74:6"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1098:193:6",
										"text": " @notice Changes the next nonce of the given nonce space\n @param _space Nonce space, each space keeps an independent nonce count\n @param _nonce Nonce to write on the space"
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeNonce",
									"nameLocation": "1303:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "_space",
												"nameLocation": "1323:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1315:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "1339:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1331:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1314:32:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1356:0:6"
									},
									"scope": 1051,
									"src": "1294:147:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1628:446:6",
										"statements": [
											{
												"assignments": [
													1006,
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "space",
														"nameLocation": "1689:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "1681:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1681:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "providedNonce",
														"nameLocation": "1704:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "1696:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1696:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"arguments": [
														{
															"id": 1011,
															"name": "_rawNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1748:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1009,
															"name": "SubModuleNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "1721:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SubModuleNonce_$2324_$",
																"typeString": "type(library SubModuleNonce)"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1736:11:6",
														"memberName": "decodeNonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2323,
														"src": "1721:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1680:78:6"
											},
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "currentNonce",
														"nameLocation": "1773:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "1765:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1765:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [
														{
															"id": 1017,
															"name": "space",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "1798:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "readNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1788:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1788:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1765:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1020,
														"name": "currentNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "1814:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1021,
														"name": "providedNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "1830:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1814:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "1810:101:6",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "1845:66:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1024,
																		"name": "space",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1006,
																		"src": "1869:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1025,
																		"name": "providedNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "1876:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1026,
																		"name": "currentNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "1891:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1023,
																	"name": "BadNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "1860:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "1853:51:6"
														}
													]
												}
											},
											{
												"id": 1048,
												"nodeType": "UncheckedBlock",
												"src": "1917:153:6",
												"statements": [
													{
														"assignments": [
															1032
														],
														"declarations": [
															{
																"constant": false,
																"id": 1032,
																"mutability": "mutable",
																"name": "newNonce",
																"nameLocation": "1943:8:6",
																"nodeType": "VariableDeclaration",
																"scope": 1048,
																"src": "1935:16:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1031,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1935:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1036,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "providedNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "1954:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1970:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1954:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1935:36:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1038,
																	"name": "space",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "1992:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1039,
																	"name": "newNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "1999:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1037,
																"name": "_writeNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "1980:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																	"typeString": "function (uint256,uint256)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1980:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1041,
														"nodeType": "ExpressionStatement",
														"src": "1980:28:6"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1043,
																	"name": "space",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "2033:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1044,
																	"name": "newNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "2040:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1042,
																"name": "NonceChange",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "2021:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																	"typeString": "function (uint256,uint256)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2021:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1046,
														"nodeType": "EmitStatement",
														"src": "2016:33:6"
													},
													{
														"functionReturnParameters": 1004,
														"id": 1047,
														"nodeType": "Return",
														"src": "2057:7:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "1445:120:6",
										"text": " @notice Verify if a nonce is valid\n @param _rawNonce Nonce to validate (may contain an encoded space)"
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateNonce",
									"nameLocation": "1577:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_rawNonce",
												"nameLocation": "1600:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1592:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:19:6"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:6"
									},
									"scope": 1051,
									"src": "1568:506:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "145:1931:6",
							"usedErrors": [
								938
							]
						}
					],
					"src": "39:2038:6"
				},
				"id": 6
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleOnlyDelegatecall.sol",
					"exportedSymbols": {
						"ModuleOnlyDelegatecall": [
							1085
						]
					},
					"id": 1086,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ModuleOnlyDelegatecall",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1085,
							"linearizedBaseContracts": [
								1085
							],
							"name": "ModuleOnlyDelegatecall",
							"nameLocation": "74:22:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1055,
									"mutability": "immutable",
									"name": "self",
									"nameLocation": "127:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "101:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1054,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "101:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "0a57d61d",
									"id": 1057,
									"name": "OnlyDelegatecall",
									"nameLocation": "142:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:7"
									},
									"src": "136:25:7"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "179:31:7",
										"statements": [
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1060,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "185:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1063,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "200:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ModuleOnlyDelegatecall_$1085",
																	"typeString": "contract ModuleOnlyDelegatecall"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ModuleOnlyDelegatecall_$1085",
																	"typeString": "contract ModuleOnlyDelegatecall"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "192:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "192:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "192:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "185:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "185:20:7"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:7"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:0:7"
									},
									"scope": 1085,
									"src": "165:45:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "334:84:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1073,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "352:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ModuleOnlyDelegatecall_$1085",
																	"typeString": "contract ModuleOnlyDelegatecall"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ModuleOnlyDelegatecall_$1085",
																	"typeString": "contract ModuleOnlyDelegatecall"
																}
															],
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "344:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1071,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "344:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "344:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1075,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "361:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "344:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "340:67:7",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "367:40:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1077,
																	"name": "OnlyDelegatecall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "382:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "382:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "RevertStatement",
															"src": "375:25:7"
														}
													]
												}
											},
											{
												"id": 1082,
												"nodeType": "PlaceholderStatement",
												"src": "412:1:7"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "214:89:7",
										"text": " @notice Modifier that only allows functions to be called via delegatecall."
									},
									"id": 1084,
									"name": "onlyDelegatecall",
									"nameLocation": "315:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:2:7"
									},
									"src": "306:112:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1086,
							"src": "65:355:7",
							"usedErrors": [
								1057
							]
						}
					],
					"src": "39:382:7"
				},
				"id": 7
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
					"exportedSymbols": {
						"ModuleSelfAuth": [
							1116
						]
					},
					"id": 1117,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1087,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ModuleSelfAuth",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1116,
							"linearizedBaseContracts": [
								1116
							],
							"name": "ModuleSelfAuth",
							"nameLocation": "74:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "e1258894",
									"id": 1093,
									"name": "OnlySelfAuth",
									"nameLocation": "99:12:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "120:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "112:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_self",
												"nameLocation": "137:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "129:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:32:8"
									},
									"src": "93:51:8"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "168:111:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1095,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "178:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "182:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "178:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1099,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "200:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ModuleSelfAuth_$1116",
																	"typeString": "contract ModuleSelfAuth"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ModuleSelfAuth_$1116",
																	"typeString": "contract ModuleSelfAuth"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "192:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "192:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "192:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "178:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1112,
												"nodeType": "IfStatement",
												"src": "174:94:8",
												"trueBody": {
													"id": 1111,
													"nodeType": "Block",
													"src": "207:61:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1103,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "235:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "239:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "235:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1107,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "255:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ModuleSelfAuth_$1116",
																					"typeString": "contract ModuleSelfAuth"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ModuleSelfAuth_$1116",
																					"typeString": "contract ModuleSelfAuth"
																				}
																			],
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "247:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1105,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "247:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "247:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "OnlySelfAuth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "222:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "222:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1110,
															"nodeType": "RevertStatement",
															"src": "215:46:8"
														}
													]
												}
											},
											{
												"id": 1113,
												"nodeType": "PlaceholderStatement",
												"src": "273:1:8"
											}
										]
									},
									"id": 1115,
									"name": "onlySelf",
									"nameLocation": "157:8:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:8"
									},
									"src": "148:131:8",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1117,
							"src": "65:216:8",
							"usedErrors": [
								1093
							]
						}
					],
					"src": "39:243:8"
				},
				"id": 8
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
					"exportedSymbols": {
						"ModuleStorage": [
							1179
						]
					},
					"id": 1180,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1118,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ModuleStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1179,
							"linearizedBaseContracts": [
								1179
							],
							"name": "ModuleStorage",
							"nameLocation": "73:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "150:41:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "165:22:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_key",
																		"nodeType": "YulIdentifier",
																		"src": "174:4:9"
																	},
																	{
																		"name": "_val",
																		"nodeType": "YulIdentifier",
																		"src": "180:4:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "167:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "167:18:9"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "174:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "180:4:9",
														"valueSize": 1
													}
												],
												"id": 1125,
												"nodeType": "InlineAssembly",
												"src": "156:31:9"
											}
										]
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeBytes32",
									"nameLocation": "100:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "121:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "113:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "_val",
												"nameLocation": "135:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "127:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:28:9"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:9"
									},
									"scope": 1179,
									"src": "91:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "266:41:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "281:22:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "283:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "_key",
																		"nodeType": "YulIdentifier",
																		"src": "296:4:9"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "290:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:11:9"
															},
															"variableNames": [
																{
																	"name": "val",
																	"nodeType": "YulIdentifier",
																	"src": "283:3:9"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1129,
														"isOffset": false,
														"isSlot": false,
														"src": "296:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1132,
														"isOffset": false,
														"isSlot": false,
														"src": "283:3:9",
														"valueSize": 1
													}
												],
												"id": 1134,
												"nodeType": "InlineAssembly",
												"src": "272:31:9"
											}
										]
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytes32",
									"nameLocation": "204:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "224:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "216:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:14:9"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "261:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "253:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:13:9"
									},
									"scope": 1179,
									"src": "195:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "390:96:9",
										"statements": [
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "404:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "396:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1145,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "396:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1154,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1150,
																	"name": "_key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "431:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1151,
																	"name": "_subKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "437:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1148,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "420:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "424:6:9",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "420:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "420:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1147,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "410:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "410:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "396:50:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "461:21:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "470:3:9"
																	},
																	{
																		"name": "_val",
																		"nodeType": "YulIdentifier",
																		"src": "475:4:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "463:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:17:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "463:17:9"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1142,
														"isOffset": false,
														"isSlot": false,
														"src": "475:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1146,
														"isOffset": false,
														"isSlot": false,
														"src": "470:3:9",
														"valueSize": 1
													}
												],
												"id": 1155,
												"nodeType": "InlineAssembly",
												"src": "452:30:9"
											}
										]
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeBytes32Map",
									"nameLocation": "320:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "344:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "336:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "_subKey",
												"nameLocation": "358:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "350:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "_val",
												"nameLocation": "375:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "367:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:45:9"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:9"
									},
									"scope": 1179,
									"src": "311:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "581:96:9",
										"statements": [
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "595:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "587:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1166,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "587:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1175,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1171,
																	"name": "_key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "622:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1172,
																	"name": "_subKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "628:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1169,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "611:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "615:6:9",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "611:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1168,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "601:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "587:50:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "652:21:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "654:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "667:3:9"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:10:9"
															},
															"variableNames": [
																{
																	"name": "val",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:9"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1167,
														"isOffset": false,
														"isSlot": false,
														"src": "667:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1164,
														"isOffset": false,
														"isSlot": false,
														"src": "654:3:9",
														"valueSize": 1
													}
												],
												"id": 1176,
												"nodeType": "InlineAssembly",
												"src": "643:30:9"
											}
										]
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytes32Map",
									"nameLocation": "499:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "522:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "514:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "_subKey",
												"nameLocation": "536:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "528:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:31:9"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "576:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "568:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:13:9"
									},
									"scope": 1179,
									"src": "490:187:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1180,
							"src": "65:614:9",
							"usedErrors": []
						}
					],
					"src": "39:641:9"
				},
				"id": 9
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
					"exportedSymbols": {
						"IModuleAuth": [
							1249
						]
					},
					"id": 1250,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1181,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "IModuleAuth",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1249,
							"linearizedBaseContracts": [
								1249
							],
							"name": "IModuleAuth",
							"nameLocation": "83:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1187,
									"mutability": "constant",
									"name": "IMAGE_HASH_KEY",
									"nameLocation": "231:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "205:118:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1182,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "205:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307865613731353766613235653361613137643061653264353238306661346532346434323163363138343261613835653435313934653131343561613732626638",
												"id": 1185,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "256:66:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_106041467482713340379632507891644215435067329692436463218523020519418825747448_by_1",
													"typeString": "int_const 1060...(70 digits omitted)...7448"
												},
												"value": "0xea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_106041467482713340379632507891644215435067329692436463218523020519418825747448_by_1",
													"typeString": "int_const 1060...(70 digits omitted)...7448"
												}
											],
											"id": 1184,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "248:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 1183,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "248:7:10",
												"typeDescriptions": {}
											}
										},
										"id": 1186,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "248:75:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa",
									"id": 1191,
									"name": "ImageHashUpdated",
									"nameLocation": "334:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "newImageHash",
												"nameLocation": "359:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "351:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:22:10"
									},
									"src": "328:45:10"
								},
								{
									"errorSelector": "4294d127",
									"id": 1193,
									"name": "ImageHashIsZero",
									"nameLocation": "395:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:10"
									},
									"src": "389:24:10"
								},
								{
									"errorSelector": "6085cd82",
									"id": 1197,
									"name": "InvalidSignatureType",
									"nameLocation": "422:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "450:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "443:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "443:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:14:10"
									},
									"src": "416:41:10"
								},
								{
									"id": 1208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_signatureValidation",
									"nameLocation": "470:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "504:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "496:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "532:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "517:25:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "517:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:56:10"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "588:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "583:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "subdigest",
												"nameLocation": "609:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "601:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:45:10"
									},
									"scope": 1249,
									"src": "461:162:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"functionSelector": "853c5068",
									"id": 1225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "signatureRecovery",
									"nameLocation": "636:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "667:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "659:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "695:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "680:25:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "680:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:56:10"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "752:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "744:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "775:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "767:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "imageHash",
												"nameLocation": "795:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "787:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "subdigest",
												"nameLocation": "818:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "810:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "checkpoint",
												"nameLocation": "841:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "833:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:117:10"
									},
									"scope": 1249,
									"src": "627:229:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "1034:23:10",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1047:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1232,
												"id": 1234,
												"nodeType": "Return",
												"src": "1040:12:10"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "860:102:10",
										"text": " @notice Validates the signature image\n @return true if the signature image is valid"
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidImage",
									"nameLocation": "974:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "988:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:9:10"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1028:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:6:10"
									},
									"scope": 1249,
									"src": "965:92:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1061:134:10",
										"text": " @notice Updates the signers configuration of the wallet\n @param _imageHash New required image hash of the signature"
									},
									"functionSelector": "29561426",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateImageHash",
									"nameLocation": "1207:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_imageHash",
												"nameLocation": "1231:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1223:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:20:10"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:10"
									},
									"scope": 1249,
									"src": "1198:62:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "1264:134:10",
										"text": " @notice Updates the signers configuration of the wallet\n @param _imageHash New required image hash of the signature"
									},
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_updateImageHash",
									"nameLocation": "1410:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_imageHash",
												"nameLocation": "1435:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1427:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:20:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1463:0:10"
									},
									"scope": 1249,
									"src": "1401:63:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1250,
							"src": "65:1401:10",
							"usedErrors": [
								1193,
								1197
							]
						}
					],
					"src": "39:1428:10"
				},
				"id": 10
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCalls.sol",
					"exportedSymbols": {
						"IModuleCalls": [
							1313
						]
					},
					"id": 1314,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1251,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleCalls",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1313,
							"linearizedBaseContracts": [
								1313
							],
							"name": "IModuleCalls",
							"nameLocation": "75:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b419",
									"id": 1259,
									"name": "TxFailed",
									"nameLocation": "110:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tx",
												"nameLocation": "135:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "119:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"indexed": false,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "148:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "140:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"indexed": false,
												"mutability": "mutable",
												"name": "_reason",
												"nameLocation": "162:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "156:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "156:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:52:11"
									},
									"src": "104:67:11"
								},
								{
									"anonymous": false,
									"eventSelector": "5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7",
									"id": 1265,
									"name": "TxExecuted",
									"nameLocation": "180:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tx",
												"nameLocation": "207:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "191:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "220:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "212:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:37:11"
									},
									"src": "174:54:11"
								},
								{
									"errorSelector": "2bb3e3ba",
									"id": 1273,
									"name": "NotEnoughGas",
									"nameLocation": "250:12:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "271:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "263:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "_requested",
												"nameLocation": "287:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "279:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "_available",
												"nameLocation": "307:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "299:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:56:11"
									},
									"src": "244:75:11"
								},
								{
									"errorSelector": "8f4a234f",
									"id": 1279,
									"name": "InvalidSignature",
									"nameLocation": "328:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "353:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "345:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "366:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "360:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "360:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:33:11"
									},
									"src": "322:56:11"
								},
								{
									"canonicalName": "IModuleCalls.Transaction",
									"id": 1292,
									"members": [
										{
											"constant": false,
											"id": 1281,
											"mutability": "mutable",
											"name": "delegateCall",
											"nameLocation": "439:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "434:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1280,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "434:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1283,
											"mutability": "mutable",
											"name": "revertOnError",
											"nameLocation": "489:13:11",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "484:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1282,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "484:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1285,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "559:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "551:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1284,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "551:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1287,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "615:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "607:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1286,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "607:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1289,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "675:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "667:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1288,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "667:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1291,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "737:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "731:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1290,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "731:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transaction",
									"nameLocation": "416:11:11",
									"nodeType": "StructDefinition",
									"scope": 1313,
									"src": "409:366:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "779:223:11",
										"text": " @notice Allow wallet owner to execute an action\n @param _txs        Transactions to process\n @param _nonce      Signature nonce (may contain an encoded space)\n @param _signature  Encoded signature"
									},
									"functionSelector": "7a9a1628",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "1014:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "1050:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1027:27:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 1295,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1294,
															"name": "Transaction",
															"nameLocations": [
																"1027:11:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "1027:11:11"
														},
														"referencedDeclaration": 1292,
														"src": "1027:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 1296,
													"nodeType": "ArrayTypeName",
													"src": "1027:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "1068:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1060:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1095:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1080:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:88:11"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:0:11"
									},
									"scope": 1313,
									"src": "1005:114:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "1123:133:11",
										"text": " @notice Allow wallet to execute an action\n   without signing the message\n @param _txs  Transactions to execute"
									},
									"functionSelector": "61c2926c",
									"id": 1312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfExecute",
									"nameLocation": "1268:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "_txs",
												"nameLocation": "1308:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1285:27:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IModuleCalls.Transaction[]"
												},
												"typeName": {
													"baseType": {
														"id": 1307,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1306,
															"name": "Transaction",
															"nameLocations": [
																"1285:11:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1292,
															"src": "1285:11:11"
														},
														"referencedDeclaration": 1292,
														"src": "1285:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$1292_storage_ptr",
															"typeString": "struct IModuleCalls.Transaction"
														}
													},
													"id": 1308,
													"nodeType": "ArrayTypeName",
													"src": "1285:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Transaction_$1292_storage_$dyn_storage_ptr",
														"typeString": "struct IModuleCalls.Transaction[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:37:11"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:0:11"
									},
									"scope": 1313,
									"src": "1259:67:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1314,
							"src": "65:1263:11",
							"usedErrors": [
								1273,
								1279
							]
						}
					],
					"src": "39:1290:11"
				},
				"id": 11
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleCreator.sol",
					"exportedSymbols": {
						"IModuleCreator": [
							1328
						]
					},
					"id": 1329,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1315,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleCreator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1328,
							"linearizedBaseContracts": [
								1328
							],
							"name": "IModuleCreator",
							"nameLocation": "75:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "0d257191",
									"id": 1319,
									"name": "CreateFailed",
									"nameLocation": "100:12:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "119:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "113:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "113:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:13:12"
									},
									"src": "94:32:12"
								},
								{
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "130:164:12",
										"text": " @notice Creates a contract forwarding eth value\n @param _code Creation code of the contract\n @return addr The address of the created contract"
									},
									"functionSelector": "90042baf",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createContract",
									"nameLocation": "306:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "336:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "321:20:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "321:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:22:12"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "377:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "369:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:14:12"
									},
									"scope": 1328,
									"src": "297:86:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1329,
							"src": "65:320:12",
							"usedErrors": [
								1319
							]
						}
					],
					"src": "39:347:12"
				},
				"id": 12
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						],
						"LibBytes": [
							2374
						],
						"LibBytesPointer": [
							2476
						],
						"LibOptim": [
							2530
						],
						"SequenceBaseSig": [
							2021
						],
						"SignatureValidator": [
							2798
						]
					},
					"id": 2022,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:13"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
							"file": "../../../../utils/SignatureValidator.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 2799,
							"src": "64:50:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
							"file": "../../../../utils/LibBytesPointer.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 2477,
							"src": "115:47:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
							"file": "../../../../utils/LibBytes.sol",
							"id": 1333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 2375,
							"src": "163:40:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
							"file": "../../../../utils/LibOptim.sol",
							"id": 1334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 2531,
							"src": "204:40:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SequenceBaseSig",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "247:171:13",
								"text": " @title SequenceBaseSig Library\n @author Agustin Aguilar (aa@horizon.io)\n @notice A Solidity implementation for handling signatures in the Sequence protocol."
							},
							"fullyImplemented": true,
							"id": 2021,
							"linearizedBaseContracts": [
								2021
							],
							"name": "SequenceBaseSig",
							"nameLocation": "427:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1338,
									"libraryName": {
										"id": 1336,
										"name": "LibBytesPointer",
										"nameLocations": [
											"453:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2476,
										"src": "453:15:13"
									},
									"nodeType": "UsingForDirective",
									"src": "447:32:13",
									"typeName": {
										"id": 1337,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "473:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"id": 1341,
									"mutability": "constant",
									"name": "FLAG_SIGNATURE",
									"nameLocation": "508:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "483:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "525:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1344,
									"mutability": "constant",
									"name": "FLAG_ADDRESS",
									"nameLocation": "555:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "530:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "530:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "570:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1347,
									"mutability": "constant",
									"name": "FLAG_DYNAMIC_SIGNATURE",
									"nameLocation": "600:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "575:51:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "575:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "625:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1350,
									"mutability": "constant",
									"name": "FLAG_NODE",
									"nameLocation": "655:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "630:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "630:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "667:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1353,
									"mutability": "constant",
									"name": "FLAG_BRANCH",
									"nameLocation": "697:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "672:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "711:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1356,
									"mutability": "constant",
									"name": "FLAG_SUBDIGEST",
									"nameLocation": "741:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "716:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "716:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "758:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1359,
									"mutability": "constant",
									"name": "FLAG_NESTED",
									"nameLocation": "788:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "763:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "802:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "9a946232",
									"id": 1367,
									"name": "InvalidNestedSignature",
									"nameLocation": "814:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "845:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "837:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "860:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "852:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "873:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "867:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "867:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:48:13"
									},
									"src": "808:77:13"
								},
								{
									"errorSelector": "b2505f7c",
									"id": 1371,
									"name": "InvalidSignatureFlag",
									"nameLocation": "894:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_flag",
												"nameLocation": "923:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "915:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:15:13"
									},
									"src": "888:42:13"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "1249:148:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1305:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"expression": {
																		"id": 1383,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1325:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1331:7:13",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "1325:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1387,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1356:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SequenceBaseSig_$2021",
																				"typeString": "library SequenceBaseSig"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SequenceBaseSig_$2021",
																				"typeString": "library SequenceBaseSig"
																			}
																		],
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1348:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1385,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1348:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1348:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1389,
																	"name": "_digest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "1371:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1380,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1279:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1283:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1279:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1279:107:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1379,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1262:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1262:130:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1392,
												"nodeType": "Return",
												"src": "1255:137:13"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "934:236:13",
										"text": " @notice Generates a subdigest for the input digest (unique for this wallet and network).\n @param _digest The input digest to generate the subdigest from.\n @return bytes32 The subdigest generated from the input digest."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subdigest",
									"nameLocation": "1182:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "1205:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1197:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:25:13"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1240:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:9:13"
									},
									"scope": 2021,
									"src": "1173:224:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "1834:100:13",
										"statements": [
											{
												"id": 1422,
												"nodeType": "UncheckedBlock",
												"src": "1840:90:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1408,
																					"name": "_weight",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1399,
																					"src": "1881:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1873:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1406,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1873:7:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1873:16:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313630",
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1893:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_160_by_1",
																				"typeString": "int_const 160"
																			},
																			"value": "160"
																		},
																		"src": "1873:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1416,
																						"name": "_addr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1397,
																						"src": "1915:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1907:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1414,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "1907:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1907:14:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1899:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1412,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1899:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:23:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1873:49:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1865:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1404,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1865:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1865:58:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"functionReturnParameters": 1403,
														"id": 1421,
														"nodeType": "Return",
														"src": "1858:65:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "1401:321:13",
										"text": " @notice Generates the leaf for an address and weight.\n @dev The leaf is generated by concatenating the address and weight.\n @param _addr The address to generate the leaf for.\n @param _weight The weight to generate the leaf for.\n @return bytes32 The leaf generated from the address and weight."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_leafForAddressAndWeight",
									"nameLocation": "1734:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1772:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1764:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "1790:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1783:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1398,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1783:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:43:13"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1825:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:9:13"
									},
									"scope": 2021,
									"src": "1725:209:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "2323:86:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "53657175656e636520737461746963206469676573743a0a",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2363:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c",
																		"typeString": "literal_string hex\"53657175656e636520737461746963206469676573743a0a\""
																	},
																	"value": "Sequence static digest:\n"
																},
																{
																	"id": 1436,
																	"name": "_subdigest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "2392:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c",
																		"typeString": "literal_string hex\"53657175656e636520737461746963206469676573743a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1433,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2346:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2350:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2346:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2346:57:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1432,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2336:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1431,
												"id": 1439,
												"nodeType": "Return",
												"src": "2329:75:13"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1938:286:13",
										"text": " @notice Generates the leaf for a hardcoded subdigest.\n @dev The leaf is generated by hashing 'Sequence static digest:\\n' and the subdigest.\n @param _subdigest The subdigest to generate the leaf for.\n @return bytes32 The leaf generated from the hardcoded subdigest."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_leafForHardcodedSubdigest",
									"nameLocation": "2236:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "_subdigest",
												"nameLocation": "2276:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2268:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:28:13"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2314:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:13"
									},
									"scope": 2021,
									"src": "2227:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "2953:102:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "53657175656e6365206e657374656420636f6e6669673a0a",
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2993:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7",
																		"typeString": "literal_string hex\"53657175656e6365206e657374656420636f6e6669673a0a\""
																	},
																	"value": "Sequence nested config:\n"
																},
																{
																	"id": 1457,
																	"name": "_node",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "3022:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1458,
																	"name": "_threshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "3029:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1459,
																	"name": "_weight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "3041:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7",
																		"typeString": "literal_string hex\"53657175656e6365206e657374656420636f6e6669673a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1454,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2976:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2980:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2976:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2976:73:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1453,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2966:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2966:84:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1462,
												"nodeType": "Return",
												"src": "2959:91:13"
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "2413:413:13",
										"text": " @notice Generates the leaf for a nested tree node.\n @dev The leaf is generated by hashing 'Sequence nested config:\\n', the node, the threshold and the weight.\n @param _node The root of the node to generate the leaf for.\n @param _threshold The internal threshold of the tree.\n @param _weight The external weight of the tree.\n @return bytes32 The leaf generated from the nested tree."
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_leafForNested",
									"nameLocation": "2838:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "_node",
												"nameLocation": "2866:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2858:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "_threshold",
												"nameLocation": "2885:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2877:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "2909:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2901:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2852:68:13"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2944:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1450,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2943:9:13"
									},
									"scope": 2021,
									"src": "2829:226:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "3672:4561:13",
										"statements": [
											{
												"id": 1952,
												"nodeType": "UncheckedBlock",
												"src": "3678:4551:13",
												"statements": [
													{
														"assignments": [
															1477
														],
														"declarations": [
															{
																"constant": false,
																"id": 1477,
																"mutability": "mutable",
																"name": "rindex",
																"nameLocation": "3704:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1952,
																"src": "3696:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1476,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3696:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1478,
														"nodeType": "VariableDeclarationStatement",
														"src": "3696:14:13"
													},
													{
														"body": {
															"id": 1950,
															"nodeType": "Block",
															"src": "3800:4423:13",
															"statements": [
																{
																	"assignments": [
																		1484
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1484,
																			"mutability": "mutable",
																			"name": "flag",
																			"nameLocation": "3849:4:13",
																			"nodeType": "VariableDeclaration",
																			"scope": 1950,
																			"src": "3841:12:13",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1483,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3841:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1485,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3841:12:13"
																},
																{
																	"expression": {
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1486,
																					"name": "flag",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1484,
																					"src": "3864:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1487,
																					"name": "rindex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1477,
																					"src": "3870:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1488,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "3863:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1491,
																					"name": "rindex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1477,
																					"src": "3901:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1489,
																					"name": "_signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1469,
																					"src": "3880:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				},
																				"id": 1490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3891:9:13",
																				"memberName": "readUint8",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2403,
																				"src": "3880:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																					"typeString": "function (bytes calldata,uint256) pure returns (uint8,uint256)"
																				}
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3880:28:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
																				"typeString": "tuple(uint8,uint256)"
																			}
																		},
																		"src": "3863:45:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1494,
																	"nodeType": "ExpressionStatement",
																	"src": "3863:45:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1495,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "3923:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1496,
																			"name": "FLAG_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "3931:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3923:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1539,
																	"nodeType": "IfStatement",
																	"src": "3919:402:13",
																	"trueBody": {
																		"id": 1538,
																		"nodeType": "Block",
																		"src": "3945:376:13",
																		"statements": [
																			{
																				"assignments": [
																					1499
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1499,
																						"mutability": "mutable",
																						"name": "addrWeight",
																						"nameLocation": "3995:10:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1538,
																						"src": "3989:16:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"typeName": {
																							"id": 1498,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "3989:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1500,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "3989:16:13"
																			},
																			{
																				"assignments": [
																					1502
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1502,
																						"mutability": "mutable",
																						"name": "addr",
																						"nameLocation": "4015:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1538,
																						"src": "4007:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 1501,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4007:7:13",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1503,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "4007:12:13"
																			},
																			{
																				"expression": {
																					"id": 1512,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1504,
																								"name": "addrWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1499,
																								"src": "4032:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 1505,
																								"name": "addr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1502,
																								"src": "4044:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1506,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "4050:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1507,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "4031:26:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_address_$_t_uint256_$",
																							"typeString": "tuple(uint8,address,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1510,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "4088:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1508,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "4060:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4071:16:13",
																							"memberName": "readUint8Address",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2419,
																							"src": "4060:27:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$_t_address_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint8,address,uint256)"
																							}
																						},
																						"id": 1511,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4060:35:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_address_$_t_uint256_$",
																							"typeString": "tuple(uint8,address,uint256)"
																						}
																					},
																					"src": "4031:64:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1513,
																				"nodeType": "ExpressionStatement",
																				"src": "4031:64:13"
																			},
																			{
																				"assignments": [
																					1515
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1515,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "4163:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1538,
																						"src": "4155:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1514,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "4155:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1520,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 1517,
																							"name": "addr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1502,
																							"src": "4195:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1518,
																							"name": "addrWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1499,
																							"src": "4201:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"id": 1516,
																						"name": "_leafForAddressAndWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "4170:24:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint96_$returns$_t_bytes32_$",
																							"typeString": "function (address,uint96) pure returns (bytes32)"
																						}
																					},
																					"id": 1519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4170:42:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "4155:57:13"
																			},
																			{
																				"expression": {
																					"id": 1535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1521,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "4224:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1527,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1522,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "4231:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "!=",
																							"rightExpression": {
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1525,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4247:1:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1524,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4239:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 1523,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "4239:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1526,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4239:10:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "4231:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"id": 1533,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1515,
																							"src": "4286:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "4231:59:13",
																						"trueExpression": {
																							"arguments": [
																								{
																									"id": 1530,
																									"name": "root",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "4272:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1531,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1515,
																									"src": "4278:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								],
																								"expression": {
																									"id": 1528,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "4252:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 1529,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4261:10:13",
																								"memberName": "fkeccak256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2491,
																								"src": "4252:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																									"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																								}
																							},
																							"id": 1532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4252:31:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "4224:66:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1536,
																				"nodeType": "ExpressionStatement",
																				"src": "4224:66:13"
																			},
																			{
																				"id": 1537,
																				"nodeType": "Continue",
																				"src": "4302:8:13"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1540,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "4335:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1541,
																			"name": "FLAG_SIGNATURE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "4343:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4335:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1605,
																	"nodeType": "IfStatement",
																	"src": "4331:679:13",
																	"trueBody": {
																		"id": 1604,
																		"nodeType": "Block",
																		"src": "4359:651:13",
																		"statements": [
																			{
																				"assignments": [
																					1544
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1544,
																						"mutability": "mutable",
																						"name": "addrWeight",
																						"nameLocation": "4402:10:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1604,
																						"src": "4396:16:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"typeName": {
																							"id": 1543,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "4396:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1545,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "4396:16:13"
																			},
																			{
																				"expression": {
																					"id": 1553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1546,
																								"name": "addrWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1544,
																								"src": "4425:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 1547,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "4437:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1548,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "4424:20:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
																							"typeString": "tuple(uint8,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1551,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "4468:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1549,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "4447:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1550,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4458:9:13",
																							"memberName": "readUint8",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2403,
																							"src": "4447:20:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint8,uint256)"
																							}
																						},
																						"id": 1552,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4447:28:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
																							"typeString": "tuple(uint8,uint256)"
																						}
																					},
																					"src": "4424:51:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1554,
																				"nodeType": "ExpressionStatement",
																				"src": "4424:51:13"
																			},
																			{
																				"assignments": [
																					1556
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1556,
																						"mutability": "mutable",
																						"name": "nrindex",
																						"nameLocation": "4550:7:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1604,
																						"src": "4542:15:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1555,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4542:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1560,
																				"initialValue": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1559,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1557,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "4560:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "3636",
																						"id": 1558,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4569:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_66_by_1",
																							"typeString": "int_const 66"
																						},
																						"value": "66"
																					},
																					"src": "4560:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "4542:29:13"
																			},
																			{
																				"assignments": [
																					1562
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1562,
																						"mutability": "mutable",
																						"name": "addr",
																						"nameLocation": "4591:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1604,
																						"src": "4583:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 1561,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4583:7:13",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1571,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 1565,
																							"name": "_subdigest",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1467,
																							"src": "4631:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						{
																							"baseExpression": {
																								"id": 1566,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "4643:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"endExpression": {
																								"id": 1568,
																								"name": "nrindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1556,
																								"src": "4661:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1569,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexRangeAccess",
																							"src": "4643:26:13",
																							"startExpression": {
																								"id": 1567,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "4654:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr_slice",
																								"typeString": "bytes calldata slice"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							{
																								"typeIdentifier": "t_bytes_calldata_ptr_slice",
																								"typeString": "bytes calldata slice"
																							}
																						],
																						"expression": {
																							"id": 1563,
																							"name": "SignatureValidator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2798,
																							"src": "4598:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SignatureValidator_$2798_$",
																								"typeString": "type(library SignatureValidator)"
																							}
																						},
																						"id": 1564,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4617:13:13",
																						"memberName": "recoverSigner",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2715,
																						"src": "4598:32:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$",
																							"typeString": "function (bytes32,bytes calldata) pure returns (address)"
																						}
																					},
																					"id": 1570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4598:72:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "4583:87:13"
																			},
																			{
																				"expression": {
																					"id": 1574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1572,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "4682:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1573,
																						"name": "nrindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1556,
																						"src": "4691:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4682:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1575,
																				"nodeType": "ExpressionStatement",
																				"src": "4682:16:13"
																			},
																			{
																				"expression": {
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1576,
																						"name": "weight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1472,
																						"src": "4764:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 1577,
																						"name": "addrWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1544,
																						"src": "4774:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4764:20:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1579,
																				"nodeType": "ExpressionStatement",
																				"src": "4764:20:13"
																			},
																			{
																				"assignments": [
																					1581
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1581,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "4852:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1604,
																						"src": "4844:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1580,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "4844:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1586,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 1583,
																							"name": "addr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1562,
																							"src": "4884:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1584,
																							"name": "addrWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1544,
																							"src": "4890:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"id": 1582,
																						"name": "_leafForAddressAndWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "4859:24:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint96_$returns$_t_bytes32_$",
																							"typeString": "function (address,uint96) pure returns (bytes32)"
																						}
																					},
																					"id": 1585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4859:42:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "4844:57:13"
																			},
																			{
																				"expression": {
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1587,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "4913:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1593,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1588,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "4920:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "!=",
																							"rightExpression": {
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1591,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4936:1:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1590,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4928:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 1589,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "4928:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1592,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4928:10:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "4920:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"id": 1599,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1581,
																							"src": "4975:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 1600,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "4920:59:13",
																						"trueExpression": {
																							"arguments": [
																								{
																									"id": 1596,
																									"name": "root",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "4961:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1597,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1581,
																									"src": "4967:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								],
																								"expression": {
																									"id": 1594,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "4941:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 1595,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4950:10:13",
																								"memberName": "fkeccak256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2491,
																								"src": "4941:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																									"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																								}
																							},
																							"id": 1598,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4941:31:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "4913:66:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1602,
																				"nodeType": "ExpressionStatement",
																				"src": "4913:66:13"
																			},
																			{
																				"id": 1603,
																				"nodeType": "Continue",
																				"src": "4991:8:13"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1606,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "5024:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1607,
																			"name": "FLAG_DYNAMIC_SIGNATURE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "5032:22:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5024:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1697,
																	"nodeType": "IfStatement",
																	"src": "5020:932:13",
																	"trueBody": {
																		"id": 1696,
																		"nodeType": "Block",
																		"src": "5056:896:13",
																		"statements": [
																			{
																				"assignments": [
																					1610
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1610,
																						"mutability": "mutable",
																						"name": "addrWeight",
																						"nameLocation": "5110:10:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1696,
																						"src": "5104:16:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"typeName": {
																							"id": 1609,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "5104:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1611,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "5104:16:13"
																			},
																			{
																				"assignments": [
																					1613
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1613,
																						"mutability": "mutable",
																						"name": "addr",
																						"nameLocation": "5130:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1696,
																						"src": "5122:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 1612,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "5122:7:13",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1614,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "5122:12:13"
																			},
																			{
																				"expression": {
																					"id": 1623,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1615,
																								"name": "addrWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1610,
																								"src": "5147:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 1616,
																								"name": "addr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1613,
																								"src": "5159:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1617,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "5165:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1618,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "5146:26:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_address_$_t_uint256_$",
																							"typeString": "tuple(uint8,address,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1621,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "5203:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1619,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "5175:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1620,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5186:16:13",
																							"memberName": "readUint8Address",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2419,
																							"src": "5175:27:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$_t_address_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint8,address,uint256)"
																							}
																						},
																						"id": 1622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5175:35:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_address_$_t_uint256_$",
																							"typeString": "tuple(uint8,address,uint256)"
																						}
																					},
																					"src": "5146:64:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1624,
																				"nodeType": "ExpressionStatement",
																				"src": "5146:64:13"
																			},
																			{
																				"assignments": [
																					1626
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1626,
																						"mutability": "mutable",
																						"name": "size",
																						"nameLocation": "5264:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1696,
																						"src": "5256:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1625,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5256:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1627,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "5256:12:13"
																			},
																			{
																				"expression": {
																					"id": 1635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1628,
																								"name": "size",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1626,
																								"src": "5281:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1629,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "5287:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1630,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "5280:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																							"typeString": "tuple(uint256,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1633,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "5319:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1631,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "5297:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1632,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5308:10:13",
																							"memberName": "readUint24",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2447,
																							"src": "5297:21:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint24_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint24,uint256)"
																							}
																						},
																						"id": 1634,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5297:29:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint24_$_t_uint256_$",
																							"typeString": "tuple(uint24,uint256)"
																						}
																					},
																					"src": "5280:46:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1636,
																				"nodeType": "ExpressionStatement",
																				"src": "5280:46:13"
																			},
																			{
																				"assignments": [
																					1638
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1638,
																						"mutability": "mutable",
																						"name": "nrindex",
																						"nameLocation": "5388:7:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1696,
																						"src": "5380:15:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1637,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5380:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1642,
																				"initialValue": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1641,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1639,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "5398:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1640,
																						"name": "size",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1626,
																						"src": "5407:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5398:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "5380:31:13"
																			},
																			{
																				"condition": {
																					"id": 1652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "5427:82:13",
																					"subExpression": {
																						"arguments": [
																							{
																								"id": 1645,
																								"name": "_subdigest",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1467,
																								"src": "5464:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 1646,
																								"name": "addr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1613,
																								"src": "5476:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1647,
																									"name": "_signature",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1469,
																									"src": "5482:10:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_calldata_ptr",
																										"typeString": "bytes calldata"
																									}
																								},
																								"endExpression": {
																									"id": 1649,
																									"name": "nrindex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1638,
																									"src": "5500:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1650,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexRangeAccess",
																								"src": "5482:26:13",
																								"startExpression": {
																									"id": 1648,
																									"name": "rindex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1477,
																									"src": "5493:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr_slice",
																									"typeString": "bytes calldata slice"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes_calldata_ptr_slice",
																									"typeString": "bytes calldata slice"
																								}
																							],
																							"expression": {
																								"id": 1643,
																								"name": "SignatureValidator",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2798,
																								"src": "5428:18:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SignatureValidator_$2798_$",
																									"typeString": "type(library SignatureValidator)"
																								}
																							},
																							"id": 1644,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5447:16:13",
																							"memberName": "isValidSignature",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2797,
																							"src": "5428:35:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
																								"typeString": "function (bytes32,address,bytes calldata) view returns (bool)"
																							}
																						},
																						"id": 1651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5428:81:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1663,
																				"nodeType": "IfStatement",
																				"src": "5423:190:13",
																				"trueBody": {
																					"id": 1662,
																					"nodeType": "Block",
																					"src": "5511:102:13",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1654,
																										"name": "_subdigest",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1467,
																										"src": "5555:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									{
																										"id": 1655,
																										"name": "addr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1613,
																										"src": "5567:4:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"baseExpression": {
																											"id": 1656,
																											"name": "_signature",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1469,
																											"src": "5573:10:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes_calldata_ptr",
																												"typeString": "bytes calldata"
																											}
																										},
																										"endExpression": {
																											"id": 1658,
																											"name": "nrindex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1638,
																											"src": "5591:7:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1659,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexRangeAccess",
																										"src": "5573:26:13",
																										"startExpression": {
																											"id": 1657,
																											"name": "rindex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1477,
																											"src": "5584:6:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_calldata_ptr_slice",
																											"typeString": "bytes calldata slice"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_bytes_calldata_ptr_slice",
																											"typeString": "bytes calldata slice"
																										}
																									],
																									"id": 1653,
																									"name": "InvalidNestedSignature",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1367,
																									"src": "5532:22:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																										"typeString": "function (bytes32,address,bytes memory) pure"
																									}
																								},
																								"id": 1660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5532:68:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1661,
																							"nodeType": "RevertStatement",
																							"src": "5525:75:13"
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 1666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1664,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "5624:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1665,
																						"name": "nrindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1638,
																						"src": "5633:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5624:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1667,
																				"nodeType": "ExpressionStatement",
																				"src": "5624:16:13"
																			},
																			{
																				"expression": {
																					"id": 1670,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1668,
																						"name": "weight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1472,
																						"src": "5706:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 1669,
																						"name": "addrWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1610,
																						"src": "5716:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "5706:20:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1671,
																				"nodeType": "ExpressionStatement",
																				"src": "5706:20:13"
																			},
																			{
																				"assignments": [
																					1673
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1673,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "5794:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1696,
																						"src": "5786:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1672,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "5786:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1678,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 1675,
																							"name": "addr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1613,
																							"src": "5826:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1676,
																							"name": "addrWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1610,
																							"src": "5832:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"id": 1674,
																						"name": "_leafForAddressAndWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "5801:24:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint96_$returns$_t_bytes32_$",
																							"typeString": "function (address,uint96) pure returns (bytes32)"
																						}
																					},
																					"id": 1677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5801:42:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "5786:57:13"
																			},
																			{
																				"expression": {
																					"id": 1693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1679,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "5855:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1685,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1680,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "5862:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "!=",
																							"rightExpression": {
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1683,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5878:1:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1682,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "5870:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 1681,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "5870:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1684,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5870:10:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "5862:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"id": 1691,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1673,
																							"src": "5917:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 1692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "5862:59:13",
																						"trueExpression": {
																							"arguments": [
																								{
																									"id": 1688,
																									"name": "root",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "5903:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1689,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1673,
																									"src": "5909:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								],
																								"expression": {
																									"id": 1686,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "5883:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 1687,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5892:10:13",
																								"memberName": "fkeccak256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2491,
																								"src": "5883:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																									"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																								}
																							},
																							"id": 1690,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5883:31:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "5855:66:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1694,
																				"nodeType": "ExpressionStatement",
																				"src": "5855:66:13"
																			},
																			{
																				"id": 1695,
																				"nodeType": "Continue",
																				"src": "5933:8:13"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1698,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "5966:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1699,
																			"name": "FLAG_NODE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1350,
																			"src": "5974:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5966:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1731,
																	"nodeType": "IfStatement",
																	"src": "5962:243:13",
																	"trueBody": {
																		"id": 1730,
																		"nodeType": "Block",
																		"src": "5985:220:13",
																		"statements": [
																			{
																				"assignments": [
																					1702
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1702,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "6033:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1730,
																						"src": "6025:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1701,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "6025:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1703,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6025:12:13"
																			},
																			{
																				"expression": {
																					"id": 1711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1704,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1702,
																								"src": "6050:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 1705,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "6056:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1706,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "6049:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
																							"typeString": "tuple(bytes32,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1709,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "6089:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1707,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "6066:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1708,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6077:11:13",
																							"memberName": "readBytes32",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2475,
																							"src": "6066:22:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes32_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (bytes32,uint256)"
																							}
																						},
																						"id": 1710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6066:30:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
																							"typeString": "tuple(bytes32,uint256)"
																						}
																					},
																					"src": "6049:47:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1712,
																				"nodeType": "ExpressionStatement",
																				"src": "6049:47:13"
																			},
																			{
																				"expression": {
																					"id": 1727,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1713,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "6108:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1719,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1714,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "6115:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "!=",
																							"rightExpression": {
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1717,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6131:1:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1716,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "6123:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 1715,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "6123:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1718,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6123:10:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "6115:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"id": 1725,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1702,
																							"src": "6170:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 1726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "6115:59:13",
																						"trueExpression": {
																							"arguments": [
																								{
																									"id": 1722,
																									"name": "root",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "6156:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1723,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "6162:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								],
																								"expression": {
																									"id": 1720,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "6136:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 1721,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6145:10:13",
																								"memberName": "fkeccak256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2491,
																								"src": "6136:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																									"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																								}
																							},
																							"id": 1724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6136:31:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "6108:66:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1728,
																				"nodeType": "ExpressionStatement",
																				"src": "6108:66:13"
																			},
																			{
																				"id": 1729,
																				"nodeType": "Continue",
																				"src": "6186:8:13"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1732,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "6219:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1733,
																			"name": "FLAG_BRANCH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "6227:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6219:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1789,
																	"nodeType": "IfStatement",
																	"src": "6215:472:13",
																	"trueBody": {
																		"id": 1788,
																		"nodeType": "Block",
																		"src": "6240:447:13",
																		"statements": [
																			{
																				"assignments": [
																					1736
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1736,
																						"mutability": "mutable",
																						"name": "size",
																						"nameLocation": "6317:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1788,
																						"src": "6309:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1735,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6309:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1737,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6309:12:13"
																			},
																			{
																				"expression": {
																					"id": 1745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1738,
																								"name": "size",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1736,
																								"src": "6334:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1739,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "6340:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1740,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "6333:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																							"typeString": "tuple(uint256,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1743,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "6372:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1741,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "6350:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1742,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6361:10:13",
																							"memberName": "readUint24",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2447,
																							"src": "6350:21:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint24_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint24,uint256)"
																							}
																						},
																						"id": 1744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6350:29:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint24_$_t_uint256_$",
																							"typeString": "tuple(uint24,uint256)"
																						}
																					},
																					"src": "6333:46:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1746,
																				"nodeType": "ExpressionStatement",
																				"src": "6333:46:13"
																			},
																			{
																				"assignments": [
																					1748
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1748,
																						"mutability": "mutable",
																						"name": "nrindex",
																						"nameLocation": "6399:7:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1788,
																						"src": "6391:15:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1747,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6391:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1752,
																				"initialValue": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1749,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "6409:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1750,
																						"name": "size",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1736,
																						"src": "6418:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6409:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6391:31:13"
																			},
																			{
																				"assignments": [
																					1754
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1754,
																						"mutability": "mutable",
																						"name": "nweight",
																						"nameLocation": "6443:7:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1788,
																						"src": "6435:15:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1753,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6435:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1755,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6435:15:13"
																			},
																			{
																				"assignments": [
																					1757
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1757,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "6460:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1788,
																						"src": "6452:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1756,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "6452:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1758,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6452:12:13"
																			},
																			{
																				"expression": {
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1759,
																								"name": "nweight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1754,
																								"src": "6477:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1760,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1757,
																								"src": "6486:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"id": 1761,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "6476:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1763,
																								"name": "_subdigest",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1467,
																								"src": "6508:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1764,
																									"name": "_signature",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1469,
																									"src": "6520:10:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_calldata_ptr",
																										"typeString": "bytes calldata"
																									}
																								},
																								"endExpression": {
																									"id": 1766,
																									"name": "nrindex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1748,
																									"src": "6538:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1767,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexRangeAccess",
																								"src": "6520:26:13",
																								"startExpression": {
																									"id": 1765,
																									"name": "rindex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1477,
																									"src": "6531:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr_slice",
																									"typeString": "bytes calldata slice"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes_calldata_ptr_slice",
																									"typeString": "bytes calldata slice"
																								}
																							],
																							"id": 1762,
																							"name": "recoverBranch",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1954,
																							"src": "6494:13:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_bytes32_$",
																								"typeString": "function (bytes32,bytes calldata) view returns (uint256,bytes32)"
																							}
																						},
																						"id": 1768,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6494:53:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"src": "6476:71:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1770,
																				"nodeType": "ExpressionStatement",
																				"src": "6476:71:13"
																			},
																			{
																				"expression": {
																					"id": 1773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1771,
																						"name": "weight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1472,
																						"src": "6560:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 1772,
																						"name": "nweight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1754,
																						"src": "6570:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6560:17:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1774,
																				"nodeType": "ExpressionStatement",
																				"src": "6560:17:13"
																			},
																			{
																				"expression": {
																					"id": 1781,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1775,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "6589:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1778,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "6616:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 1779,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1757,
																								"src": "6622:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 1776,
																								"name": "LibOptim",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2530,
																								"src": "6596:8:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																									"typeString": "type(library LibOptim)"
																								}
																							},
																							"id": 1777,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6605:10:13",
																							"memberName": "fkeccak256",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2491,
																							"src": "6596:19:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																								"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																							}
																						},
																						"id": 1780,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6596:31:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "6589:38:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1782,
																				"nodeType": "ExpressionStatement",
																				"src": "6589:38:13"
																			},
																			{
																				"expression": {
																					"id": 1785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1783,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "6640:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1784,
																						"name": "nrindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1748,
																						"src": "6649:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6640:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1786,
																				"nodeType": "ExpressionStatement",
																				"src": "6640:16:13"
																			},
																			{
																				"id": 1787,
																				"nodeType": "Continue",
																				"src": "6668:8:13"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1790,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "6701:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1791,
																			"name": "FLAG_NESTED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "6709:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6701:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1892,
																	"nodeType": "IfStatement",
																	"src": "6697:979:13",
																	"trueBody": {
																		"id": 1891,
																		"nodeType": "Block",
																		"src": "6722:954:13",
																		"statements": [
																			{
																				"assignments": [
																					1794
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1794,
																						"mutability": "mutable",
																						"name": "externalWeight",
																						"nameLocation": "6872:14:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "6864:22:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1793,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6864:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1795,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6864:22:13"
																			},
																			{
																				"expression": {
																					"id": 1803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1796,
																								"name": "externalWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1794,
																								"src": "6899:14:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1797,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "6915:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1798,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "6898:24:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																							"typeString": "tuple(uint256,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1801,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "6946:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1799,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "6925:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1800,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6936:9:13",
																							"memberName": "readUint8",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2403,
																							"src": "6925:20:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint8,uint256)"
																							}
																						},
																						"id": 1802,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6925:28:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
																							"typeString": "tuple(uint8,uint256)"
																						}
																					},
																					"src": "6898:55:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1804,
																				"nodeType": "ExpressionStatement",
																				"src": "6898:55:13"
																			},
																			{
																				"assignments": [
																					1806
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1806,
																						"mutability": "mutable",
																						"name": "internalThreshold",
																						"nameLocation": "6974:17:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "6966:25:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1805,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6966:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1807,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6966:25:13"
																			},
																			{
																				"expression": {
																					"id": 1815,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1808,
																								"name": "internalThreshold",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1806,
																								"src": "7004:17:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1809,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "7023:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1810,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "7003:27:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																							"typeString": "tuple(uint256,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1813,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "7055:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1811,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "7033:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1812,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7044:10:13",
																							"memberName": "readUint16",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2433,
																							"src": "7033:21:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint16_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint16,uint256)"
																							}
																						},
																						"id": 1814,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7033:29:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint16_$_t_uint256_$",
																							"typeString": "tuple(uint16,uint256)"
																						}
																					},
																					"src": "7003:59:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1816,
																				"nodeType": "ExpressionStatement",
																				"src": "7003:59:13"
																			},
																			{
																				"assignments": [
																					1818
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1818,
																						"mutability": "mutable",
																						"name": "size",
																						"nameLocation": "7083:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "7075:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1817,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "7075:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1819,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "7075:12:13"
																			},
																			{
																				"expression": {
																					"id": 1827,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1820,
																								"name": "size",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1818,
																								"src": "7100:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1821,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "7106:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1822,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "7099:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																							"typeString": "tuple(uint256,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1825,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "7138:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1823,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "7116:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1824,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7127:10:13",
																							"memberName": "readUint24",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2447,
																							"src": "7116:21:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint24_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (uint24,uint256)"
																							}
																						},
																						"id": 1826,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7116:29:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint24_$_t_uint256_$",
																							"typeString": "tuple(uint24,uint256)"
																						}
																					},
																					"src": "7099:46:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1828,
																				"nodeType": "ExpressionStatement",
																				"src": "7099:46:13"
																			},
																			{
																				"assignments": [
																					1830
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1830,
																						"mutability": "mutable",
																						"name": "nrindex",
																						"nameLocation": "7165:7:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "7157:15:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1829,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "7157:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1834,
																				"initialValue": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1831,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "7175:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1832,
																						"name": "size",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1818,
																						"src": "7184:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7175:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "7157:31:13"
																			},
																			{
																				"assignments": [
																					1836
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1836,
																						"mutability": "mutable",
																						"name": "internalWeight",
																						"nameLocation": "7209:14:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "7201:22:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 1835,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "7201:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1837,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "7201:22:13"
																			},
																			{
																				"assignments": [
																					1839
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1839,
																						"mutability": "mutable",
																						"name": "internalRoot",
																						"nameLocation": "7233:12:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "7225:20:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1838,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "7225:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1840,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "7225:20:13"
																			},
																			{
																				"expression": {
																					"id": 1851,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1841,
																								"name": "internalWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1836,
																								"src": "7258:14:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1842,
																								"name": "internalRoot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1839,
																								"src": "7274:12:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"id": 1843,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "7257:30:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1845,
																								"name": "_subdigest",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1467,
																								"src": "7304:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1846,
																									"name": "_signature",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1469,
																									"src": "7316:10:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_calldata_ptr",
																										"typeString": "bytes calldata"
																									}
																								},
																								"endExpression": {
																									"id": 1848,
																									"name": "nrindex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1830,
																									"src": "7334:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1849,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexRangeAccess",
																								"src": "7316:26:13",
																								"startExpression": {
																									"id": 1847,
																									"name": "rindex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1477,
																									"src": "7327:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr_slice",
																									"typeString": "bytes calldata slice"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes_calldata_ptr_slice",
																									"typeString": "bytes calldata slice"
																								}
																							],
																							"id": 1844,
																							"name": "recoverBranch",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1954,
																							"src": "7290:13:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_bytes32_$",
																								"typeString": "function (bytes32,bytes calldata) view returns (uint256,bytes32)"
																							}
																						},
																						"id": 1850,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7290:53:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"src": "7257:86:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1852,
																				"nodeType": "ExpressionStatement",
																				"src": "7257:86:13"
																			},
																			{
																				"expression": {
																					"id": 1855,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1853,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "7355:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1854,
																						"name": "nrindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1830,
																						"src": "7364:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7355:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1856,
																				"nodeType": "ExpressionStatement",
																				"src": "7355:16:13"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1859,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1857,
																						"name": "internalWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1836,
																						"src": "7388:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1858,
																						"name": "internalThreshold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1806,
																						"src": "7406:17:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7388:35:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1865,
																				"nodeType": "IfStatement",
																				"src": "7384:92:13",
																				"trueBody": {
																					"id": 1864,
																					"nodeType": "Block",
																					"src": "7425:51:13",
																					"statements": [
																						{
																							"expression": {
																								"id": 1862,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1860,
																									"name": "weight",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1472,
																									"src": "7439:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "+=",
																								"rightHandSide": {
																									"id": 1861,
																									"name": "externalWeight",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1794,
																									"src": "7449:14:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "7439:24:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1863,
																							"nodeType": "ExpressionStatement",
																							"src": "7439:24:13"
																						}
																					]
																				}
																			},
																			{
																				"assignments": [
																					1867
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1867,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "7496:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1891,
																						"src": "7488:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1866,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "7488:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1873,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 1869,
																							"name": "internalRoot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1839,
																							"src": "7518:12:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						{
																							"id": 1870,
																							"name": "internalThreshold",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1806,
																							"src": "7532:17:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1871,
																							"name": "externalWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1794,
																							"src": "7551:14:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1868,
																						"name": "_leafForNested",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1464,
																						"src": "7503:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																							"typeString": "function (bytes32,uint256,uint256) pure returns (bytes32)"
																						}
																					},
																					"id": 1872,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7503:63:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "7488:78:13"
																			},
																			{
																				"expression": {
																					"id": 1888,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1874,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "7578:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1880,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1875,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "7585:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "!=",
																							"rightExpression": {
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1878,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "7601:1:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1877,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "7593:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 1876,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "7593:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1879,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7593:10:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "7585:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"id": 1886,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1867,
																							"src": "7640:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 1887,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "7585:59:13",
																						"trueExpression": {
																							"arguments": [
																								{
																									"id": 1883,
																									"name": "root",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "7626:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1884,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1867,
																									"src": "7632:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								],
																								"expression": {
																									"id": 1881,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "7606:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 1882,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7615:10:13",
																								"memberName": "fkeccak256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2491,
																								"src": "7606:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																									"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																								}
																							},
																							"id": 1885,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7606:31:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7578:66:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1889,
																				"nodeType": "ExpressionStatement",
																				"src": "7578:66:13"
																			},
																			{
																				"id": 1890,
																				"nodeType": "Continue",
																				"src": "7657:8:13"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1893,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "7690:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1894,
																			"name": "FLAG_SUBDIGEST",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "7698:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7690:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1945,
																	"nodeType": "IfStatement",
																	"src": "7686:485:13",
																	"trueBody": {
																		"id": 1944,
																		"nodeType": "Block",
																		"src": "7714:457:13",
																		"statements": [
																			{
																				"assignments": [
																					1897
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1897,
																						"mutability": "mutable",
																						"name": "hardcoded",
																						"nameLocation": "7831:9:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1944,
																						"src": "7823:17:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1896,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "7823:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1898,
																				"nodeType": "VariableDeclarationStatement",
																				"src": "7823:17:13"
																			},
																			{
																				"expression": {
																					"id": 1906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1899,
																								"name": "hardcoded",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1897,
																								"src": "7853:9:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 1900,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "7864:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1901,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "7852:19:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
																							"typeString": "tuple(bytes32,uint256)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1904,
																								"name": "rindex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "7897:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1902,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1469,
																								"src": "7874:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 1903,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7885:11:13",
																							"memberName": "readBytes32",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2475,
																							"src": "7874:22:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes32_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata,uint256) pure returns (bytes32,uint256)"
																							}
																						},
																						"id": 1905,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7874:30:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
																							"typeString": "tuple(bytes32,uint256)"
																						}
																					},
																					"src": "7852:52:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1907,
																				"nodeType": "ExpressionStatement",
																				"src": "7852:52:13"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1908,
																						"name": "hardcoded",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1897,
																						"src": "7920:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"id": 1909,
																						"name": "_subdigest",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1467,
																						"src": "7933:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7920:23:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1920,
																				"nodeType": "IfStatement",
																				"src": "7916:82:13",
																				"trueBody": {
																					"id": 1919,
																					"nodeType": "Block",
																					"src": "7945:53:13",
																					"statements": [
																						{
																							"expression": {
																								"id": 1917,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1911,
																									"name": "weight",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1472,
																									"src": "7959:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"expression": {
																										"arguments": [
																											{
																												"id": 1914,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "7973:7:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint256_$",
																													"typeString": "type(uint256)"
																												},
																												"typeName": {
																													"id": 1913,
																													"name": "uint256",
																													"nodeType": "ElementaryTypeName",
																													"src": "7973:7:13",
																													"typeDescriptions": {}
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_type$_t_uint256_$",
																													"typeString": "type(uint256)"
																												}
																											],
																											"id": 1912,
																											"name": "type",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967269,
																											"src": "7968:4:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1915,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7968:13:13",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_meta_type_t_uint256",
																											"typeString": "type(uint256)"
																										}
																									},
																									"id": 1916,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "7982:3:13",
																									"memberName": "max",
																									"nodeType": "MemberAccess",
																									"src": "7968:17:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "7959:26:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1918,
																							"nodeType": "ExpressionStatement",
																							"src": "7959:26:13"
																						}
																					]
																				}
																			},
																			{
																				"assignments": [
																					1922
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1922,
																						"mutability": "mutable",
																						"name": "node",
																						"nameLocation": "8018:4:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1944,
																						"src": "8010:12:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 1921,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "8010:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 1926,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 1924,
																							"name": "hardcoded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1897,
																							"src": "8052:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1923,
																						"name": "_leafForHardcodedSubdigest",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1441,
																						"src": "8025:26:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
																							"typeString": "function (bytes32) pure returns (bytes32)"
																						}
																					},
																					"id": 1925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8025:37:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "8010:52:13"
																			},
																			{
																				"expression": {
																					"id": 1941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1927,
																						"name": "root",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "8074:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1933,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1928,
																								"name": "root",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "8081:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "!=",
																							"rightExpression": {
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1931,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8097:1:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1930,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "8089:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 1929,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "8089:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1932,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "8089:10:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "8081:18:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"id": 1939,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1922,
																							"src": "8136:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 1940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "8081:59:13",
																						"trueExpression": {
																							"arguments": [
																								{
																									"id": 1936,
																									"name": "root",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "8122:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1937,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1922,
																									"src": "8128:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								],
																								"expression": {
																									"id": 1934,
																									"name": "LibOptim",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2530,
																									"src": "8102:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																										"typeString": "type(library LibOptim)"
																									}
																								},
																								"id": 1935,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8111:10:13",
																								"memberName": "fkeccak256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2491,
																								"src": "8102:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																									"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																								}
																							},
																							"id": 1938,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8102:31:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "8074:66:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 1942,
																				"nodeType": "ExpressionStatement",
																				"src": "8074:66:13"
																			},
																			{
																				"id": 1943,
																				"nodeType": "Continue",
																				"src": "8152:8:13"
																			}
																		]
																	}
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1947,
																				"name": "flag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1484,
																				"src": "8209:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1946,
																			"name": "InvalidSignatureFlag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "8188:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8188:26:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1949,
																	"nodeType": "RevertStatement",
																	"src": "8181:33:13"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "rindex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "3772:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1480,
																	"name": "_signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "3781:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3792:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3781:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3772:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1951,
														"nodeType": "WhileStatement",
														"src": "3765:4458:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "3059:463:13",
										"text": " @notice Returns the weight and root of a signature branch.\n @dev If the signature contains a hardcoded subdigest, and it matches the input digest, then the weight is set to 2 ** 256 - 1.\n @param _subdigest The digest to verify the signature against.\n @param _signature The signature branch to recover.\n @return weight The total weight of the recovered signatures.\n @return root The root hash of the recovered configuration."
									},
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverBranch",
									"nameLocation": "3534:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "_subdigest",
												"nameLocation": "3561:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "3553:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "3592:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "3577:25:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3577:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3547:59:13"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "3643:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "3635:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "3663:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "3655:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:42:13"
									},
									"scope": 2021,
									"src": "3525:4708:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "9085:449:13",
										"statements": [
											{
												"id": 2018,
												"nodeType": "UncheckedBlock",
												"src": "9091:439:13",
												"statements": [
													{
														"expression": {
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"components": [
																	{
																		"id": 1970,
																		"name": "weight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "9110:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1971,
																		"name": "imageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "9118:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1972,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "TupleExpression",
																"src": "9109:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																	"typeString": "tuple(uint256,bytes32)"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1974,
																		"name": "_subdigest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "9145:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1975,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "9157:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexRangeAccess",
																		"src": "9157:14:13",
																		"startExpression": {
																			"hexValue": "36",
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9168:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr_slice",
																			"typeString": "bytes calldata slice"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr_slice",
																			"typeString": "bytes calldata slice"
																		}
																	],
																	"id": 1973,
																	"name": "recoverBranch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "9131:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes calldata) view returns (uint256,bytes32)"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9131:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																	"typeString": "tuple(uint256,bytes32)"
																}
															},
															"src": "9109:63:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1980,
														"nodeType": "ExpressionStatement",
														"src": "9109:63:13"
													},
													{
														"expression": {
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1981,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "9278:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1984,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "9315:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 1982,
																		"name": "LibBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "9290:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibBytes_$2374_$",
																			"typeString": "type(library LibBytes)"
																		}
																	},
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9299:15:13",
																	"memberName": "readFirstUint16",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2361,
																	"src": "9290:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint16_$",
																		"typeString": "function (bytes calldata) pure returns (uint16)"
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9290:36:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "9278:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1987,
														"nodeType": "ExpressionStatement",
														"src": "9278:48:13"
													},
													{
														"expression": {
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1988,
																"name": "checkpoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "9334:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1991,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "9367:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	{
																		"hexValue": "32",
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		},
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"expression": {
																		"id": 1989,
																		"name": "LibBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "9347:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibBytes_$2374_$",
																			"typeString": "type(library LibBytes)"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9356:10:13",
																	"memberName": "readUint32",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2373,
																	"src": "9347:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint32_$",
																		"typeString": "function (bytes calldata,uint256) pure returns (uint32)"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9347:34:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "9334:47:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1995,
														"nodeType": "ExpressionStatement",
														"src": "9334:47:13"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1996,
																"name": "imageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "9390:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1999,
																		"name": "imageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "9422:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2002,
																				"name": "threshold",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "9441:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9433:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2000,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "9433:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9433:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1997,
																		"name": "LibOptim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "9402:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																			"typeString": "type(library LibOptim)"
																		}
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9411:10:13",
																	"memberName": "fkeccak256",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2491,
																	"src": "9402:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																	}
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9402:50:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "9390:62:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "9390:62:13"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "imageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "9460:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2010,
																		"name": "imageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "9492:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2013,
																				"name": "checkpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1968,
																				"src": "9511:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9503:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2011,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "9503:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9503:19:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 2008,
																		"name": "LibOptim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "9472:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																			"typeString": "type(library LibOptim)"
																		}
																	},
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9481:10:13",
																	"memberName": "fkeccak256",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2491,
																	"src": "9472:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9472:51:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "9460:63:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "9460:63:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "8237:652:13",
										"text": " @notice Returns the threshold, weight, root, and checkpoint of a signature.\n @dev To verify the signature, the weight must be greater than or equal to the threshold, and the root\n      must match the expected `imageHash` of the wallet.\n @param _subdigest The digest to verify the signature against.\n @param _signature The signature to recover.\n @return threshold The minimum weight required for the signature to be valid.\n @return weight The total weight of the recovered signatures.\n @return imageHash The root hash of the recovered configuration\n @return checkpoint The checkpoint of the signature."
									},
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "8901:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "_subdigest",
												"nameLocation": "8922:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "8914:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1956,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8914:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "8953:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "8938:25:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1958,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8938:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8908:59:13"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "9004:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "8996:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8996:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "9027:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "9019:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9019:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "imageHash",
												"nameLocation": "9047:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "9039:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "checkpoint",
												"nameLocation": "9070:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "9062:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9062:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:94:13"
									},
									"scope": 2021,
									"src": "8892:642:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2022,
							"src": "419:9117:13",
							"usedErrors": [
								1367,
								1371
							]
						}
					],
					"src": "39:9498:13"
				},
				"id": 13
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						],
						"IModuleAuth": [
							1249
						],
						"LibBytes": [
							2374
						],
						"LibBytesPointer": [
							2476
						],
						"LibOptim": [
							2530
						],
						"ModuleSelfAuth": [
							1116
						],
						"ModuleStorage": [
							1179
						],
						"SequenceBaseSig": [
							2021
						],
						"SequenceChainedSig": [
							2218
						],
						"SignatureValidator": [
							2798
						]
					},
					"id": 2219,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2023,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:14"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
							"file": "./SequenceBaseSig.sol",
							"id": 2024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2219,
							"sourceUnit": 2022,
							"src": "64:31:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/interfaces/IModuleAuth.sol",
							"file": "../../interfaces/IModuleAuth.sol",
							"id": 2025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2219,
							"sourceUnit": 1250,
							"src": "97:42:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleSelfAuth.sol",
							"file": "../../ModuleSelfAuth.sol",
							"id": 2026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2219,
							"sourceUnit": 1117,
							"src": "141:34:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/ModuleStorage.sol",
							"file": "../../ModuleStorage.sol",
							"id": 2027,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2219,
							"sourceUnit": 1180,
							"src": "176:33:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
							"file": "../../../../utils/LibBytesPointer.sol",
							"id": 2028,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2219,
							"sourceUnit": 2477,
							"src": "211:47:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
							"file": "../../../../utils/LibOptim.sol",
							"id": 2029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2219,
							"sourceUnit": 2531,
							"src": "259:40:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2031,
										"name": "IModuleAuth",
										"nameLocations": [
											"743:11:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "743:11:14"
									},
									"id": 2032,
									"nodeType": "InheritanceSpecifier",
									"src": "743:11:14"
								},
								{
									"baseName": {
										"id": 2033,
										"name": "ModuleSelfAuth",
										"nameLocations": [
											"756:14:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "756:14:14"
									},
									"id": 2034,
									"nodeType": "InheritanceSpecifier",
									"src": "756:14:14"
								}
							],
							"canonicalName": "SequenceChainedSig",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2030,
								"nodeType": "StructuredDocumentation",
								"src": "301:401:14",
								"text": " @title Sequence chained auth recovery submodule\n @author Agustin Aguilar (aa@horizon.io)\n @notice Defines Sequence signatures that work by delegating control to new configurations.\n @dev The delegations can be chained together, the first signature is the one that is used to validate\n      the message, the last signature must match the current on-chain configuration of the wallet."
							},
							"fullyImplemented": false,
							"id": 2218,
							"linearizedBaseContracts": [
								2218,
								1116,
								1249
							],
							"name": "SequenceChainedSig",
							"nameLocation": "721:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2037,
									"libraryName": {
										"id": 2035,
										"name": "LibBytesPointer",
										"nameLocations": [
											"781:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2476,
										"src": "781:15:14"
									},
									"nodeType": "UsingForDirective",
									"src": "775:32:14",
									"typeName": {
										"id": 2036,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "801:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "57c56d6b",
									"id": 2042,
									"mutability": "constant",
									"name": "SET_IMAGE_HASH_TYPE_HASH",
									"nameLocation": "835:24:14",
									"nodeType": "VariableDeclaration",
									"scope": 2218,
									"src": "811:95:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2038,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "811:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "536574496d61676548617368286279746573333220696d6167654861736829",
												"id": 2040,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "872:33:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d1",
													"typeString": "literal_string \"SetImageHash(bytes32 imageHash)\""
												},
												"value": "SetImageHash(bytes32 imageHash)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d1",
													"typeString": "literal_string \"SetImageHash(bytes32 imageHash)\""
												}
											],
											"id": 2039,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "862:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2041,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "862:44:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "b006aba0",
									"id": 2050,
									"name": "LowWeightChainedSignature",
									"nameLocation": "917:25:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "949:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "943:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "943:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "969:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "961:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "988:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "980:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:54:14"
									},
									"src": "911:86:14"
								},
								{
									"errorSelector": "37daf62b",
									"id": 2056,
									"name": "WrongChainedCheckpointOrder",
									"nameLocation": "1006:27:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "_current",
												"nameLocation": "1042:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "1034:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "_prev",
												"nameLocation": "1060:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "1052:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:33:14"
									},
									"src": "1000:67:14"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "1381:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2066,
															"name": "SET_IMAGE_HASH_TYPE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "1414:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2067,
															"name": "_imageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "1440:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2064,
															"name": "LibOptim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "1394:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibOptim_$2530_$",
																"typeString": "type(library LibOptim)"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1403:10:14",
														"memberName": "fkeccak256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2491,
														"src": "1394:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2069,
												"nodeType": "Return",
												"src": "1387:64:14"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "1071:222:14",
										"text": " @notice Defined the special token that must be signed to delegate control to a new configuration.\n @param _imageHash The hash of the new configuration.\n @return bytes32 The message hash to be signed."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashSetImageHashStruct",
									"nameLocation": "1305:23:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "_imageHash",
												"nameLocation": "1337:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "1329:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:20:14"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "1372:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2061,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:9:14"
									},
									"scope": 2218,
									"src": "1296:160:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "2540:1839:14",
										"statements": [
											{
												"assignments": [
													2090
												],
												"declarations": [
													{
														"constant": false,
														"id": 2090,
														"mutability": "mutable",
														"name": "rindex",
														"nameLocation": "2554:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "2546:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2546:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2092,
												"initialValue": {
													"hexValue": "31",
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2563:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2546:18:14"
											},
											{
												"assignments": [
													2094
												],
												"declarations": [
													{
														"constant": false,
														"id": 2094,
														"mutability": "mutable",
														"name": "sigSize",
														"nameLocation": "2578:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "2570:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2570:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2095,
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:15:14"
											},
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2096,
																"name": "sigSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "2696:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2097,
																"name": "rindex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "2705:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2695:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2101,
																"name": "rindex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "2737:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2099,
																"name": "_signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "2715:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2726:10:14",
															"memberName": "readUint24",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "2715:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint24_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																"typeString": "function (bytes calldata,uint256) pure returns (uint24,uint256)"
															}
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2715:29:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint24_$_t_uint256_$",
															"typeString": "tuple(uint24,uint256)"
														}
													},
													"src": "2695:49:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "2695:49:14"
											},
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "nrindex",
														"nameLocation": "2758:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "2750:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2750:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2110,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2107,
														"name": "sigSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "2768:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2108,
														"name": "rindex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "2778:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2768:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2750:34:14"
											},
											{
												"expression": {
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2111,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "2799:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2112,
																"name": "weight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2081,
																"src": "2816:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2113,
																"name": "imageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "2830:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2114,
																"name": "subdigest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "2847:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2115,
																"name": "checkpoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "2864:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2791:89:14",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2118,
																"name": "_digest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "2908:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"baseExpression": {
																	"id": 2119,
																	"name": "_signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "2923:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"endExpression": {
																	"id": 2121,
																	"name": "nrindex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "2941:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexRangeAccess",
																"src": "2923:26:14",
																"startExpression": {
																	"id": 2120,
																	"name": "rindex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "2934:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															],
															"id": 2117,
															"name": "signatureRecovery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "2883:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,bytes32,uint256)"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2883:72:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
														}
													},
													"src": "2791:164:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "2791:164:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2126,
														"name": "weight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "2966:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2127,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "2975:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2966:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2139,
												"nodeType": "IfStatement",
												"src": "2962:118:14",
												"trueBody": {
													"id": 2138,
													"nodeType": "Block",
													"src": "2986:94:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2130,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "3027:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"endExpression": {
																			"id": 2132,
																			"name": "nrindex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "3045:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexRangeAccess",
																		"src": "3027:26:14",
																		"startExpression": {
																			"id": 2131,
																			"name": "rindex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2090,
																			"src": "3038:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr_slice",
																			"typeString": "bytes calldata slice"
																		}
																	},
																	{
																		"id": 2134,
																		"name": "threshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "3055:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2135,
																		"name": "weight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "3066:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr_slice",
																			"typeString": "bytes calldata slice"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2129,
																	"name": "LowWeightChainedSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "3001:25:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (bytes memory,uint256,uint256) pure"
																	}
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:72:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2137,
															"nodeType": "RevertStatement",
															"src": "2994:79:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2140,
														"name": "rindex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "3086:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2141,
														"name": "nrindex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "3095:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "3086:16:14"
											},
											{
												"body": {
													"id": 2214,
													"nodeType": "Block",
													"src": "3318:1057:14",
													"statements": [
														{
															"expression": {
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2148,
																			"name": "sigSize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "3378:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2149,
																			"name": "rindex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2090,
																			"src": "3387:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3377:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2153,
																			"name": "rindex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2090,
																			"src": "3419:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2151,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "3397:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3408:10:14",
																		"memberName": "readUint24",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2447,
																		"src": "3397:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint24_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																			"typeString": "function (bytes calldata,uint256) pure returns (uint24,uint256)"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3397:29:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint24_$_t_uint256_$",
																		"typeString": "tuple(uint24,uint256)"
																	}
																},
																"src": "3377:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2156,
															"nodeType": "ExpressionStatement",
															"src": "3377:49:14"
														},
														{
															"expression": {
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2157,
																	"name": "nrindex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "3434:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2158,
																		"name": "sigSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "3444:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2159,
																		"name": "rindex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2090,
																		"src": "3454:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3444:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3434:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2162,
															"nodeType": "ExpressionStatement",
															"src": "3434:26:14"
														},
														{
															"assignments": [
																2164
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2164,
																	"mutability": "mutable",
																	"name": "nextCheckpoint",
																	"nameLocation": "3477:14:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2214,
																	"src": "3469:22:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2163,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3469:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2165,
															"nodeType": "VariableDeclarationStatement",
															"src": "3469:22:14"
														},
														{
															"expression": {
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2166,
																			"name": "threshold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2079,
																			"src": "3510:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2167,
																			"name": "weight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2081,
																			"src": "3529:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2168,
																			"name": "imageHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "3545:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		null,
																		{
																			"id": 2169,
																			"name": "nextCheckpoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "3662:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2170,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3500:184:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$__$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2173,
																					"name": "imageHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2083,
																					"src": "3738:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2172,
																				"name": "_hashSetImageHashStruct",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2071,
																				"src": "3714:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
																					"typeString": "function (bytes32) pure returns (bytes32)"
																				}
																			},
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3714:34:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2175,
																				"name": "_signature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "3758:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"endExpression": {
																				"id": 2177,
																				"name": "nrindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2106,
																				"src": "3776:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexRangeAccess",
																			"src": "3758:26:14",
																			"startExpression": {
																				"id": 2176,
																				"name": "rindex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2090,
																				"src": "3769:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		],
																		"id": 2171,
																		"name": "signatureRecovery",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "3687:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																			"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,bytes32,uint256)"
																		}
																	},
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3687:105:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,bytes32,bytes32,uint256)"
																	}
																},
																"src": "3500:292:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2181,
															"nodeType": "ExpressionStatement",
															"src": "3500:292:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2182,
																	"name": "weight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "3833:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2183,
																	"name": "threshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "3842:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3833:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2195,
															"nodeType": "IfStatement",
															"src": "3829:122:14",
															"trueBody": {
																"id": 2194,
																"nodeType": "Block",
																"src": "3853:98:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2186,
																						"name": "_signature",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2076,
																						"src": "3896:10:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						}
																					},
																					"endExpression": {
																						"id": 2188,
																						"name": "nrindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2106,
																						"src": "3914:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexRangeAccess",
																					"src": "3896:26:14",
																					"startExpression": {
																						"id": 2187,
																						"name": "rindex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2090,
																						"src": "3907:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr_slice",
																						"typeString": "bytes calldata slice"
																					}
																				},
																				{
																					"id": 2190,
																					"name": "threshold",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2079,
																					"src": "3924:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2191,
																					"name": "weight",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2081,
																					"src": "3935:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_calldata_ptr_slice",
																						"typeString": "bytes calldata slice"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2185,
																				"name": "LowWeightChainedSignature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2050,
																				"src": "3870:25:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (bytes memory,uint256,uint256) pure"
																				}
																			},
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3870:72:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2193,
																		"nodeType": "RevertStatement",
																		"src": "3863:79:14"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2196,
																	"name": "nextCheckpoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "4198:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2197,
																	"name": "checkpoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "4216:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4198:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2205,
															"nodeType": "IfStatement",
															"src": "4194:115:14",
															"trueBody": {
																"id": 2204,
																"nodeType": "Block",
																"src": "4228:81:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2200,
																					"name": "nextCheckpoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2164,
																					"src": "4273:14:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2201,
																					"name": "checkpoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2087,
																					"src": "4289:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2199,
																				"name": "WrongChainedCheckpointOrder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2056,
																				"src": "4245:27:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4245:55:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2203,
																		"nodeType": "RevertStatement",
																		"src": "4238:62:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2206,
																	"name": "checkpoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "4317:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2207,
																	"name": "nextCheckpoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "4330:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4317:27:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2209,
															"nodeType": "ExpressionStatement",
															"src": "4317:27:14"
														},
														{
															"expression": {
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2210,
																	"name": "rindex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "4352:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2211,
																	"name": "nrindex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "4361:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4352:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2213,
															"nodeType": "ExpressionStatement",
															"src": "4352:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2144,
														"name": "rindex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "3290:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2145,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "3299:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3310:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3299:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3290:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2215,
												"nodeType": "WhileStatement",
												"src": "3283:1092:14"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "1460:857:14",
										"text": " @notice Returns the threshold, weight, root, and checkpoint of a (chained) signature.\n \n @dev This method return the `threshold`, `weight` and `imageHash` of the last signature in the chain.\n      Intermediate signatures are validated directly in this method. The `subdigest` is the one of the\n      first signature in the chain (since that's the one that is used to validate the message).\n @param _digest The digest to recover the signature from.\n @param _signature The signature to recover.\n @return threshold The threshold of the (last) signature.\n @return weight The weight of the (last) signature.\n @return imageHash The image hash of the (last) signature.\n @return subdigest The subdigest of the (first) signature in the chain.\n @return checkpoint The checkpoint of the (last) signature."
									},
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "chainedRecover",
									"nameLocation": "2329:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "2357:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2349:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2073,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "2385:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2370:25:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2370:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:56:14"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "2436:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2428:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "2459:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2451:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "imageHash",
												"nameLocation": "2479:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2471:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "subdigest",
												"nameLocation": "2502:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2494:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "checkpoint",
												"nameLocation": "2525:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2517:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:117:14"
									},
									"scope": 2218,
									"src": "2320:2059:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2219,
							"src": "703:3678:14",
							"usedErrors": [
								1093,
								1193,
								1197,
								2050,
								2056
							]
						}
					],
					"src": "39:4343:14"
				},
				"id": 14
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						],
						"LibBytes": [
							2374
						],
						"LibBytesPointer": [
							2476
						],
						"LibOptim": [
							2530
						],
						"SequenceBaseSig": [
							2021
						],
						"SequenceDynamicSig": [
							2247
						],
						"SignatureValidator": [
							2798
						]
					},
					"id": 2248,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2220,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:15"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol",
							"file": "./SequenceBaseSig.sol",
							"id": 2221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2248,
							"sourceUnit": 2022,
							"src": "64:31:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SequenceDynamicSig",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2247,
							"linearizedBaseContracts": [
								2247
							],
							"name": "SequenceDynamicSig",
							"nameLocation": "106:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "841:69:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2239,
															"name": "_subdigest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "878:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"baseExpression": {
																"id": 2240,
																"name": "_signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "890:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexRangeAccess",
															"src": "890:14:15",
															"startExpression": {
																"hexValue": "31",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "901:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															}
														],
														"expression": {
															"id": 2237,
															"name": "SequenceBaseSig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "854:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SequenceBaseSig_$2021_$",
																"typeString": "type(library SequenceBaseSig)"
															}
														},
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "870:7:15",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2020,
														"src": "854:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "function (bytes32,bytes calldata) view returns (uint256,uint256,bytes32,uint256)"
														}
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:51:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,bytes32,uint256)"
													}
												},
												"functionReturnParameters": 2236,
												"id": 2244,
												"nodeType": "Return",
												"src": "847:58:15"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "130:515:15",
										"text": " @notice Recover a \"dynamically encoded\" Sequence signature.\n @dev The Signature is stripped of the first byte, which is the encoding flag.\n @param _subdigest The digest of the signature.\n @param _signature The Sequence signature.\n @return threshold The threshold weight required to validate the signature.\n @return weight The weight of the signature.\n @return imageHash The hash of the recovered configuration.\n @return checkpoint The checkpoint of the configuration."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "657:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "_subdigest",
												"nameLocation": "678:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "670:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "709:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "694:25:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "694:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:59:15"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "760:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "752:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "783:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "775:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "imageHash",
												"nameLocation": "803:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "795:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "checkpoint",
												"nameLocation": "826:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "818:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:94:15"
									},
									"scope": 2247,
									"src": "648:262:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2248,
							"src": "98:814:15",
							"usedErrors": []
						}
					],
					"src": "39:874:15"
				},
				"id": 15
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol",
					"exportedSymbols": {
						"SequenceNoChainIdSig": [
							2275
						]
					},
					"id": 2276,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2249,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SequenceNoChainIdSig",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2275,
							"linearizedBaseContracts": [
								2275
							],
							"name": "SequenceNoChainIdSig",
							"nameLocation": "73:20:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "472:145:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "528:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "556:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "548:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2261,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "548:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "548:10:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "576:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SequenceNoChainIdSig_$2275",
																				"typeString": "library SequenceNoChainIdSig"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SequenceNoChainIdSig_$2275",
																				"typeString": "library SequenceNoChainIdSig"
																			}
																		],
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "568:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "568:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "568:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2269,
																	"name": "_digest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "591:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2258,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "502:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "506:12:16",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "502:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "502:104:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2257,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "485:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "485:127:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2256,
												"id": 2272,
												"nodeType": "Return",
												"src": "478:134:16"
											}
										]
									},
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "99:302:16",
										"text": " @notice Computes a subdigest for a Sequence signature that works on all chains.\n @dev The subdigest is computed by removing the chain ID from the digest (using 0 instead).\n @param _digest The digest of the chain of signatures.\n @return bytes32 The subdigest with no chain ID."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subdigest",
									"nameLocation": "413:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "_digest",
												"nameLocation": "431:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "423:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2251,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:17:16"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "463:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:9:16"
									},
									"scope": 2275,
									"src": "404:213:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2276,
							"src": "65:554:16",
							"usedErrors": []
						}
					],
					"src": "39:581:16"
				},
				"id": 16
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/modules/commons/submodules/nonce/SubModuleNonce.sol",
					"exportedSymbols": {
						"SubModuleNonce": [
							2324
						]
					},
					"id": 2325,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2277,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SubModuleNonce",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2324,
							"linearizedBaseContracts": [
								2324
							],
							"name": "SubModuleNonce",
							"nameLocation": "73:14:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2280,
									"mutability": "constant",
									"name": "NONCE_BITS",
									"nameLocation": "174:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2324,
									"src": "148:41:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 2279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "187:2:17",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2293,
									"mutability": "constant",
									"name": "NONCE_MASK",
									"nameLocation": "219:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2324,
									"src": "193:73:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2281,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "253:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2287,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "253:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2286,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "248:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "248:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "261:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "248:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													],
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "240:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 2284,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "240:7:17",
														"typeDescriptions": {}
													}
												},
												"id": 2291,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "240:25:17",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2283,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "232:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 2282,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "232:7:17",
												"typeDescriptions": {}
											}
										},
										"id": 2292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "232:34:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "603:146:17",
										"statements": [
											{
												"id": 2321,
												"nodeType": "UncheckedBlock",
												"src": "609:136:17",
												"statements": [
													{
														"expression": {
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2303,
																"name": "_space",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "649:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2304,
																	"name": "_rawNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "658:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 2305,
																	"name": "NONCE_BITS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "671:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "658:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "649:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2308,
														"nodeType": "ExpressionStatement",
														"src": "649:32:17"
													},
													{
														"expression": {
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2309,
																"name": "_nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "689:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2314,
																					"name": "_rawNonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2296,
																					"src": "714:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "706:7:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 2312,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "706:7:17",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "706:18:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 2316,
																			"name": "NONCE_MASK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2293,
																			"src": "727:10:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "706:31:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "698:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2310,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "698:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "698:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "689:49:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2320,
														"nodeType": "ExpressionStatement",
														"src": "689:49:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "271:222:17",
										"text": " @notice Decodes a raw nonce\n @dev Schema: space[160]:type[96]\n @param _rawNonce Nonce to be decoded\n @return _space The nonce space of the raw nonce\n @return _nonce The nonce of the raw nonce"
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeNonce",
									"nameLocation": "505:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "_rawNonce",
												"nameLocation": "525:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "517:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:19:17"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "_space",
												"nameLocation": "572:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "564:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "592:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "584:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:44:17"
									},
									"scope": 2324,
									"src": "496:253:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2325,
							"src": "65:686:17",
							"usedErrors": []
						}
					],
					"src": "39:713:17"
				},
				"id": 17
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
					"exportedSymbols": {
						"LibBytes": [
							2374
						]
					},
					"id": 2375,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2326,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibBytes",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2327,
								"nodeType": "StructuredDocumentation",
								"src": "65:339:18",
								"text": " @title Library for reading data from bytes arrays\n @author Agustin Aguilar (aa@horizon.io)\n @notice This library contains functions for reading data from bytes arrays.\n @dev These functions do not check if the input index is within the bounds of the data array.\n         Reading out of bounds may return dirty values."
							},
							"fullyImplemented": true,
							"id": 2374,
							"linearizedBaseContracts": [
								2374
							],
							"name": "LibBytes",
							"nameLocation": "413:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "767:75:18",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "782:56:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "790:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "812:11:18"
																			},
																			{
																				"name": "index",
																				"nodeType": "YulIdentifier",
																				"src": "825:5:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:23:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "795:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:37:18"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "790:1:18"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2335,
														"isOffset": false,
														"isSlot": false,
														"src": "790:1:18",
														"valueSize": 1
													},
													{
														"declaration": 2330,
														"isOffset": true,
														"isSlot": false,
														"src": "812:11:18",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2332,
														"isOffset": false,
														"isSlot": false,
														"src": "825:5:18",
														"valueSize": 1
													}
												],
												"id": 2337,
												"nodeType": "InlineAssembly",
												"src": "773:65:18"
											}
										]
									},
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "427:226:18",
										"text": " @notice Returns the bytes32 value at the given index in the input data.\n @param data The input data.\n @param index The index of the value to retrieve.\n @return a The bytes32 value at the given index."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytes32",
									"nameLocation": "665:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "697:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "682:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "682:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "715:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "707:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:48:18"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "761:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "753:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:19:18"
									},
									"scope": 2374,
									"src": "656:186:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "1178:108:18",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1193:89:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1201:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "index",
																				"nodeType": "YulIdentifier",
																				"src": "1230:5:18"
																			},
																			{
																				"name": "data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "1237:11:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:23:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1213:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:37:18"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "1205:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1257:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1266:3:18",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "1271:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:14:18"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "1257:1:18"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2347,
														"isOffset": false,
														"isSlot": false,
														"src": "1257:1:18",
														"valueSize": 1
													},
													{
														"declaration": 2342,
														"isOffset": true,
														"isSlot": false,
														"src": "1237:11:18",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2344,
														"isOffset": false,
														"isSlot": false,
														"src": "1230:5:18",
														"valueSize": 1
													}
												],
												"id": 2349,
												"nodeType": "InlineAssembly",
												"src": "1184:98:18"
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "846:222:18",
										"text": " @notice Returns the uint8 value at the given index in the input data.\n @param data The input data.\n @param index The index of the value to retrieve.\n @return a The uint8 value at the given index."
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint8",
									"nameLocation": "1080:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1110:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1095:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1095:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1128:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1120:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:48:18"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1172:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1166:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2346,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1166:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:17:18"
									},
									"scope": 2374,
									"src": "1071:215:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "1550:96:18",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1565:77:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1573:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data.offset",
																		"nodeType": "YulIdentifier",
																		"src": "1598:11:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:25:18"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "1577:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1617:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1626:3:18",
																		"type": "",
																		"value": "240"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "1631:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1622:14:18"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "1617:1:18"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2357,
														"isOffset": false,
														"isSlot": false,
														"src": "1617:1:18",
														"valueSize": 1
													},
													{
														"declaration": 2354,
														"isOffset": true,
														"isSlot": false,
														"src": "1598:11:18",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"id": 2359,
												"nodeType": "InlineAssembly",
												"src": "1556:86:18"
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "1290:162:18",
										"text": " @notice Returns the first uint16 value in the input data.\n @param data The input data.\n @return a The first uint16 value in the input data."
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readFirstUint16",
									"nameLocation": "1464:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1500:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "1485:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1485:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:29:18"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1544:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "1537:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2356,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1537:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:18:18"
									},
									"scope": 2374,
									"src": "1455:191:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "1986:108:18",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2001:89:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2009:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "index",
																				"nodeType": "YulIdentifier",
																				"src": "2038:5:18"
																			},
																			{
																				"name": "data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "2045:11:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2034:23:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2021:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:37:18"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "2013:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2065:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:18",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "2079:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:14:18"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "2065:1:18"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2369,
														"isOffset": false,
														"isSlot": false,
														"src": "2065:1:18",
														"valueSize": 1
													},
													{
														"declaration": 2364,
														"isOffset": true,
														"isSlot": false,
														"src": "2045:11:18",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2366,
														"isOffset": false,
														"isSlot": false,
														"src": "2038:5:18",
														"valueSize": 1
													}
												],
												"id": 2371,
												"nodeType": "InlineAssembly",
												"src": "1992:98:18"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "1650:224:18",
										"text": " @notice Returns the uint32 value at the given index in the input data.\n @param data The input data.\n @param index The index of the value to retrieve.\n @return a The uint32 value at the given index."
									},
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint32",
									"nameLocation": "1886:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1917:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1902:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1902:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1935:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1927:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:48:18"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1980:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1973:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2368,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1973:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:18:18"
									},
									"scope": 2374,
									"src": "1877:217:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2375,
							"src": "405:1691:18",
							"usedErrors": []
						}
					],
					"src": "39:2058:18"
				},
				"id": 18
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytesPointer.sol",
					"exportedSymbols": {
						"LibBytesPointer": [
							2476
						]
					},
					"id": 2477,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2376,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibBytesPointer",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2377,
								"nodeType": "StructuredDocumentation",
								"src": "65:369:19",
								"text": " @title Library for reading data from bytes arrays with a pointer\n @author Agustin Aguilar (aa@horizon.io)\n @notice This library contains functions for reading data from bytes arrays with a pointer.\n @dev These functions do not check if the input index is within the bounds of the data array.\n         Reading out of bounds may return dirty values."
							},
							"fullyImplemented": true,
							"id": 2476,
							"linearizedBaseContracts": [
								2476
							],
							"name": "LibBytesPointer",
							"nameLocation": "443:15:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "794:119:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "809:100:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "817:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "_data.offset",
																		"nodeType": "YulIdentifier",
																		"src": "842:12:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "829:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:26:19"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "821:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "862:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "871:3:19",
																		"type": "",
																		"value": "240"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "876:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "867:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:14:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "862:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "888:15:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "902:1:19",
																"type": "",
																"value": "2"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "888:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2380,
														"isOffset": true,
														"isSlot": false,
														"src": "842:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2383,
														"isOffset": false,
														"isSlot": false,
														"src": "862:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2385,
														"isOffset": false,
														"isSlot": false,
														"src": "888:10:19",
														"valueSize": 1
													}
												],
												"id": 2387,
												"nodeType": "InlineAssembly",
												"src": "800:109:19"
											}
										]
									},
									"documentation": {
										"id": 2378,
										"nodeType": "StructuredDocumentation",
										"src": "464:207:19",
										"text": " @dev Returns the first uint16 value in the input data and updates the pointer.\n @param _data The input data.\n @return a The first uint16 value.\n @return newPointer The new pointer."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readFirstUint16",
									"nameLocation": "683:15:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "719:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "704:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "704:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:30:19"
									},
									"returnParameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "764:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "757:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2382,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "779:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "771:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:42:19"
									},
									"scope": 2476,
									"src": "674:239:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "1342:145:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1357:126:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1365:51:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_index",
																				"nodeType": "YulIdentifier",
																				"src": "1394:6:19"
																			},
																			{
																				"name": "_data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "1402:12:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1390:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:25:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1377:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:39:19"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "1369:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1423:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1432:3:19",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "1437:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:14:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "1423:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1449:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "_index",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1475:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1463:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:14:19"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "1449:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2392,
														"isOffset": true,
														"isSlot": false,
														"src": "1402:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2394,
														"isOffset": false,
														"isSlot": false,
														"src": "1394:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2394,
														"isOffset": false,
														"isSlot": false,
														"src": "1467:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2397,
														"isOffset": false,
														"isSlot": false,
														"src": "1423:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2399,
														"isOffset": false,
														"isSlot": false,
														"src": "1449:10:19",
														"valueSize": 1
													}
												],
												"id": 2401,
												"nodeType": "InlineAssembly",
												"src": "1348:135:19"
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "917:289:19",
										"text": " @notice Returns the uint8 value at the given index in the input data and updates the pointer.\n @param _data The input data.\n @param _index The index of the value to retrieve.\n @return a The uint8 value at the given index.\n @return newPointer The new pointer."
									},
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint8",
									"nameLocation": "1218:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1248:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1233:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "1267:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1259:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:50:19"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1312:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1306:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2396,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1306:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "1327:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1319:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:41:19"
									},
									"scope": 2476,
									"src": "1209:278:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "1998:220:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2013:201:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2021:51:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_index",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:19"
																			},
																			{
																				"name": "_data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "2058:12:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:25:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2033:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:39:19"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "2025:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2079:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:3:19",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "2093:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2084:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:14:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "2079:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2105:67:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:19",
																				"type": "",
																				"value": "88"
																			},
																			{
																				"name": "word",
																				"nodeType": "YulIdentifier",
																				"src": "2122:4:19"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "2114:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2114:13:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2129:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:62:19"
															},
															"variableNames": [
																{
																	"name": "b",
																	"nodeType": "YulIdentifier",
																	"src": "2105:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2179:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "_index",
																		"nodeType": "YulIdentifier",
																		"src": "2197:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2193:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:15:19"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "2179:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2406,
														"isOffset": true,
														"isSlot": false,
														"src": "2058:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2408,
														"isOffset": false,
														"isSlot": false,
														"src": "2050:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2408,
														"isOffset": false,
														"isSlot": false,
														"src": "2197:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2411,
														"isOffset": false,
														"isSlot": false,
														"src": "2079:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2413,
														"isOffset": false,
														"isSlot": false,
														"src": "2105:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2415,
														"isOffset": false,
														"isSlot": false,
														"src": "2179:10:19",
														"valueSize": 1
													}
												],
												"id": 2417,
												"nodeType": "InlineAssembly",
												"src": "2004:210:19"
											}
										]
									},
									"documentation": {
										"id": 2404,
										"nodeType": "StructuredDocumentation",
										"src": "1491:349:19",
										"text": " @notice Returns the uint8 value and the address at the given index in the input data and updates the pointer.\n @param _data The input data.\n @param _index The index of the value to retrieve.\n @return a The uint8 value at the given index.\n @return b The following address value.\n @return newPointer The new pointer."
									},
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint8Address",
									"nameLocation": "1852:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1889:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "1874:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1874:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "1908:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "1900:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:50:19"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1953:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "1947:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2410,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1947:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1968:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "1960:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "1983:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "1975:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:56:19"
									},
									"scope": 2476,
									"src": "1843:375:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "2651:158:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2666:139:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2674:51:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_index",
																				"nodeType": "YulIdentifier",
																				"src": "2703:6:19"
																			},
																			{
																				"name": "_data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "2711:12:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2699:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2699:25:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2686:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:39:19"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "2678:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2732:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2745:3:19",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"name": "word",
																				"nodeType": "YulIdentifier",
																				"src": "2750:4:19"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "2741:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2741:14:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2757:6:19",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2737:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:27:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "2732:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2771:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "_index",
																		"nodeType": "YulIdentifier",
																		"src": "2789:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:14:19"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "2771:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2422,
														"isOffset": true,
														"isSlot": false,
														"src": "2711:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2424,
														"isOffset": false,
														"isSlot": false,
														"src": "2703:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2424,
														"isOffset": false,
														"isSlot": false,
														"src": "2789:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2427,
														"isOffset": false,
														"isSlot": false,
														"src": "2732:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2429,
														"isOffset": false,
														"isSlot": false,
														"src": "2771:10:19",
														"valueSize": 1
													}
												],
												"id": 2431,
												"nodeType": "InlineAssembly",
												"src": "2657:148:19"
											}
										]
									},
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "2222:291:19",
										"text": " @notice Returns the uint16 value at the given index in the input data and updates the pointer.\n @param _data The input data.\n @param _index The index of the value to retrieve.\n @return a The uint16 value at the given index.\n @return newPointer The new pointer."
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint16",
									"nameLocation": "2525:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2556:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2541:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2541:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "2575:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2567:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2567:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:50:19"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2621:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2614:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2426,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2614:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "2636:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2628:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:42:19"
									},
									"scope": 2476,
									"src": "2516:293:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2446,
										"nodeType": "Block",
										"src": "3242:160:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3257:141:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3265:51:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_index",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:19"
																			},
																			{
																				"name": "_data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "3302:12:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3290:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3290:25:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3277:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3277:39:19"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "3269:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3323:34:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3336:3:19",
																				"type": "",
																				"value": "232"
																			},
																			{
																				"name": "word",
																				"nodeType": "YulIdentifier",
																				"src": "3341:4:19"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "3332:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3332:14:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:8:19",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3328:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:29:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "3323:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3364:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "_index",
																		"nodeType": "YulIdentifier",
																		"src": "3382:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:1:19",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:14:19"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "3364:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2436,
														"isOffset": true,
														"isSlot": false,
														"src": "3302:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2438,
														"isOffset": false,
														"isSlot": false,
														"src": "3294:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2438,
														"isOffset": false,
														"isSlot": false,
														"src": "3382:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2441,
														"isOffset": false,
														"isSlot": false,
														"src": "3323:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2443,
														"isOffset": false,
														"isSlot": false,
														"src": "3364:10:19",
														"valueSize": 1
													}
												],
												"id": 2445,
												"nodeType": "InlineAssembly",
												"src": "3248:150:19"
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "2813:291:19",
										"text": " @notice Returns the uint24 value at the given index in the input data and updates the pointer.\n @param _data The input data.\n @param _index The index of the value to retrieve.\n @return a The uint24 value at the given index.\n @return newPointer The new pointer."
									},
									"id": 2447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint24",
									"nameLocation": "3116:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3147:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3132:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3132:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3166:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3158:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:50:19"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3212:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3205:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2440,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3205:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "3227:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3219:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3199:42:19"
									},
									"scope": 2476,
									"src": "3107:295:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "3835:170:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3850:151:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3858:51:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_index",
																				"nodeType": "YulIdentifier",
																				"src": "3887:6:19"
																			},
																			{
																				"name": "_data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "3895:12:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3883:25:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3870:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:39:19"
															},
															"variables": [
																{
																	"name": "word",
																	"nodeType": "YulTypedName",
																	"src": "3862:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3916:44:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3929:3:19",
																				"type": "",
																				"value": "192"
																			},
																			{
																				"name": "word",
																				"nodeType": "YulIdentifier",
																				"src": "3934:4:19"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3925:14:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3941:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:39:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "3916:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3967:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "_index",
																		"nodeType": "YulIdentifier",
																		"src": "3985:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3993:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:14:19"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "3967:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2450,
														"isOffset": true,
														"isSlot": false,
														"src": "3895:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2452,
														"isOffset": false,
														"isSlot": false,
														"src": "3887:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2452,
														"isOffset": false,
														"isSlot": false,
														"src": "3985:6:19",
														"valueSize": 1
													},
													{
														"declaration": 2455,
														"isOffset": false,
														"isSlot": false,
														"src": "3916:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2457,
														"isOffset": false,
														"isSlot": false,
														"src": "3967:10:19",
														"valueSize": 1
													}
												],
												"id": 2459,
												"nodeType": "InlineAssembly",
												"src": "3841:160:19"
											}
										]
									},
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "3406:291:19",
										"text": " @notice Returns the uint64 value at the given index in the input data and updates the pointer.\n @param _data The input data.\n @param _index The index of the value to retrieve.\n @return a The uint64 value at the given index.\n @return newPointer The new pointer."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint64",
									"nameLocation": "3709:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3740:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3725:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3725:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3759:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3751:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3751:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3719:50:19"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3805:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3798:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2454,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3798:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "3820:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3812:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:42:19"
									},
									"scope": 2476,
									"src": "3700:305:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "4446:117:19",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4461:98:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4469:46:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_pointer",
																				"nodeType": "YulIdentifier",
																				"src": "4491:8:19"
																			},
																			{
																				"name": "_data.offset",
																				"nodeType": "YulIdentifier",
																				"src": "4501:12:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4487:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4487:27:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4474:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:41:19"
															},
															"variableNames": [
																{
																	"name": "a",
																	"nodeType": "YulIdentifier",
																	"src": "4469:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4522:31:19",
															"value": {
																"arguments": [
																	{
																		"name": "_pointer",
																		"nodeType": "YulIdentifier",
																		"src": "4540:8:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4536:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:17:19"
															},
															"variableNames": [
																{
																	"name": "newPointer",
																	"nodeType": "YulIdentifier",
																	"src": "4522:10:19"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2464,
														"isOffset": true,
														"isSlot": false,
														"src": "4501:12:19",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2466,
														"isOffset": false,
														"isSlot": false,
														"src": "4491:8:19",
														"valueSize": 1
													},
													{
														"declaration": 2466,
														"isOffset": false,
														"isSlot": false,
														"src": "4540:8:19",
														"valueSize": 1
													},
													{
														"declaration": 2469,
														"isOffset": false,
														"isSlot": false,
														"src": "4469:1:19",
														"valueSize": 1
													},
													{
														"declaration": 2471,
														"isOffset": false,
														"isSlot": false,
														"src": "4522:10:19",
														"valueSize": 1
													}
												],
												"id": 2473,
												"nodeType": "InlineAssembly",
												"src": "4452:107:19"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "4009:295:19",
										"text": " @notice Returns the bytes32 value at the given index in the input data and updates the pointer.\n @param _data The input data.\n @param _pointer The index of the value to retrieve.\n @return a The bytes32 value at the given index.\n @return newPointer The new pointer."
									},
									"id": 2475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytes32",
									"nameLocation": "4316:11:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4348:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "4333:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4333:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "_pointer",
												"nameLocation": "4367:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "4359:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4359:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:52:19"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4416:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "4408:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "newPointer",
												"nameLocation": "4431:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "4423:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:43:19"
									},
									"scope": 2476,
									"src": "4307:256:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2477,
							"src": "435:4130:19",
							"usedErrors": []
						}
					],
					"src": "39:4527:19"
				},
				"id": 19
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibOptim.sol",
					"exportedSymbols": {
						"LibOptim": [
							2530
						]
					},
					"id": 2531,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2478,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibOptim",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2479,
								"nodeType": "StructuredDocumentation",
								"src": "64:179:20",
								"text": " @title Library for optimized EVM operations\n @author Agustin Aguilar (aa@horizon.io)\n @notice This library contains functions for optimizing certain EVM operations."
							},
							"fullyImplemented": true,
							"id": 2530,
							"linearizedBaseContracts": [
								2530
							],
							"name": "LibOptim",
							"nameLocation": "252:8:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "633:95:20",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "648:76:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "663:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_a",
																		"nodeType": "YulIdentifier",
																		"src": "666:2:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:13:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "656:13:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "683:2:20",
																		"type": "",
																		"value": "32"
																	},
																	{
																		"name": "_b",
																		"nodeType": "YulIdentifier",
																		"src": "687:2:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "676:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:14:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "676:14:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "697:21:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "702:9:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:16:20"
															},
															"variableNames": [
																{
																	"name": "c",
																	"nodeType": "YulIdentifier",
																	"src": "697:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2482,
														"isOffset": false,
														"isSlot": false,
														"src": "666:2:20",
														"valueSize": 1
													},
													{
														"declaration": 2484,
														"isOffset": false,
														"isSlot": false,
														"src": "687:2:20",
														"valueSize": 1
													},
													{
														"declaration": 2487,
														"isOffset": false,
														"isSlot": false,
														"src": "697:1:20",
														"valueSize": 1
													}
												],
												"id": 2489,
												"nodeType": "InlineAssembly",
												"src": "639:85:20"
											}
										]
									},
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "266:274:20",
										"text": " @notice Computes the keccak256 hash of two 32-byte inputs.\n @dev It uses only scratch memory space.\n @param _a The first 32 bytes of the hash.\n @param _b The second 32 bytes of the hash.\n @return c The keccak256 hash of the two 32-byte inputs."
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fkeccak256",
									"nameLocation": "552:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "576:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "568:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2481,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "592:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "584:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:36:20"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "630:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "622:9:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:11:20"
									},
									"scope": 2530,
									"src": "543:185:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "913:210:20",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "928:191:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "936:28:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "948:14:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:16:20"
															},
															"variables": [
																{
																	"name": "size",
																	"nodeType": "YulTypedName",
																	"src": "940:4:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "971:16:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "982:4:20",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "976:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:11:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "971:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "994:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "1011:1:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1014:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:10:20"
															},
															"variables": [
																{
																	"name": "start",
																	"nodeType": "YulTypedName",
																	"src": "998:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1031:4:20",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "1041:5:20"
																			},
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1048:4:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1037:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1037:16:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:30:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1024:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "1068:1:20"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1071:4:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1061:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1061:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "1098:5:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1108:4:20"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1083:14:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:30:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:30:20"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2495,
														"isOffset": false,
														"isSlot": false,
														"src": "1011:1:20",
														"valueSize": 1
													},
													{
														"declaration": 2495,
														"isOffset": false,
														"isSlot": false,
														"src": "1068:1:20",
														"valueSize": 1
													},
													{
														"declaration": 2495,
														"isOffset": false,
														"isSlot": false,
														"src": "971:1:20",
														"valueSize": 1
													}
												],
												"id": 2497,
												"nodeType": "InlineAssembly",
												"src": "919:200:20"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "732:117:20",
										"text": " @notice Returns the return data from the last call.\n @return r The return data from the last call."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnData",
									"nameLocation": "861:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:2:20"
									},
									"returnParameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "910:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "897:14:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "897:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:16:20"
									},
									"scope": 2530,
									"src": "852:271:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "1648:230:20",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1663:211:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1671:22:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:4:20",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1682:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:11:20"
															},
															"variables": [
																{
																	"name": "tmp",
																	"nodeType": "YulTypedName",
																	"src": "1675:3:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tmp",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:20"
																	},
																	{
																		"name": "_data.offset",
																		"nodeType": "YulIdentifier",
																		"src": "1718:12:20"
																	},
																	{
																		"name": "_data.length",
																		"nodeType": "YulIdentifier",
																		"src": "1732:12:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1700:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:45:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:45:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1753:115:20",
															"value": {
																"arguments": [
																	{
																		"name": "_gas",
																		"nodeType": "YulIdentifier",
																		"src": "1772:4:20"
																	},
																	{
																		"name": "_to",
																		"nodeType": "YulIdentifier",
																		"src": "1786:3:20"
																	},
																	{
																		"name": "_val",
																		"nodeType": "YulIdentifier",
																		"src": "1799:4:20"
																	},
																	{
																		"name": "tmp",
																		"nodeType": "YulIdentifier",
																		"src": "1813:3:20"
																	},
																	{
																		"name": "_data.length",
																		"nodeType": "YulIdentifier",
																		"src": "1826:12:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1859:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1758:4:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:110:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1753:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2508,
														"isOffset": false,
														"isSlot": false,
														"src": "1732:12:20",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 2508,
														"isOffset": false,
														"isSlot": false,
														"src": "1826:12:20",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 2508,
														"isOffset": true,
														"isSlot": false,
														"src": "1718:12:20",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2506,
														"isOffset": false,
														"isSlot": false,
														"src": "1772:4:20",
														"valueSize": 1
													},
													{
														"declaration": 2502,
														"isOffset": false,
														"isSlot": false,
														"src": "1786:3:20",
														"valueSize": 1
													},
													{
														"declaration": 2504,
														"isOffset": false,
														"isSlot": false,
														"src": "1799:4:20",
														"valueSize": 1
													},
													{
														"declaration": 2511,
														"isOffset": false,
														"isSlot": false,
														"src": "1753:1:20",
														"valueSize": 1
													}
												],
												"id": 2513,
												"nodeType": "InlineAssembly",
												"src": "1654:220:20"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "1127:395:20",
										"text": " @notice Calls another contract with the given parameters.\n @dev This method doesn't increase the memory pointer.\n @param _to The address of the contract to call.\n @param _val The value to send to the contract.\n @param _gas The amount of gas to provide for the call.\n @param _data The data to send to the contract.\n @return r The success status of the call."
									},
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "call",
									"nameLocation": "1534:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1552:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1544:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "_val",
												"nameLocation": "1569:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1561:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "_gas",
												"nameLocation": "1587:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1579:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1612:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1597:20:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1597:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:83:20"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1645:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1640:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1640:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:8:20"
									},
									"scope": 2530,
									"src": "1525:353:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "2361:224:20",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2376:205:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2384:22:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:4:20",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2395:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:11:20"
															},
															"variables": [
																{
																	"name": "tmp",
																	"nodeType": "YulTypedName",
																	"src": "2388:3:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tmp",
																		"nodeType": "YulIdentifier",
																		"src": "2426:3:20"
																	},
																	{
																		"name": "_data.offset",
																		"nodeType": "YulIdentifier",
																		"src": "2431:12:20"
																	},
																	{
																		"name": "_data.length",
																		"nodeType": "YulIdentifier",
																		"src": "2445:12:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2413:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:45:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2413:45:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2466:109:20",
															"value": {
																"arguments": [
																	{
																		"name": "_gas",
																		"nodeType": "YulIdentifier",
																		"src": "2493:4:20"
																	},
																	{
																		"name": "_to",
																		"nodeType": "YulIdentifier",
																		"src": "2507:3:20"
																	},
																	{
																		"name": "tmp",
																		"nodeType": "YulIdentifier",
																		"src": "2520:3:20"
																	},
																	{
																		"name": "_data.length",
																		"nodeType": "YulIdentifier",
																		"src": "2533:12:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2555:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "2471:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:104:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2466:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2522,
														"isOffset": false,
														"isSlot": false,
														"src": "2445:12:20",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 2522,
														"isOffset": false,
														"isSlot": false,
														"src": "2533:12:20",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 2522,
														"isOffset": true,
														"isSlot": false,
														"src": "2431:12:20",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 2520,
														"isOffset": false,
														"isSlot": false,
														"src": "2493:4:20",
														"valueSize": 1
													},
													{
														"declaration": 2518,
														"isOffset": false,
														"isSlot": false,
														"src": "2507:3:20",
														"valueSize": 1
													},
													{
														"declaration": 2525,
														"isOffset": false,
														"isSlot": false,
														"src": "2466:1:20",
														"valueSize": 1
													}
												],
												"id": 2527,
												"nodeType": "InlineAssembly",
												"src": "2367:214:20"
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "1882:363:20",
										"text": " @notice Calls another contract with the given parameters, using delegatecall.\n @dev This method doesn't increase the memory pointer.\n @param _to The address of the contract to call.\n @param _gas The amount of gas to provide for the call.\n @param _data The data to send to the contract.\n @return r The success status of the call."
									},
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegatecall",
									"nameLocation": "2257:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2283:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "2275:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "_gas",
												"nameLocation": "2300:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "2292:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2325:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "2310:20:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2310:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:65:20"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2358:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "2353:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:8:20"
									},
									"scope": 2530,
									"src": "2248:337:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2531,
							"src": "244:2343:20",
							"usedErrors": []
						}
					],
					"src": "39:2549:20"
				},
				"id": 20
			},
			"sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol": {
				"ast": {
					"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/SignatureValidator.sol",
					"exportedSymbols": {
						"IERC1271Wallet": [
							22
						],
						"LibBytes": [
							2374
						],
						"SignatureValidator": [
							2798
						]
					},
					"id": 2799,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2532,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:21"
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/interfaces/IERC1271Wallet.sol",
							"file": "../interfaces/IERC1271Wallet.sol",
							"id": 2533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2799,
							"sourceUnit": 23,
							"src": "64:42:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sourcify-verified/1/0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE/sources/contracts/utils/LibBytes.sol",
							"file": "./LibBytes.sol",
							"id": 2534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2799,
							"sourceUnit": 2375,
							"src": "108:24:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureValidator",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2535,
								"nodeType": "StructuredDocumentation",
								"src": "134:295:21",
								"text": " @dev Contains logic for signature validation.\n Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md)\n Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/"
							},
							"fullyImplemented": true,
							"id": 2798,
							"linearizedBaseContracts": [
								2798
							],
							"name": "SignatureValidator",
							"nameLocation": "438:18:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2ee17a3d",
									"id": 2539,
									"name": "InvalidSignatureLength",
									"nameLocation": "479:22:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "508:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "502:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "502:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:18:21"
									},
									"src": "473:47:21"
								},
								{
									"errorSelector": "ac241e11",
									"id": 2541,
									"name": "EmptySignature",
									"nameLocation": "529:14:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:21"
									},
									"src": "523:23:21"
								},
								{
									"errorSelector": "ad4aac76",
									"id": 2547,
									"name": "InvalidSValue",
									"nameLocation": "555:13:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "575:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "569:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "569:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "_s",
												"nameLocation": "595:2:21",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "587:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:30:21"
									},
									"src": "549:50:21"
								},
								{
									"errorSelector": "e578897e",
									"id": 2553,
									"name": "InvalidVValue",
									"nameLocation": "608:13:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "628:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "622:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "622:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "_v",
												"nameLocation": "648:2:21",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "640:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:30:21"
									},
									"src": "602:50:21"
								},
								{
									"errorSelector": "9dfba852",
									"id": 2561,
									"name": "UnsupportedSignatureType",
									"nameLocation": "661:24:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "692:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "686:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2554,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "686:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "712:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "704:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "_recoverMode",
												"nameLocation": "724:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "719:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:52:21"
									},
									"src": "655:83:21"
								},
								{
									"errorSelector": "6c1719d2",
									"id": 2565,
									"name": "SignerIsAddress0",
									"nameLocation": "747:16:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "770:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "764:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "764:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:18:21"
									},
									"src": "741:41:21"
								},
								{
									"global": false,
									"id": 2568,
									"libraryName": {
										"id": 2566,
										"name": "LibBytes",
										"nameLocations": [
											"792:8:21"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2374,
										"src": "792:8:21"
									},
									"nodeType": "UsingForDirective",
									"src": "786:25:21",
									"typeName": {
										"id": 2567,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "805:5:21",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"id": 2571,
									"mutability": "constant",
									"name": "ERC1271_MAGICVALUE",
									"nameLocation": "1017:18:21",
									"nodeType": "VariableDeclaration",
									"scope": 2798,
									"src": "992:56:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2569,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "992:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783230633133623062",
										"id": 2570,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1038:10:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_549534475_by_1",
											"typeString": "int_const 549534475"
										},
										"value": "0x20c13b0b"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2574,
									"mutability": "constant",
									"name": "ERC1271_MAGICVALUE_BYTES32",
									"nameLocation": "1136:26:21",
									"nodeType": "VariableDeclaration",
									"scope": 2798,
									"src": "1111:64:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2572,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1111:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783136323662613765",
										"id": 2573,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1165:10:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_371636862_by_1",
											"typeString": "int_const 371636862"
										},
										"value": "0x1626ba7e"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2577,
									"mutability": "constant",
									"name": "SIG_TYPE_EIP712",
									"nameLocation": "1235:15:21",
									"nodeType": "VariableDeclaration",
									"scope": 2798,
									"src": "1210:44:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2575,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1210:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1253:1:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2580,
									"mutability": "constant",
									"name": "SIG_TYPE_ETH_SIGN",
									"nameLocation": "1283:17:21",
									"nodeType": "VariableDeclaration",
									"scope": 2798,
									"src": "1258:46:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1258:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1303:1:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2583,
									"mutability": "constant",
									"name": "SIG_TYPE_WALLET_BYTES32",
									"nameLocation": "1333:23:21",
									"nodeType": "VariableDeclaration",
									"scope": 2798,
									"src": "1308:52:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1308:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1359:1:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "1883:2200:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2593,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "1893:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1904:6:21",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1893:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3636",
														"id": 2595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1914:2:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_66_by_1",
															"typeString": "int_const 66"
														},
														"value": "66"
													},
													"src": "1893:23:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2601,
												"nodeType": "IfStatement",
												"src": "1889:70:21",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 2598,
																"name": "_signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2588,
																"src": "1948:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 2597,
															"name": "InvalidSignatureLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "1925:22:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (bytes memory) pure"
															}
														},
														"id": 2599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1925:34:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2600,
													"nodeType": "RevertStatement",
													"src": "1918:41:21"
												}
											},
											{
												"assignments": [
													2603
												],
												"declarations": [
													{
														"constant": false,
														"id": 2603,
														"mutability": "mutable",
														"name": "signatureType",
														"nameLocation": "1973:13:21",
														"nodeType": "VariableDeclaration",
														"scope": 2714,
														"src": "1965:21:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1965:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2606,
																	"name": "_signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "2010:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2021:6:21",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2010:17:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2010:21:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2604,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "1989:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2000:9:21",
														"memberName": "readUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2351,
														"src": "1989:20:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,uint256) pure returns (uint8)"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1989:43:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1965:67:21"
											},
											{
												"assignments": [
													2613
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "2090:1:21",
														"nodeType": "VariableDeclaration",
														"scope": 2714,
														"src": "2084:7:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2612,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2084:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2618,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3634",
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2115:2:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															}
														],
														"expression": {
															"id": 2614,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "2094:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2105:9:21",
														"memberName": "readUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2351,
														"src": "2094:20:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_uint8_$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,uint256) pure returns (uint8)"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2094:24:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2084:34:21"
											},
											{
												"assignments": [
													2620
												],
												"declarations": [
													{
														"constant": false,
														"id": 2620,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "2132:1:21",
														"nodeType": "VariableDeclaration",
														"scope": 2714,
														"src": "2124:9:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2619,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2124:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2625,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2159:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 2621,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "2136:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2147:11:21",
														"memberName": "readBytes32",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "2136:22:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,uint256) pure returns (bytes32)"
														}
													},
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:25:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2124:37:21"
											},
											{
												"assignments": [
													2627
												],
												"declarations": [
													{
														"constant": false,
														"id": 2627,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "2175:1:21",
														"nodeType": "VariableDeclaration",
														"scope": 2714,
														"src": "2167:9:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2626,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2167:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2632,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2202:2:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"expression": {
															"id": 2628,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "2179:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2190:11:21",
														"memberName": "readBytes32",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "2179:22:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,uint256) pure returns (bytes32)"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:26:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2167:38:21"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2635,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2627,
																"src": "3204:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3196:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2633,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3196:7:21",
																"typeDescriptions": {}
															}
														},
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3196:10:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3209:66:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "3196:79:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2645,
												"nodeType": "IfStatement",
												"src": "3192:135:21",
												"trueBody": {
													"id": 2644,
													"nodeType": "Block",
													"src": "3277:50:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2640,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2588,
																		"src": "3306:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	{
																		"id": 2641,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2627,
																		"src": "3318:1:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2639,
																	"name": "InvalidSValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "3292:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes memory,bytes32) pure"
																	}
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3292:28:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2643,
															"nodeType": "RevertStatement",
															"src": "3285:35:21"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2646,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "3337:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3237",
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3342:2:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "3337:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2649,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "3348:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3238",
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3353:2:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28_by_1",
																"typeString": "int_const 28"
															},
															"value": "28"
														},
														"src": "3348:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3337:18:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2659,
												"nodeType": "IfStatement",
												"src": "3333:74:21",
												"trueBody": {
													"id": 2658,
													"nodeType": "Block",
													"src": "3357:50:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2654,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2588,
																		"src": "3386:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	{
																		"id": 2655,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "3398:1:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 2653,
																	"name": "InvalidVValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2553,
																	"src": "3372:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (bytes memory,uint256) pure"
																	}
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3372:28:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2657,
															"nodeType": "RevertStatement",
															"src": "3365:35:21"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2660,
														"name": "signatureType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "3447:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2661,
														"name": "SIG_TYPE_EIP712",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2577,
														"src": "3464:15:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3447:32:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2673,
															"name": "signatureType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "3608:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2674,
															"name": "SIG_TYPE_ETH_SIGN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "3625:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3608:34:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2698,
														"nodeType": "Block",
														"src": "3805:147:21",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2693,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "3913:10:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		{
																			"id": 2694,
																			"name": "signatureType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "3925:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "74727565",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3940:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 2692,
																		"name": "UnsupportedSignatureType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "3888:24:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
																			"typeString": "function (bytes memory,uint256,bool) pure"
																		}
																	},
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3888:57:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2697,
																"nodeType": "RevertStatement",
																"src": "3881:64:21"
															}
														]
													},
													"id": 2699,
													"nodeType": "IfStatement",
													"src": "3604:348:21",
													"trueBody": {
														"id": 2691,
														"nodeType": "Block",
														"src": "3644:155:21",
														"statements": [
															{
																"expression": {
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2676,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "3652:6:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																								"id": 2681,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3707:34:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																									"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																								},
																								"value": "\u0019Ethereum Signed Message:\n32"
																							},
																							{
																								"id": 2682,
																								"name": "_hash",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2586,
																								"src": "3743:5:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																									"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 2679,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "3690:3:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 2680,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "3694:12:21",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "3690:16:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 2683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3690:59:21",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2678,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "3680:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 2684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3680:70:21",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 2685,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2613,
																				"src": "3760:1:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"id": 2686,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2620,
																				"src": "3771:1:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 2687,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2627,
																				"src": "3782:1:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2677,
																			"name": "ecrecover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967290,
																			"src": "3661:9:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																				"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																			}
																		},
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3661:130:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3652:139:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2690,
																"nodeType": "ExpressionStatement",
																"src": "3652:139:21"
															}
														]
													}
												},
												"id": 2700,
												"nodeType": "IfStatement",
												"src": "3443:509:21",
												"trueBody": {
													"id": 2672,
													"nodeType": "Block",
													"src": "3481:117:21",
													"statements": [
														{
															"expression": {
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2663,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2591,
																	"src": "3489:6:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2665,
																			"name": "_hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "3508:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 2666,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2613,
																			"src": "3515:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 2667,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "3518:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 2668,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "3521:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2664,
																		"name": "ecrecover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967290,
																		"src": "3498:9:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																			"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																		}
																	},
																	"id": 2669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3498:25:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3489:34:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2671,
															"nodeType": "ExpressionStatement",
															"src": "3489:34:21"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2701,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2591,
														"src": "3999:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4017:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4009:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2702,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4009:7:21",
																"typeDescriptions": {}
															}
														},
														"id": 2705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4009:12:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3999:22:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2711,
												"nodeType": "IfStatement",
												"src": "3995:63:21",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 2708,
																"name": "_signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2588,
																"src": "4047:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 2707,
															"name": "SignerIsAddress0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "4030:16:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (bytes memory) pure"
															}
														},
														"id": 2709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4030:28:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2710,
													"nodeType": "RevertStatement",
													"src": "4023:35:21"
												}
											},
											{
												"expression": {
													"id": 2712,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2591,
													"src": "4072:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2592,
												"id": 2713,
												"nodeType": "Return",
												"src": "4065:13:21"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "1485:279:21",
										"text": " @notice Recover the signer of hash, assuming it's an EOA account\n @dev Only for SignatureType.EIP712 and SignatureType.EthSign signatures\n @param _hash      Hash that was signed\n   encoded as (bytes32 r, bytes32 s, uint8 v, ... , SignatureType sigType)"
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nameLocation": "1776:13:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "1803:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "1795:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2585,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1829:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "1814:25:21",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1814:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:54:21"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1875:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "1867:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1866:16:21"
									},
									"scope": 2798,
									"src": "1767:2316:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "4547:815:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2727,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "4557:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4568:6:21",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4557:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4578:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4557:22:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2735,
												"nodeType": "IfStatement",
												"src": "4553:66:21",
												"trueBody": {
													"id": 2734,
													"nodeType": "Block",
													"src": "4581:38:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2731,
																	"name": "EmptySignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "4596:14:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4596:16:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2733,
															"nodeType": "RevertStatement",
															"src": "4589:23:21"
														}
													]
												}
											},
											{
												"assignments": [
													2737
												],
												"declarations": [
													{
														"constant": false,
														"id": 2737,
														"mutability": "mutable",
														"name": "signatureType",
														"nameLocation": "4633:13:21",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "4625:21:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4625:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2747,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2740,
																"name": "_signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2722,
																"src": "4655:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 2745,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2741,
																		"name": "_signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2722,
																		"src": "4666:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4677:6:21",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4666:17:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4686:1:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4666:21:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4655:33:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4649:5:21",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 2738,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4649:5:21",
															"typeDescriptions": {}
														}
													},
													"id": 2746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4649:40:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4625:64:21"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2748,
															"name": "signatureType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "4699:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2749,
															"name": "SIG_TYPE_EIP712",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "4716:15:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4699:32:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2751,
															"name": "signatureType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "4735:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2752,
															"name": "SIG_TYPE_ETH_SIGN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "4752:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4735:34:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4699:70:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2765,
															"name": "signatureType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "4898:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2766,
															"name": "SIG_TYPE_WALLET_BYTES32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2583,
															"src": "4915:23:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4898:40:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2793,
														"nodeType": "Block",
														"src": "5158:200:21",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2788,
																			"name": "_signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "5318:10:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		{
																			"id": 2789,
																			"name": "signatureType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "5330:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 2790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5345:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 2787,
																		"name": "UnsupportedSignatureType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "5293:24:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
																			"typeString": "function (bytes memory,uint256,bool) pure"
																		}
																	},
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5293:58:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2792,
																"nodeType": "RevertStatement",
																"src": "5286:65:21"
															}
														]
													},
													"id": 2794,
													"nodeType": "IfStatement",
													"src": "4894:464:21",
													"trueBody": {
														"id": 2786,
														"nodeType": "Block",
														"src": "4940:212:21",
														"statements": [
															{
																"expression": {
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2768,
																		"name": "valid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2725,
																		"src": "5022:5:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2769,
																			"name": "ERC1271_MAGICVALUE_BYTES32",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "5030:26:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2774,
																					"name": "_hash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "5101:5:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 2775,
																						"name": "_signature",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2722,
																						"src": "5108:10:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						}
																					},
																					"endExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2780,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 2777,
																								"name": "_signature",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2722,
																								"src": "5121:10:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 2778,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5132:6:21",
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "5121:17:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2779,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5141:1:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "5121:21:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2781,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexRangeAccess",
																					"src": "5108:35:21",
																					"startExpression": {
																						"hexValue": "30",
																						"id": 2776,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5119:1:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr_slice",
																						"typeString": "bytes calldata slice"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes_calldata_ptr_slice",
																						"typeString": "bytes calldata slice"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2771,
																							"name": "_signer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2720,
																							"src": "5075:7:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2770,
																						"name": "IERC1271Wallet",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 22,
																						"src": "5060:14:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC1271Wallet_$22_$",
																							"typeString": "type(contract IERC1271Wallet)"
																						}
																					},
																					"id": 2772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5060:23:21",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1271Wallet_$22",
																						"typeString": "contract IERC1271Wallet"
																					}
																				},
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5084:16:21",
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 21,
																				"src": "5060:40:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
																				}
																			},
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5060:84:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "5030:114:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5022:122:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2785,
																"nodeType": "ExpressionStatement",
																"src": "5022:122:21"
															}
														]
													}
												},
												"id": 2795,
												"nodeType": "IfStatement",
												"src": "4695:663:21",
												"trueBody": {
													"id": 2764,
													"nodeType": "Block",
													"src": "4771:117:21",
													"statements": [
														{
															"expression": {
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2755,
																	"name": "valid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2725,
																	"src": "4829:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2757,
																				"name": "_hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "4851:5:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 2758,
																				"name": "_signature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2722,
																				"src": "4858:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			],
																			"id": 2756,
																			"name": "recoverSigner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2715,
																			"src": "4837:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$",
																				"typeString": "function (bytes32,bytes calldata) pure returns (address)"
																			}
																		},
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4837:32:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2760,
																		"name": "_signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2720,
																		"src": "4873:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4837:43:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4829:51:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2763,
															"nodeType": "ExpressionStatement",
															"src": "4829:51:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "4086:322:21",
										"text": " @notice Returns true if the provided signature is valid for the given signer.\n @dev Supports SignatureType.EIP712, SignatureType.EthSign, and ERC1271 signatures\n @param _hash      Hash that was signed\n @param _signer    Address of the signer candidate\n @param _signature Signature byte array"
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "4420:16:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "4450:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4442:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "4469:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4461:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "4497:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4482:25:21",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4482:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:75:21"
									},
									"returnParameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "4540:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4535:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4535:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4534:12:21"
									},
									"scope": 2798,
									"src": "4411:951:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2799,
							"src": "430:4934:21",
							"usedErrors": [
								2539,
								2541,
								2547,
								2553,
								2561,
								2565
							]
						}
					],
					"src": "39:5326:21"
				},
				"id": 21
			}
		}
	}
}